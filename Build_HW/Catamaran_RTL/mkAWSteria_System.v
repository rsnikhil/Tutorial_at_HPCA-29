//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
//
// Ports:
// Name                         I/O  size props
// host_AXI4_S_awready            O     1 reg
// host_AXI4_S_wready             O     1 reg
// host_AXI4_S_bvalid             O     1 reg
// host_AXI4_S_bid                O    16 reg
// host_AXI4_S_bresp              O     2 reg
// host_AXI4_S_arready            O     1 reg
// host_AXI4_S_rvalid             O     1 reg
// host_AXI4_S_rid                O    16 reg
// host_AXI4_S_rdata              O   512 reg
// host_AXI4_S_rresp              O     2 reg
// host_AXI4_S_rlast              O     1 reg
// host_AXI4L_S_awready           O     1 reg
// host_AXI4L_S_wready            O     1 reg
// host_AXI4L_S_bvalid            O     1 reg
// host_AXI4L_S_bresp             O     2 reg
// host_AXI4L_S_arready           O     1 reg
// host_AXI4L_S_rvalid            O     1 reg
// host_AXI4L_S_rresp             O     2 reg
// host_AXI4L_S_rdata             O    32 reg
// ddr_A_M_awvalid                O     1 reg
// ddr_A_M_awid                   O    16 reg
// ddr_A_M_awaddr                 O    64 reg
// ddr_A_M_awlen                  O     8 reg
// ddr_A_M_awsize                 O     3 reg
// ddr_A_M_awburst                O     2 reg
// ddr_A_M_awlock                 O     1 reg
// ddr_A_M_awcache                O     4 reg
// ddr_A_M_awprot                 O     3 reg
// ddr_A_M_awqos                  O     4 reg
// ddr_A_M_awregion               O     4 reg
// ddr_A_M_wvalid                 O     1 reg
// ddr_A_M_wdata                  O   512 reg
// ddr_A_M_wstrb                  O    64 reg
// ddr_A_M_wlast                  O     1 reg
// ddr_A_M_bready                 O     1 reg
// ddr_A_M_arvalid                O     1 reg
// ddr_A_M_arid                   O    16 reg
// ddr_A_M_araddr                 O    64 reg
// ddr_A_M_arlen                  O     8 reg
// ddr_A_M_arsize                 O     3 reg
// ddr_A_M_arburst                O     2 reg
// ddr_A_M_arlock                 O     1 reg
// ddr_A_M_arcache                O     4 reg
// ddr_A_M_arprot                 O     3 reg
// ddr_A_M_arqos                  O     4 reg
// ddr_A_M_arregion               O     4 reg
// ddr_A_M_rready                 O     1 reg
// ddr_B_M_awvalid                O     1 reg
// ddr_B_M_awid                   O    16 reg
// ddr_B_M_awaddr                 O    64 reg
// ddr_B_M_awlen                  O     8 reg
// ddr_B_M_awsize                 O     3 reg
// ddr_B_M_awburst                O     2 reg
// ddr_B_M_awlock                 O     1 reg
// ddr_B_M_awcache                O     4 reg
// ddr_B_M_awprot                 O     3 reg
// ddr_B_M_awqos                  O     4 reg
// ddr_B_M_awregion               O     4 reg
// ddr_B_M_wvalid                 O     1 reg
// ddr_B_M_wdata                  O   512 reg
// ddr_B_M_wstrb                  O    64 reg
// ddr_B_M_wlast                  O     1 reg
// ddr_B_M_bready                 O     1 reg
// ddr_B_M_arvalid                O     1 reg
// ddr_B_M_arid                   O    16 reg
// ddr_B_M_araddr                 O    64 reg
// ddr_B_M_arlen                  O     8 reg
// ddr_B_M_arsize                 O     3 reg
// ddr_B_M_arburst                O     2 reg
// ddr_B_M_arlock                 O     1 reg
// ddr_B_M_arcache                O     4 reg
// ddr_B_M_arprot                 O     3 reg
// ddr_B_M_arqos                  O     4 reg
// ddr_B_M_arregion               O     4 reg
// ddr_B_M_rready                 O     1 reg
// ddr_C_M_awvalid                O     1 reg
// ddr_C_M_awid                   O    16 reg
// ddr_C_M_awaddr                 O    64 reg
// ddr_C_M_awlen                  O     8 reg
// ddr_C_M_awsize                 O     3 reg
// ddr_C_M_awburst                O     2 reg
// ddr_C_M_awlock                 O     1 reg
// ddr_C_M_awcache                O     4 reg
// ddr_C_M_awprot                 O     3 reg
// ddr_C_M_awqos                  O     4 reg
// ddr_C_M_awregion               O     4 reg
// ddr_C_M_wvalid                 O     1 reg
// ddr_C_M_wdata                  O   512 reg
// ddr_C_M_wstrb                  O    64 reg
// ddr_C_M_wlast                  O     1 reg
// ddr_C_M_bready                 O     1 reg
// ddr_C_M_arvalid                O     1 reg
// ddr_C_M_arid                   O    16 reg
// ddr_C_M_araddr                 O    64 reg
// ddr_C_M_arlen                  O     8 reg
// ddr_C_M_arsize                 O     3 reg
// ddr_C_M_arburst                O     2 reg
// ddr_C_M_arlock                 O     1 reg
// ddr_C_M_arcache                O     4 reg
// ddr_C_M_arprot                 O     3 reg
// ddr_C_M_arqos                  O     4 reg
// ddr_C_M_arregion               O     4 reg
// ddr_C_M_rready                 O     1 reg
// ddr_D_M_awvalid                O     1 reg
// ddr_D_M_awid                   O    16 reg
// ddr_D_M_awaddr                 O    64 reg
// ddr_D_M_awlen                  O     8 reg
// ddr_D_M_awsize                 O     3 reg
// ddr_D_M_awburst                O     2 reg
// ddr_D_M_awlock                 O     1 reg
// ddr_D_M_awcache                O     4 reg
// ddr_D_M_awprot                 O     3 reg
// ddr_D_M_awqos                  O     4 reg
// ddr_D_M_awregion               O     4 reg
// ddr_D_M_wvalid                 O     1 reg
// ddr_D_M_wdata                  O   512 reg
// ddr_D_M_wstrb                  O    64 reg
// ddr_D_M_wlast                  O     1 reg
// ddr_D_M_bready                 O     1 reg
// ddr_D_M_arvalid                O     1 reg
// ddr_D_M_arid                   O    16 reg
// ddr_D_M_araddr                 O    64 reg
// ddr_D_M_arlen                  O     8 reg
// ddr_D_M_arsize                 O     3 reg
// ddr_D_M_arburst                O     2 reg
// ddr_D_M_arlock                 O     1 reg
// ddr_D_M_arcache                O     4 reg
// ddr_D_M_arprot                 O     3 reg
// ddr_D_M_arqos                  O     4 reg
// ddr_D_M_arregion               O     4 reg
// ddr_D_M_rready                 O     1 reg
// m_halted                       O     1 const
// CLK_clk1                       I     1 clock
// CLK_clk2                       I     1 clock
// CLK_clk3                       I     1 clock
// CLK_clk4                       I     1 clock
// CLK_clk5                       I     1 clock
// CLK                            I     1 clock
// RST_N                          I     1 reset
// host_AXI4_S_awvalid            I     1
// host_AXI4_S_awid               I    16 reg
// host_AXI4_S_awaddr             I    64 reg
// host_AXI4_S_awlen              I     8 reg
// host_AXI4_S_awsize             I     3 reg
// host_AXI4_S_awburst            I     2 reg
// host_AXI4_S_awlock             I     1 reg
// host_AXI4_S_awcache            I     4 reg
// host_AXI4_S_awprot             I     3 reg
// host_AXI4_S_awqos              I     4 reg
// host_AXI4_S_awregion           I     4 reg
// host_AXI4_S_wvalid             I     1
// host_AXI4_S_wdata              I   512 reg
// host_AXI4_S_wstrb              I    64 reg
// host_AXI4_S_wlast              I     1 reg
// host_AXI4_S_bready             I     1
// host_AXI4_S_arvalid            I     1
// host_AXI4_S_arid               I    16 reg
// host_AXI4_S_araddr             I    64 reg
// host_AXI4_S_arlen              I     8 reg
// host_AXI4_S_arsize             I     3 reg
// host_AXI4_S_arburst            I     2 reg
// host_AXI4_S_arlock             I     1 reg
// host_AXI4_S_arcache            I     4 reg
// host_AXI4_S_arprot             I     3 reg
// host_AXI4_S_arqos              I     4 reg
// host_AXI4_S_arregion           I     4 reg
// host_AXI4_S_rready             I     1
// host_AXI4L_S_awvalid           I     1
// host_AXI4L_S_awaddr            I    32 reg
// host_AXI4L_S_awprot            I     3 reg
// host_AXI4L_S_wvalid            I     1
// host_AXI4L_S_wdata             I    32 reg
// host_AXI4L_S_wstrb             I     4 reg
// host_AXI4L_S_bready            I     1
// host_AXI4L_S_arvalid           I     1
// host_AXI4L_S_araddr            I    32 reg
// host_AXI4L_S_arprot            I     3 reg
// host_AXI4L_S_rready            I     1
// ddr_A_M_awready                I     1
// ddr_A_M_wready                 I     1
// ddr_A_M_bvalid                 I     1
// ddr_A_M_bid                    I    16 reg
// ddr_A_M_bresp                  I     2 reg
// ddr_A_M_arready                I     1
// ddr_A_M_rvalid                 I     1
// ddr_A_M_rid                    I    16 reg
// ddr_A_M_rdata                  I   512 reg
// ddr_A_M_rresp                  I     2 reg
// ddr_A_M_rlast                  I     1 reg
// ddr_B_M_awready                I     1
// ddr_B_M_wready                 I     1
// ddr_B_M_bvalid                 I     1
// ddr_B_M_bid                    I    16 reg
// ddr_B_M_bresp                  I     2 reg
// ddr_B_M_arready                I     1
// ddr_B_M_rvalid                 I     1
// ddr_B_M_rid                    I    16 reg
// ddr_B_M_rdata                  I   512 reg
// ddr_B_M_rresp                  I     2 reg
// ddr_B_M_rlast                  I     1 reg
// ddr_C_M_awready                I     1
// ddr_C_M_wready                 I     1
// ddr_C_M_bvalid                 I     1
// ddr_C_M_bid                    I    16 reg
// ddr_C_M_bresp                  I     2 reg
// ddr_C_M_arready                I     1
// ddr_C_M_rvalid                 I     1
// ddr_C_M_rid                    I    16 reg
// ddr_C_M_rdata                  I   512 reg
// ddr_C_M_rresp                  I     2 reg
// ddr_C_M_rlast                  I     1 reg
// ddr_D_M_awready                I     1
// ddr_D_M_wready                 I     1
// ddr_D_M_bvalid                 I     1
// ddr_D_M_bid                    I    16 reg
// ddr_D_M_bresp                  I     2 reg
// ddr_D_M_arready                I     1
// ddr_D_M_rvalid                 I     1
// ddr_D_M_rid                    I    16 reg
// ddr_D_M_rdata                  I   512 reg
// ddr_D_M_rresp                  I     2 reg
// ddr_D_M_rlast                  I     1 reg
// m_env_ready_env_ready          I     1 reg
// m_glcount_glcount              I    64 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkAWSteria_System(CLK_clk1,
			 CLK_clk2,
			 CLK_clk3,
			 CLK_clk4,
			 CLK_clk5,
			 CLK,
			 RST_N,

			 host_AXI4_S_awvalid,
			 host_AXI4_S_awid,
			 host_AXI4_S_awaddr,
			 host_AXI4_S_awlen,
			 host_AXI4_S_awsize,
			 host_AXI4_S_awburst,
			 host_AXI4_S_awlock,
			 host_AXI4_S_awcache,
			 host_AXI4_S_awprot,
			 host_AXI4_S_awqos,
			 host_AXI4_S_awregion,

			 host_AXI4_S_awready,

			 host_AXI4_S_wvalid,
			 host_AXI4_S_wdata,
			 host_AXI4_S_wstrb,
			 host_AXI4_S_wlast,

			 host_AXI4_S_wready,

			 host_AXI4_S_bvalid,

			 host_AXI4_S_bid,

			 host_AXI4_S_bresp,

			 host_AXI4_S_bready,

			 host_AXI4_S_arvalid,
			 host_AXI4_S_arid,
			 host_AXI4_S_araddr,
			 host_AXI4_S_arlen,
			 host_AXI4_S_arsize,
			 host_AXI4_S_arburst,
			 host_AXI4_S_arlock,
			 host_AXI4_S_arcache,
			 host_AXI4_S_arprot,
			 host_AXI4_S_arqos,
			 host_AXI4_S_arregion,

			 host_AXI4_S_arready,

			 host_AXI4_S_rvalid,

			 host_AXI4_S_rid,

			 host_AXI4_S_rdata,

			 host_AXI4_S_rresp,

			 host_AXI4_S_rlast,

			 host_AXI4_S_rready,

			 host_AXI4L_S_awvalid,
			 host_AXI4L_S_awaddr,
			 host_AXI4L_S_awprot,

			 host_AXI4L_S_awready,

			 host_AXI4L_S_wvalid,
			 host_AXI4L_S_wdata,
			 host_AXI4L_S_wstrb,

			 host_AXI4L_S_wready,

			 host_AXI4L_S_bvalid,

			 host_AXI4L_S_bresp,

			 host_AXI4L_S_bready,

			 host_AXI4L_S_arvalid,
			 host_AXI4L_S_araddr,
			 host_AXI4L_S_arprot,

			 host_AXI4L_S_arready,

			 host_AXI4L_S_rvalid,

			 host_AXI4L_S_rresp,

			 host_AXI4L_S_rdata,

			 host_AXI4L_S_rready,

			 ddr_A_M_awvalid,

			 ddr_A_M_awid,

			 ddr_A_M_awaddr,

			 ddr_A_M_awlen,

			 ddr_A_M_awsize,

			 ddr_A_M_awburst,

			 ddr_A_M_awlock,

			 ddr_A_M_awcache,

			 ddr_A_M_awprot,

			 ddr_A_M_awqos,

			 ddr_A_M_awregion,

			 ddr_A_M_awready,

			 ddr_A_M_wvalid,

			 ddr_A_M_wdata,

			 ddr_A_M_wstrb,

			 ddr_A_M_wlast,

			 ddr_A_M_wready,

			 ddr_A_M_bvalid,
			 ddr_A_M_bid,
			 ddr_A_M_bresp,

			 ddr_A_M_bready,

			 ddr_A_M_arvalid,

			 ddr_A_M_arid,

			 ddr_A_M_araddr,

			 ddr_A_M_arlen,

			 ddr_A_M_arsize,

			 ddr_A_M_arburst,

			 ddr_A_M_arlock,

			 ddr_A_M_arcache,

			 ddr_A_M_arprot,

			 ddr_A_M_arqos,

			 ddr_A_M_arregion,

			 ddr_A_M_arready,

			 ddr_A_M_rvalid,
			 ddr_A_M_rid,
			 ddr_A_M_rdata,
			 ddr_A_M_rresp,
			 ddr_A_M_rlast,

			 ddr_A_M_rready,

			 ddr_B_M_awvalid,

			 ddr_B_M_awid,

			 ddr_B_M_awaddr,

			 ddr_B_M_awlen,

			 ddr_B_M_awsize,

			 ddr_B_M_awburst,

			 ddr_B_M_awlock,

			 ddr_B_M_awcache,

			 ddr_B_M_awprot,

			 ddr_B_M_awqos,

			 ddr_B_M_awregion,

			 ddr_B_M_awready,

			 ddr_B_M_wvalid,

			 ddr_B_M_wdata,

			 ddr_B_M_wstrb,

			 ddr_B_M_wlast,

			 ddr_B_M_wready,

			 ddr_B_M_bvalid,
			 ddr_B_M_bid,
			 ddr_B_M_bresp,

			 ddr_B_M_bready,

			 ddr_B_M_arvalid,

			 ddr_B_M_arid,

			 ddr_B_M_araddr,

			 ddr_B_M_arlen,

			 ddr_B_M_arsize,

			 ddr_B_M_arburst,

			 ddr_B_M_arlock,

			 ddr_B_M_arcache,

			 ddr_B_M_arprot,

			 ddr_B_M_arqos,

			 ddr_B_M_arregion,

			 ddr_B_M_arready,

			 ddr_B_M_rvalid,
			 ddr_B_M_rid,
			 ddr_B_M_rdata,
			 ddr_B_M_rresp,
			 ddr_B_M_rlast,

			 ddr_B_M_rready,

			 ddr_C_M_awvalid,

			 ddr_C_M_awid,

			 ddr_C_M_awaddr,

			 ddr_C_M_awlen,

			 ddr_C_M_awsize,

			 ddr_C_M_awburst,

			 ddr_C_M_awlock,

			 ddr_C_M_awcache,

			 ddr_C_M_awprot,

			 ddr_C_M_awqos,

			 ddr_C_M_awregion,

			 ddr_C_M_awready,

			 ddr_C_M_wvalid,

			 ddr_C_M_wdata,

			 ddr_C_M_wstrb,

			 ddr_C_M_wlast,

			 ddr_C_M_wready,

			 ddr_C_M_bvalid,
			 ddr_C_M_bid,
			 ddr_C_M_bresp,

			 ddr_C_M_bready,

			 ddr_C_M_arvalid,

			 ddr_C_M_arid,

			 ddr_C_M_araddr,

			 ddr_C_M_arlen,

			 ddr_C_M_arsize,

			 ddr_C_M_arburst,

			 ddr_C_M_arlock,

			 ddr_C_M_arcache,

			 ddr_C_M_arprot,

			 ddr_C_M_arqos,

			 ddr_C_M_arregion,

			 ddr_C_M_arready,

			 ddr_C_M_rvalid,
			 ddr_C_M_rid,
			 ddr_C_M_rdata,
			 ddr_C_M_rresp,
			 ddr_C_M_rlast,

			 ddr_C_M_rready,

			 ddr_D_M_awvalid,

			 ddr_D_M_awid,

			 ddr_D_M_awaddr,

			 ddr_D_M_awlen,

			 ddr_D_M_awsize,

			 ddr_D_M_awburst,

			 ddr_D_M_awlock,

			 ddr_D_M_awcache,

			 ddr_D_M_awprot,

			 ddr_D_M_awqos,

			 ddr_D_M_awregion,

			 ddr_D_M_awready,

			 ddr_D_M_wvalid,

			 ddr_D_M_wdata,

			 ddr_D_M_wstrb,

			 ddr_D_M_wlast,

			 ddr_D_M_wready,

			 ddr_D_M_bvalid,
			 ddr_D_M_bid,
			 ddr_D_M_bresp,

			 ddr_D_M_bready,

			 ddr_D_M_arvalid,

			 ddr_D_M_arid,

			 ddr_D_M_araddr,

			 ddr_D_M_arlen,

			 ddr_D_M_arsize,

			 ddr_D_M_arburst,

			 ddr_D_M_arlock,

			 ddr_D_M_arcache,

			 ddr_D_M_arprot,

			 ddr_D_M_arqos,

			 ddr_D_M_arregion,

			 ddr_D_M_arready,

			 ddr_D_M_rvalid,
			 ddr_D_M_rid,
			 ddr_D_M_rdata,
			 ddr_D_M_rresp,
			 ddr_D_M_rlast,

			 ddr_D_M_rready,

			 m_env_ready_env_ready,

			 m_halted,

			 m_glcount_glcount);
  input  CLK_clk1;
  input  CLK_clk2;
  input  CLK_clk3;
  input  CLK_clk4;
  input  CLK_clk5;
  input  CLK;
  input  RST_N;

  // action method host_AXI4_S_m_awvalid
  input  host_AXI4_S_awvalid;
  input  [15 : 0] host_AXI4_S_awid;
  input  [63 : 0] host_AXI4_S_awaddr;
  input  [7 : 0] host_AXI4_S_awlen;
  input  [2 : 0] host_AXI4_S_awsize;
  input  [1 : 0] host_AXI4_S_awburst;
  input  host_AXI4_S_awlock;
  input  [3 : 0] host_AXI4_S_awcache;
  input  [2 : 0] host_AXI4_S_awprot;
  input  [3 : 0] host_AXI4_S_awqos;
  input  [3 : 0] host_AXI4_S_awregion;

  // value method host_AXI4_S_m_awready
  output host_AXI4_S_awready;

  // action method host_AXI4_S_m_wvalid
  input  host_AXI4_S_wvalid;
  input  [511 : 0] host_AXI4_S_wdata;
  input  [63 : 0] host_AXI4_S_wstrb;
  input  host_AXI4_S_wlast;

  // value method host_AXI4_S_m_wready
  output host_AXI4_S_wready;

  // value method host_AXI4_S_m_bvalid
  output host_AXI4_S_bvalid;

  // value method host_AXI4_S_m_bid
  output [15 : 0] host_AXI4_S_bid;

  // value method host_AXI4_S_m_bresp
  output [1 : 0] host_AXI4_S_bresp;

  // value method host_AXI4_S_m_buser

  // action method host_AXI4_S_m_bready
  input  host_AXI4_S_bready;

  // action method host_AXI4_S_m_arvalid
  input  host_AXI4_S_arvalid;
  input  [15 : 0] host_AXI4_S_arid;
  input  [63 : 0] host_AXI4_S_araddr;
  input  [7 : 0] host_AXI4_S_arlen;
  input  [2 : 0] host_AXI4_S_arsize;
  input  [1 : 0] host_AXI4_S_arburst;
  input  host_AXI4_S_arlock;
  input  [3 : 0] host_AXI4_S_arcache;
  input  [2 : 0] host_AXI4_S_arprot;
  input  [3 : 0] host_AXI4_S_arqos;
  input  [3 : 0] host_AXI4_S_arregion;

  // value method host_AXI4_S_m_arready
  output host_AXI4_S_arready;

  // value method host_AXI4_S_m_rvalid
  output host_AXI4_S_rvalid;

  // value method host_AXI4_S_m_rid
  output [15 : 0] host_AXI4_S_rid;

  // value method host_AXI4_S_m_rdata
  output [511 : 0] host_AXI4_S_rdata;

  // value method host_AXI4_S_m_rresp
  output [1 : 0] host_AXI4_S_rresp;

  // value method host_AXI4_S_m_rlast
  output host_AXI4_S_rlast;

  // value method host_AXI4_S_m_ruser

  // action method host_AXI4_S_m_rready
  input  host_AXI4_S_rready;

  // action method host_AXI4L_S_m_awvalid
  input  host_AXI4L_S_awvalid;
  input  [31 : 0] host_AXI4L_S_awaddr;
  input  [2 : 0] host_AXI4L_S_awprot;

  // value method host_AXI4L_S_m_awready
  output host_AXI4L_S_awready;

  // action method host_AXI4L_S_m_wvalid
  input  host_AXI4L_S_wvalid;
  input  [31 : 0] host_AXI4L_S_wdata;
  input  [3 : 0] host_AXI4L_S_wstrb;

  // value method host_AXI4L_S_m_wready
  output host_AXI4L_S_wready;

  // value method host_AXI4L_S_m_bvalid
  output host_AXI4L_S_bvalid;

  // value method host_AXI4L_S_m_bresp
  output [1 : 0] host_AXI4L_S_bresp;

  // value method host_AXI4L_S_m_buser

  // action method host_AXI4L_S_m_bready
  input  host_AXI4L_S_bready;

  // action method host_AXI4L_S_m_arvalid
  input  host_AXI4L_S_arvalid;
  input  [31 : 0] host_AXI4L_S_araddr;
  input  [2 : 0] host_AXI4L_S_arprot;

  // value method host_AXI4L_S_m_arready
  output host_AXI4L_S_arready;

  // value method host_AXI4L_S_m_rvalid
  output host_AXI4L_S_rvalid;

  // value method host_AXI4L_S_m_rresp
  output [1 : 0] host_AXI4L_S_rresp;

  // value method host_AXI4L_S_m_rdata
  output [31 : 0] host_AXI4L_S_rdata;

  // value method host_AXI4L_S_m_ruser

  // action method host_AXI4L_S_m_rready
  input  host_AXI4L_S_rready;

  // value method ddr_A_M_m_awvalid
  output ddr_A_M_awvalid;

  // value method ddr_A_M_m_awid
  output [15 : 0] ddr_A_M_awid;

  // value method ddr_A_M_m_awaddr
  output [63 : 0] ddr_A_M_awaddr;

  // value method ddr_A_M_m_awlen
  output [7 : 0] ddr_A_M_awlen;

  // value method ddr_A_M_m_awsize
  output [2 : 0] ddr_A_M_awsize;

  // value method ddr_A_M_m_awburst
  output [1 : 0] ddr_A_M_awburst;

  // value method ddr_A_M_m_awlock
  output ddr_A_M_awlock;

  // value method ddr_A_M_m_awcache
  output [3 : 0] ddr_A_M_awcache;

  // value method ddr_A_M_m_awprot
  output [2 : 0] ddr_A_M_awprot;

  // value method ddr_A_M_m_awqos
  output [3 : 0] ddr_A_M_awqos;

  // value method ddr_A_M_m_awregion
  output [3 : 0] ddr_A_M_awregion;

  // value method ddr_A_M_m_awuser

  // action method ddr_A_M_m_awready
  input  ddr_A_M_awready;

  // value method ddr_A_M_m_wvalid
  output ddr_A_M_wvalid;

  // value method ddr_A_M_m_wdata
  output [511 : 0] ddr_A_M_wdata;

  // value method ddr_A_M_m_wstrb
  output [63 : 0] ddr_A_M_wstrb;

  // value method ddr_A_M_m_wlast
  output ddr_A_M_wlast;

  // value method ddr_A_M_m_wuser

  // action method ddr_A_M_m_wready
  input  ddr_A_M_wready;

  // action method ddr_A_M_m_bvalid
  input  ddr_A_M_bvalid;
  input  [15 : 0] ddr_A_M_bid;
  input  [1 : 0] ddr_A_M_bresp;

  // value method ddr_A_M_m_bready
  output ddr_A_M_bready;

  // value method ddr_A_M_m_arvalid
  output ddr_A_M_arvalid;

  // value method ddr_A_M_m_arid
  output [15 : 0] ddr_A_M_arid;

  // value method ddr_A_M_m_araddr
  output [63 : 0] ddr_A_M_araddr;

  // value method ddr_A_M_m_arlen
  output [7 : 0] ddr_A_M_arlen;

  // value method ddr_A_M_m_arsize
  output [2 : 0] ddr_A_M_arsize;

  // value method ddr_A_M_m_arburst
  output [1 : 0] ddr_A_M_arburst;

  // value method ddr_A_M_m_arlock
  output ddr_A_M_arlock;

  // value method ddr_A_M_m_arcache
  output [3 : 0] ddr_A_M_arcache;

  // value method ddr_A_M_m_arprot
  output [2 : 0] ddr_A_M_arprot;

  // value method ddr_A_M_m_arqos
  output [3 : 0] ddr_A_M_arqos;

  // value method ddr_A_M_m_arregion
  output [3 : 0] ddr_A_M_arregion;

  // value method ddr_A_M_m_aruser

  // action method ddr_A_M_m_arready
  input  ddr_A_M_arready;

  // action method ddr_A_M_m_rvalid
  input  ddr_A_M_rvalid;
  input  [15 : 0] ddr_A_M_rid;
  input  [511 : 0] ddr_A_M_rdata;
  input  [1 : 0] ddr_A_M_rresp;
  input  ddr_A_M_rlast;

  // value method ddr_A_M_m_rready
  output ddr_A_M_rready;

  // value method ddr_B_M_m_awvalid
  output ddr_B_M_awvalid;

  // value method ddr_B_M_m_awid
  output [15 : 0] ddr_B_M_awid;

  // value method ddr_B_M_m_awaddr
  output [63 : 0] ddr_B_M_awaddr;

  // value method ddr_B_M_m_awlen
  output [7 : 0] ddr_B_M_awlen;

  // value method ddr_B_M_m_awsize
  output [2 : 0] ddr_B_M_awsize;

  // value method ddr_B_M_m_awburst
  output [1 : 0] ddr_B_M_awburst;

  // value method ddr_B_M_m_awlock
  output ddr_B_M_awlock;

  // value method ddr_B_M_m_awcache
  output [3 : 0] ddr_B_M_awcache;

  // value method ddr_B_M_m_awprot
  output [2 : 0] ddr_B_M_awprot;

  // value method ddr_B_M_m_awqos
  output [3 : 0] ddr_B_M_awqos;

  // value method ddr_B_M_m_awregion
  output [3 : 0] ddr_B_M_awregion;

  // value method ddr_B_M_m_awuser

  // action method ddr_B_M_m_awready
  input  ddr_B_M_awready;

  // value method ddr_B_M_m_wvalid
  output ddr_B_M_wvalid;

  // value method ddr_B_M_m_wdata
  output [511 : 0] ddr_B_M_wdata;

  // value method ddr_B_M_m_wstrb
  output [63 : 0] ddr_B_M_wstrb;

  // value method ddr_B_M_m_wlast
  output ddr_B_M_wlast;

  // value method ddr_B_M_m_wuser

  // action method ddr_B_M_m_wready
  input  ddr_B_M_wready;

  // action method ddr_B_M_m_bvalid
  input  ddr_B_M_bvalid;
  input  [15 : 0] ddr_B_M_bid;
  input  [1 : 0] ddr_B_M_bresp;

  // value method ddr_B_M_m_bready
  output ddr_B_M_bready;

  // value method ddr_B_M_m_arvalid
  output ddr_B_M_arvalid;

  // value method ddr_B_M_m_arid
  output [15 : 0] ddr_B_M_arid;

  // value method ddr_B_M_m_araddr
  output [63 : 0] ddr_B_M_araddr;

  // value method ddr_B_M_m_arlen
  output [7 : 0] ddr_B_M_arlen;

  // value method ddr_B_M_m_arsize
  output [2 : 0] ddr_B_M_arsize;

  // value method ddr_B_M_m_arburst
  output [1 : 0] ddr_B_M_arburst;

  // value method ddr_B_M_m_arlock
  output ddr_B_M_arlock;

  // value method ddr_B_M_m_arcache
  output [3 : 0] ddr_B_M_arcache;

  // value method ddr_B_M_m_arprot
  output [2 : 0] ddr_B_M_arprot;

  // value method ddr_B_M_m_arqos
  output [3 : 0] ddr_B_M_arqos;

  // value method ddr_B_M_m_arregion
  output [3 : 0] ddr_B_M_arregion;

  // value method ddr_B_M_m_aruser

  // action method ddr_B_M_m_arready
  input  ddr_B_M_arready;

  // action method ddr_B_M_m_rvalid
  input  ddr_B_M_rvalid;
  input  [15 : 0] ddr_B_M_rid;
  input  [511 : 0] ddr_B_M_rdata;
  input  [1 : 0] ddr_B_M_rresp;
  input  ddr_B_M_rlast;

  // value method ddr_B_M_m_rready
  output ddr_B_M_rready;

  // value method ddr_C_M_m_awvalid
  output ddr_C_M_awvalid;

  // value method ddr_C_M_m_awid
  output [15 : 0] ddr_C_M_awid;

  // value method ddr_C_M_m_awaddr
  output [63 : 0] ddr_C_M_awaddr;

  // value method ddr_C_M_m_awlen
  output [7 : 0] ddr_C_M_awlen;

  // value method ddr_C_M_m_awsize
  output [2 : 0] ddr_C_M_awsize;

  // value method ddr_C_M_m_awburst
  output [1 : 0] ddr_C_M_awburst;

  // value method ddr_C_M_m_awlock
  output ddr_C_M_awlock;

  // value method ddr_C_M_m_awcache
  output [3 : 0] ddr_C_M_awcache;

  // value method ddr_C_M_m_awprot
  output [2 : 0] ddr_C_M_awprot;

  // value method ddr_C_M_m_awqos
  output [3 : 0] ddr_C_M_awqos;

  // value method ddr_C_M_m_awregion
  output [3 : 0] ddr_C_M_awregion;

  // value method ddr_C_M_m_awuser

  // action method ddr_C_M_m_awready
  input  ddr_C_M_awready;

  // value method ddr_C_M_m_wvalid
  output ddr_C_M_wvalid;

  // value method ddr_C_M_m_wdata
  output [511 : 0] ddr_C_M_wdata;

  // value method ddr_C_M_m_wstrb
  output [63 : 0] ddr_C_M_wstrb;

  // value method ddr_C_M_m_wlast
  output ddr_C_M_wlast;

  // value method ddr_C_M_m_wuser

  // action method ddr_C_M_m_wready
  input  ddr_C_M_wready;

  // action method ddr_C_M_m_bvalid
  input  ddr_C_M_bvalid;
  input  [15 : 0] ddr_C_M_bid;
  input  [1 : 0] ddr_C_M_bresp;

  // value method ddr_C_M_m_bready
  output ddr_C_M_bready;

  // value method ddr_C_M_m_arvalid
  output ddr_C_M_arvalid;

  // value method ddr_C_M_m_arid
  output [15 : 0] ddr_C_M_arid;

  // value method ddr_C_M_m_araddr
  output [63 : 0] ddr_C_M_araddr;

  // value method ddr_C_M_m_arlen
  output [7 : 0] ddr_C_M_arlen;

  // value method ddr_C_M_m_arsize
  output [2 : 0] ddr_C_M_arsize;

  // value method ddr_C_M_m_arburst
  output [1 : 0] ddr_C_M_arburst;

  // value method ddr_C_M_m_arlock
  output ddr_C_M_arlock;

  // value method ddr_C_M_m_arcache
  output [3 : 0] ddr_C_M_arcache;

  // value method ddr_C_M_m_arprot
  output [2 : 0] ddr_C_M_arprot;

  // value method ddr_C_M_m_arqos
  output [3 : 0] ddr_C_M_arqos;

  // value method ddr_C_M_m_arregion
  output [3 : 0] ddr_C_M_arregion;

  // value method ddr_C_M_m_aruser

  // action method ddr_C_M_m_arready
  input  ddr_C_M_arready;

  // action method ddr_C_M_m_rvalid
  input  ddr_C_M_rvalid;
  input  [15 : 0] ddr_C_M_rid;
  input  [511 : 0] ddr_C_M_rdata;
  input  [1 : 0] ddr_C_M_rresp;
  input  ddr_C_M_rlast;

  // value method ddr_C_M_m_rready
  output ddr_C_M_rready;

  // value method ddr_D_M_m_awvalid
  output ddr_D_M_awvalid;

  // value method ddr_D_M_m_awid
  output [15 : 0] ddr_D_M_awid;

  // value method ddr_D_M_m_awaddr
  output [63 : 0] ddr_D_M_awaddr;

  // value method ddr_D_M_m_awlen
  output [7 : 0] ddr_D_M_awlen;

  // value method ddr_D_M_m_awsize
  output [2 : 0] ddr_D_M_awsize;

  // value method ddr_D_M_m_awburst
  output [1 : 0] ddr_D_M_awburst;

  // value method ddr_D_M_m_awlock
  output ddr_D_M_awlock;

  // value method ddr_D_M_m_awcache
  output [3 : 0] ddr_D_M_awcache;

  // value method ddr_D_M_m_awprot
  output [2 : 0] ddr_D_M_awprot;

  // value method ddr_D_M_m_awqos
  output [3 : 0] ddr_D_M_awqos;

  // value method ddr_D_M_m_awregion
  output [3 : 0] ddr_D_M_awregion;

  // value method ddr_D_M_m_awuser

  // action method ddr_D_M_m_awready
  input  ddr_D_M_awready;

  // value method ddr_D_M_m_wvalid
  output ddr_D_M_wvalid;

  // value method ddr_D_M_m_wdata
  output [511 : 0] ddr_D_M_wdata;

  // value method ddr_D_M_m_wstrb
  output [63 : 0] ddr_D_M_wstrb;

  // value method ddr_D_M_m_wlast
  output ddr_D_M_wlast;

  // value method ddr_D_M_m_wuser

  // action method ddr_D_M_m_wready
  input  ddr_D_M_wready;

  // action method ddr_D_M_m_bvalid
  input  ddr_D_M_bvalid;
  input  [15 : 0] ddr_D_M_bid;
  input  [1 : 0] ddr_D_M_bresp;

  // value method ddr_D_M_m_bready
  output ddr_D_M_bready;

  // value method ddr_D_M_m_arvalid
  output ddr_D_M_arvalid;

  // value method ddr_D_M_m_arid
  output [15 : 0] ddr_D_M_arid;

  // value method ddr_D_M_m_araddr
  output [63 : 0] ddr_D_M_araddr;

  // value method ddr_D_M_m_arlen
  output [7 : 0] ddr_D_M_arlen;

  // value method ddr_D_M_m_arsize
  output [2 : 0] ddr_D_M_arsize;

  // value method ddr_D_M_m_arburst
  output [1 : 0] ddr_D_M_arburst;

  // value method ddr_D_M_m_arlock
  output ddr_D_M_arlock;

  // value method ddr_D_M_m_arcache
  output [3 : 0] ddr_D_M_arcache;

  // value method ddr_D_M_m_arprot
  output [2 : 0] ddr_D_M_arprot;

  // value method ddr_D_M_m_arqos
  output [3 : 0] ddr_D_M_arqos;

  // value method ddr_D_M_m_arregion
  output [3 : 0] ddr_D_M_arregion;

  // value method ddr_D_M_m_aruser

  // action method ddr_D_M_m_arready
  input  ddr_D_M_arready;

  // action method ddr_D_M_m_rvalid
  input  ddr_D_M_rvalid;
  input  [15 : 0] ddr_D_M_rid;
  input  [511 : 0] ddr_D_M_rdata;
  input  [1 : 0] ddr_D_M_rresp;
  input  ddr_D_M_rlast;

  // value method ddr_D_M_m_rready
  output ddr_D_M_rready;

  // action method m_env_ready
  input  m_env_ready_env_ready;

  // value method m_halted
  output m_halted;

  // action method m_glcount
  input  [63 : 0] m_glcount_glcount;

  // signals for module outputs
  wire [511 : 0] ddr_A_M_wdata,
		 ddr_B_M_wdata,
		 ddr_C_M_wdata,
		 ddr_D_M_wdata,
		 host_AXI4_S_rdata;
  wire [63 : 0] ddr_A_M_araddr,
		ddr_A_M_awaddr,
		ddr_A_M_wstrb,
		ddr_B_M_araddr,
		ddr_B_M_awaddr,
		ddr_B_M_wstrb,
		ddr_C_M_araddr,
		ddr_C_M_awaddr,
		ddr_C_M_wstrb,
		ddr_D_M_araddr,
		ddr_D_M_awaddr,
		ddr_D_M_wstrb;
  wire [31 : 0] host_AXI4L_S_rdata;
  wire [15 : 0] ddr_A_M_arid,
		ddr_A_M_awid,
		ddr_B_M_arid,
		ddr_B_M_awid,
		ddr_C_M_arid,
		ddr_C_M_awid,
		ddr_D_M_arid,
		ddr_D_M_awid,
		host_AXI4_S_bid,
		host_AXI4_S_rid;
  wire [7 : 0] ddr_A_M_arlen,
	       ddr_A_M_awlen,
	       ddr_B_M_arlen,
	       ddr_B_M_awlen,
	       ddr_C_M_arlen,
	       ddr_C_M_awlen,
	       ddr_D_M_arlen,
	       ddr_D_M_awlen;
  wire [3 : 0] ddr_A_M_arcache,
	       ddr_A_M_arqos,
	       ddr_A_M_arregion,
	       ddr_A_M_awcache,
	       ddr_A_M_awqos,
	       ddr_A_M_awregion,
	       ddr_B_M_arcache,
	       ddr_B_M_arqos,
	       ddr_B_M_arregion,
	       ddr_B_M_awcache,
	       ddr_B_M_awqos,
	       ddr_B_M_awregion,
	       ddr_C_M_arcache,
	       ddr_C_M_arqos,
	       ddr_C_M_arregion,
	       ddr_C_M_awcache,
	       ddr_C_M_awqos,
	       ddr_C_M_awregion,
	       ddr_D_M_arcache,
	       ddr_D_M_arqos,
	       ddr_D_M_arregion,
	       ddr_D_M_awcache,
	       ddr_D_M_awqos,
	       ddr_D_M_awregion;
  wire [2 : 0] ddr_A_M_arprot,
	       ddr_A_M_arsize,
	       ddr_A_M_awprot,
	       ddr_A_M_awsize,
	       ddr_B_M_arprot,
	       ddr_B_M_arsize,
	       ddr_B_M_awprot,
	       ddr_B_M_awsize,
	       ddr_C_M_arprot,
	       ddr_C_M_arsize,
	       ddr_C_M_awprot,
	       ddr_C_M_awsize,
	       ddr_D_M_arprot,
	       ddr_D_M_arsize,
	       ddr_D_M_awprot,
	       ddr_D_M_awsize;
  wire [1 : 0] ddr_A_M_arburst,
	       ddr_A_M_awburst,
	       ddr_B_M_arburst,
	       ddr_B_M_awburst,
	       ddr_C_M_arburst,
	       ddr_C_M_awburst,
	       ddr_D_M_arburst,
	       ddr_D_M_awburst,
	       host_AXI4L_S_bresp,
	       host_AXI4L_S_rresp,
	       host_AXI4_S_bresp,
	       host_AXI4_S_rresp;
  wire ddr_A_M_arlock,
       ddr_A_M_arvalid,
       ddr_A_M_awlock,
       ddr_A_M_awvalid,
       ddr_A_M_bready,
       ddr_A_M_rready,
       ddr_A_M_wlast,
       ddr_A_M_wvalid,
       ddr_B_M_arlock,
       ddr_B_M_arvalid,
       ddr_B_M_awlock,
       ddr_B_M_awvalid,
       ddr_B_M_bready,
       ddr_B_M_rready,
       ddr_B_M_wlast,
       ddr_B_M_wvalid,
       ddr_C_M_arlock,
       ddr_C_M_arvalid,
       ddr_C_M_awlock,
       ddr_C_M_awvalid,
       ddr_C_M_bready,
       ddr_C_M_rready,
       ddr_C_M_wlast,
       ddr_C_M_wvalid,
       ddr_D_M_arlock,
       ddr_D_M_arvalid,
       ddr_D_M_awlock,
       ddr_D_M_awvalid,
       ddr_D_M_bready,
       ddr_D_M_rready,
       ddr_D_M_wlast,
       ddr_D_M_wvalid,
       host_AXI4L_S_arready,
       host_AXI4L_S_awready,
       host_AXI4L_S_bvalid,
       host_AXI4L_S_rvalid,
       host_AXI4L_S_wready,
       host_AXI4_S_arready,
       host_AXI4_S_awready,
       host_AXI4_S_bvalid,
       host_AXI4_S_rlast,
       host_AXI4_S_rvalid,
       host_AXI4_S_wready,
       m_halted;

  // register axi4_downsizer_rg_addr
  reg [63 : 0] axi4_downsizer_rg_addr;
  wire [63 : 0] axi4_downsizer_rg_addr$D_IN;
  wire axi4_downsizer_rg_addr$EN;

  // register axi4_downsizer_rg_buffer
  reg [511 : 0] axi4_downsizer_rg_buffer;
  wire [511 : 0] axi4_downsizer_rg_buffer$D_IN;
  wire axi4_downsizer_rg_buffer$EN;

  // register axi4_downsizer_rg_last
  reg axi4_downsizer_rg_last;
  wire axi4_downsizer_rg_last$D_IN, axi4_downsizer_rg_last$EN;

  // register axi4_downsizer_rg_rd_rsp_state
  reg [1 : 0] axi4_downsizer_rg_rd_rsp_state;
  wire [1 : 0] axi4_downsizer_rg_rd_rsp_state$D_IN;
  wire axi4_downsizer_rg_rd_rsp_state$EN;

  // register axi4_downsizer_rg_req_addr
  reg [63 : 0] axi4_downsizer_rg_req_addr;
  wire [63 : 0] axi4_downsizer_rg_req_addr$D_IN;
  wire axi4_downsizer_rg_req_addr$EN;

  // register axi4_downsizer_rg_req_beat
  reg [3 : 0] axi4_downsizer_rg_req_beat;
  wire [3 : 0] axi4_downsizer_rg_req_beat$D_IN;
  wire axi4_downsizer_rg_req_beat$EN;

  // register axi4_downsizer_rg_req_burst
  reg [7 : 0] axi4_downsizer_rg_req_burst;
  wire [7 : 0] axi4_downsizer_rg_req_burst$D_IN;
  wire axi4_downsizer_rg_req_burst$EN;

  // register axi4_downsizer_rg_resp
  reg [1 : 0] axi4_downsizer_rg_resp;
  wire [1 : 0] axi4_downsizer_rg_resp$D_IN;
  wire axi4_downsizer_rg_resp$EN;

  // register axi4_downsizer_rg_rsp_beat
  reg [3 : 0] axi4_downsizer_rg_rsp_beat;
  wire [3 : 0] axi4_downsizer_rg_rsp_beat$D_IN;
  wire axi4_downsizer_rg_rsp_beat$EN;

  // register axi4_downsizer_rg_tot_beats
  reg [11 : 0] axi4_downsizer_rg_tot_beats;
  wire [11 : 0] axi4_downsizer_rg_tot_beats$D_IN;
  wire axi4_downsizer_rg_tot_beats$EN;

  // register axi4_downsizer_rg_wr_state
  reg [1 : 0] axi4_downsizer_rg_wr_state;
  wire [1 : 0] axi4_downsizer_rg_wr_state$D_IN;
  wire axi4_downsizer_rg_wr_state$EN;

  // register axi4_downsizer_rg_wrr
  reg [17 : 0] axi4_downsizer_rg_wrr;
  wire [17 : 0] axi4_downsizer_rg_wrr$D_IN;
  wire axi4_downsizer_rg_wrr$EN;

  // register axi4_downsizer_wrBuffer
  reg [447 : 0] axi4_downsizer_wrBuffer;
  wire [447 : 0] axi4_downsizer_wrBuffer$D_IN;
  wire axi4_downsizer_wrBuffer$EN;

  // register axi4_downsizer_wrLen
  reg [7 : 0] axi4_downsizer_wrLen;
  wire [7 : 0] axi4_downsizer_wrLen$D_IN;
  wire axi4_downsizer_wrLen$EN;

  // register axi4_downsizer_wrStbBuff
  reg [55 : 0] axi4_downsizer_wrStbBuff;
  wire [55 : 0] axi4_downsizer_wrStbBuff$D_IN;
  wire axi4_downsizer_wrStbBuff$EN;

  // register rg_dm_addr
  reg [6 : 0] rg_dm_addr;
  wire [6 : 0] rg_dm_addr$D_IN;
  wire rg_dm_addr$EN;

  // register rg_env_ready
  reg rg_env_ready;
  wire rg_env_ready$D_IN, rg_env_ready$EN;

  // register rg_init_state
  reg [1 : 0] rg_init_state;
  wire [1 : 0] rg_init_state$D_IN;
  wire rg_init_state$EN;

  // register rg_state_dm
  reg [1 : 0] rg_state_dm;
  wire [1 : 0] rg_state_dm$D_IN;
  wire rg_state_dm$EN;

  // register rg_uart_buf
  reg [31 : 0] rg_uart_buf;
  wire [31 : 0] rg_uart_buf$D_IN;
  wire rg_uart_buf$EN;

  // register rg_uart_timeout
  reg [15 : 0] rg_uart_timeout;
  wire [15 : 0] rg_uart_timeout$D_IN;
  wire rg_uart_timeout$EN;

  // ports of submodule awsteria_core
  wire [511 : 0] awsteria_core$dma_S_rdata,
		 awsteria_core$dma_S_wdata,
		 awsteria_core$mem_M_rdata,
		 awsteria_core$mem_M_wdata;
  wire [63 : 0] awsteria_core$dma_S_araddr,
		awsteria_core$dma_S_awaddr,
		awsteria_core$dma_S_wstrb,
		awsteria_core$mem_M_araddr,
		awsteria_core$mem_M_awaddr,
		awsteria_core$mem_M_wstrb,
		awsteria_core$mmio_M_araddr,
		awsteria_core$mmio_M_awaddr,
		awsteria_core$mmio_M_rdata,
		awsteria_core$mmio_M_wdata;
  wire [39 : 0] awsteria_core$se_dmi_request_enq_x;
  wire [31 : 0] awsteria_core$fi_misc_enq_x,
		awsteria_core$fo_misc_first,
		awsteria_core$se_control_status_request_enq_x,
		awsteria_core$se_control_status_response_first,
		awsteria_core$se_dmi_response_first;
  wire [15 : 0] awsteria_core$dma_S_arid,
		awsteria_core$dma_S_awid,
		awsteria_core$dma_S_bid,
		awsteria_core$dma_S_rid,
		awsteria_core$mem_M_arid,
		awsteria_core$mem_M_awid,
		awsteria_core$mem_M_bid,
		awsteria_core$mem_M_rid,
		awsteria_core$mmio_M_arid,
		awsteria_core$mmio_M_awid,
		awsteria_core$mmio_M_bid,
		awsteria_core$mmio_M_rid;
  wire [7 : 0] awsteria_core$dma_S_arlen,
	       awsteria_core$dma_S_awlen,
	       awsteria_core$mem_M_arlen,
	       awsteria_core$mem_M_awlen,
	       awsteria_core$mmio_M_arlen,
	       awsteria_core$mmio_M_awlen,
	       awsteria_core$mmio_M_wstrb;
  wire [4 : 0] awsteria_core$ext_interrupts_x;
  wire [3 : 0] awsteria_core$dma_S_arcache,
	       awsteria_core$dma_S_arqos,
	       awsteria_core$dma_S_arregion,
	       awsteria_core$dma_S_awcache,
	       awsteria_core$dma_S_awqos,
	       awsteria_core$dma_S_awregion,
	       awsteria_core$mem_M_arcache,
	       awsteria_core$mem_M_arqos,
	       awsteria_core$mem_M_arregion,
	       awsteria_core$mem_M_awcache,
	       awsteria_core$mem_M_awqos,
	       awsteria_core$mem_M_awregion,
	       awsteria_core$mmio_M_arcache,
	       awsteria_core$mmio_M_arqos,
	       awsteria_core$mmio_M_arregion,
	       awsteria_core$mmio_M_awcache,
	       awsteria_core$mmio_M_awqos,
	       awsteria_core$mmio_M_awregion;
  wire [2 : 0] awsteria_core$dma_S_arprot,
	       awsteria_core$dma_S_arsize,
	       awsteria_core$dma_S_awprot,
	       awsteria_core$dma_S_awsize,
	       awsteria_core$mem_M_arprot,
	       awsteria_core$mem_M_arsize,
	       awsteria_core$mem_M_awprot,
	       awsteria_core$mem_M_awsize,
	       awsteria_core$mmio_M_arprot,
	       awsteria_core$mmio_M_arsize,
	       awsteria_core$mmio_M_awprot,
	       awsteria_core$mmio_M_awsize;
  wire [1 : 0] awsteria_core$dma_S_arburst,
	       awsteria_core$dma_S_awburst,
	       awsteria_core$dma_S_bresp,
	       awsteria_core$dma_S_rresp,
	       awsteria_core$mem_M_arburst,
	       awsteria_core$mem_M_awburst,
	       awsteria_core$mem_M_bresp,
	       awsteria_core$mem_M_rresp,
	       awsteria_core$mmio_M_arburst,
	       awsteria_core$mmio_M_awburst,
	       awsteria_core$mmio_M_bresp,
	       awsteria_core$mmio_M_rresp;
  wire awsteria_core$EN_cl_ndm_reset_request_deq,
       awsteria_core$EN_cl_ndm_reset_response_enq,
       awsteria_core$EN_ext_interrupts,
       awsteria_core$EN_fi_misc_enq,
       awsteria_core$EN_fi_nmi_enq,
       awsteria_core$EN_fo_misc_deq,
       awsteria_core$EN_fo_tv_info_deq,
       awsteria_core$EN_se_control_status_request_enq,
       awsteria_core$EN_se_control_status_response_deq,
       awsteria_core$EN_se_dmi_request_enq,
       awsteria_core$EN_se_dmi_response_deq,
       awsteria_core$RDY_cl_ndm_reset_request_deq,
       awsteria_core$RDY_cl_ndm_reset_request_first,
       awsteria_core$RDY_cl_ndm_reset_response_enq,
       awsteria_core$RDY_fi_misc_enq,
       awsteria_core$RDY_fi_nmi_enq,
       awsteria_core$RDY_fo_misc_deq,
       awsteria_core$RDY_fo_misc_first,
       awsteria_core$RDY_fo_tv_info_deq,
       awsteria_core$RDY_se_control_status_request_enq,
       awsteria_core$RDY_se_control_status_response_deq,
       awsteria_core$RDY_se_control_status_response_first,
       awsteria_core$RDY_se_dmi_request_enq,
       awsteria_core$RDY_se_dmi_response_deq,
       awsteria_core$RDY_se_dmi_response_first,
       awsteria_core$dma_S_arlock,
       awsteria_core$dma_S_arready,
       awsteria_core$dma_S_arvalid,
       awsteria_core$dma_S_awlock,
       awsteria_core$dma_S_awready,
       awsteria_core$dma_S_awvalid,
       awsteria_core$dma_S_bready,
       awsteria_core$dma_S_bvalid,
       awsteria_core$dma_S_rlast,
       awsteria_core$dma_S_rready,
       awsteria_core$dma_S_rvalid,
       awsteria_core$dma_S_wlast,
       awsteria_core$dma_S_wready,
       awsteria_core$dma_S_wvalid,
       awsteria_core$fi_nmi_enq_x,
       awsteria_core$mem_M_arlock,
       awsteria_core$mem_M_arready,
       awsteria_core$mem_M_arvalid,
       awsteria_core$mem_M_awlock,
       awsteria_core$mem_M_awready,
       awsteria_core$mem_M_awvalid,
       awsteria_core$mem_M_bready,
       awsteria_core$mem_M_bvalid,
       awsteria_core$mem_M_rlast,
       awsteria_core$mem_M_rready,
       awsteria_core$mem_M_rvalid,
       awsteria_core$mem_M_wlast,
       awsteria_core$mem_M_wready,
       awsteria_core$mem_M_wvalid,
       awsteria_core$mmio_M_arlock,
       awsteria_core$mmio_M_arready,
       awsteria_core$mmio_M_arvalid,
       awsteria_core$mmio_M_awlock,
       awsteria_core$mmio_M_awready,
       awsteria_core$mmio_M_awvalid,
       awsteria_core$mmio_M_bready,
       awsteria_core$mmio_M_bvalid,
       awsteria_core$mmio_M_rlast,
       awsteria_core$mmio_M_rready,
       awsteria_core$mmio_M_rvalid,
       awsteria_core$mmio_M_wlast,
       awsteria_core$mmio_M_wready,
       awsteria_core$mmio_M_wvalid;

  // ports of submodule axi4L_channels
  wire [31 : 0] axi4L_channels$axi4L_S_araddr,
		axi4L_channels$axi4L_S_awaddr,
		axi4L_channels$axi4L_S_rdata,
		axi4L_channels$axi4L_S_wdata,
		axi4L_channels$v_from_host_0_first,
		axi4L_channels$v_from_host_1_first,
		axi4L_channels$v_from_host_2_first,
		axi4L_channels$v_from_host_3_first,
		axi4L_channels$v_from_host_4_first,
		axi4L_channels$v_to_host_0_enq_x,
		axi4L_channels$v_to_host_1_enq_x,
		axi4L_channels$v_to_host_2_enq_x,
		axi4L_channels$v_to_host_3_enq_x,
		axi4L_channels$v_to_host_4_enq_x;
  wire [3 : 0] axi4L_channels$axi4L_S_wstrb;
  wire [2 : 0] axi4L_channels$axi4L_S_arprot, axi4L_channels$axi4L_S_awprot;
  wire [1 : 0] axi4L_channels$axi4L_S_bresp, axi4L_channels$axi4L_S_rresp;
  wire axi4L_channels$EN_v_from_host_0_deq,
       axi4L_channels$EN_v_from_host_1_deq,
       axi4L_channels$EN_v_from_host_2_deq,
       axi4L_channels$EN_v_from_host_3_deq,
       axi4L_channels$EN_v_from_host_4_deq,
       axi4L_channels$EN_v_to_host_0_enq,
       axi4L_channels$EN_v_to_host_1_enq,
       axi4L_channels$EN_v_to_host_2_enq,
       axi4L_channels$EN_v_to_host_3_enq,
       axi4L_channels$EN_v_to_host_4_enq,
       axi4L_channels$RDY_v_from_host_0_deq,
       axi4L_channels$RDY_v_from_host_0_first,
       axi4L_channels$RDY_v_from_host_1_deq,
       axi4L_channels$RDY_v_from_host_1_first,
       axi4L_channels$RDY_v_from_host_2_deq,
       axi4L_channels$RDY_v_from_host_2_first,
       axi4L_channels$RDY_v_from_host_3_deq,
       axi4L_channels$RDY_v_from_host_3_first,
       axi4L_channels$RDY_v_from_host_4_deq,
       axi4L_channels$RDY_v_from_host_4_first,
       axi4L_channels$RDY_v_to_host_0_enq,
       axi4L_channels$RDY_v_to_host_1_enq,
       axi4L_channels$RDY_v_to_host_2_enq,
       axi4L_channels$RDY_v_to_host_3_enq,
       axi4L_channels$RDY_v_to_host_4_enq,
       axi4L_channels$axi4L_S_arready,
       axi4L_channels$axi4L_S_arvalid,
       axi4L_channels$axi4L_S_awready,
       axi4L_channels$axi4L_S_awvalid,
       axi4L_channels$axi4L_S_bready,
       axi4L_channels$axi4L_S_bvalid,
       axi4L_channels$axi4L_S_rready,
       axi4L_channels$axi4L_S_rvalid,
       axi4L_channels$axi4L_S_wready,
       axi4L_channels$axi4L_S_wvalid;

  // ports of submodule axi4_downsizer_ff_len
  wire [10 : 0] axi4_downsizer_ff_len$D_IN, axi4_downsizer_ff_len$D_OUT;
  wire axi4_downsizer_ff_len$CLR,
       axi4_downsizer_ff_len$DEQ,
       axi4_downsizer_ff_len$EMPTY_N,
       axi4_downsizer_ff_len$ENQ,
       axi4_downsizer_ff_len$FULL_N;

  // ports of submodule axi4_downsizer_ff_wrRsp
  wire [1 : 0] axi4_downsizer_ff_wrRsp$D_IN, axi4_downsizer_ff_wrRsp$D_OUT;
  wire axi4_downsizer_ff_wrRsp$CLR,
       axi4_downsizer_ff_wrRsp$DEQ,
       axi4_downsizer_ff_wrRsp$EMPTY_N,
       axi4_downsizer_ff_wrRsp$ENQ,
       axi4_downsizer_ff_wrRsp$FULL_N;

  // ports of submodule axi4_downsizer_xactor_from_master_f_rd_addr
  wire [108 : 0] axi4_downsizer_xactor_from_master_f_rd_addr$D_IN,
		 axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT;
  wire axi4_downsizer_xactor_from_master_f_rd_addr$CLR,
       axi4_downsizer_xactor_from_master_f_rd_addr$DEQ,
       axi4_downsizer_xactor_from_master_f_rd_addr$EMPTY_N,
       axi4_downsizer_xactor_from_master_f_rd_addr$ENQ,
       axi4_downsizer_xactor_from_master_f_rd_addr$FULL_N;

  // ports of submodule axi4_downsizer_xactor_from_master_f_rd_data
  wire [530 : 0] axi4_downsizer_xactor_from_master_f_rd_data$D_IN,
		 axi4_downsizer_xactor_from_master_f_rd_data$D_OUT;
  wire axi4_downsizer_xactor_from_master_f_rd_data$CLR,
       axi4_downsizer_xactor_from_master_f_rd_data$DEQ,
       axi4_downsizer_xactor_from_master_f_rd_data$EMPTY_N,
       axi4_downsizer_xactor_from_master_f_rd_data$ENQ,
       axi4_downsizer_xactor_from_master_f_rd_data$FULL_N;

  // ports of submodule axi4_downsizer_xactor_from_master_f_wr_addr
  wire [108 : 0] axi4_downsizer_xactor_from_master_f_wr_addr$D_IN,
		 axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT;
  wire axi4_downsizer_xactor_from_master_f_wr_addr$CLR,
       axi4_downsizer_xactor_from_master_f_wr_addr$DEQ,
       axi4_downsizer_xactor_from_master_f_wr_addr$EMPTY_N,
       axi4_downsizer_xactor_from_master_f_wr_addr$ENQ,
       axi4_downsizer_xactor_from_master_f_wr_addr$FULL_N;

  // ports of submodule axi4_downsizer_xactor_from_master_f_wr_data
  wire [576 : 0] axi4_downsizer_xactor_from_master_f_wr_data$D_IN,
		 axi4_downsizer_xactor_from_master_f_wr_data$D_OUT;
  wire axi4_downsizer_xactor_from_master_f_wr_data$CLR,
       axi4_downsizer_xactor_from_master_f_wr_data$DEQ,
       axi4_downsizer_xactor_from_master_f_wr_data$EMPTY_N,
       axi4_downsizer_xactor_from_master_f_wr_data$ENQ,
       axi4_downsizer_xactor_from_master_f_wr_data$FULL_N;

  // ports of submodule axi4_downsizer_xactor_from_master_f_wr_resp
  wire [17 : 0] axi4_downsizer_xactor_from_master_f_wr_resp$D_IN,
		axi4_downsizer_xactor_from_master_f_wr_resp$D_OUT;
  wire axi4_downsizer_xactor_from_master_f_wr_resp$CLR,
       axi4_downsizer_xactor_from_master_f_wr_resp$DEQ,
       axi4_downsizer_xactor_from_master_f_wr_resp$EMPTY_N,
       axi4_downsizer_xactor_from_master_f_wr_resp$ENQ,
       axi4_downsizer_xactor_from_master_f_wr_resp$FULL_N;

  // ports of submodule axi4_downsizer_xactor_to_slave_f_rd_addr
  wire [108 : 0] axi4_downsizer_xactor_to_slave_f_rd_addr$D_IN,
		 axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT;
  wire axi4_downsizer_xactor_to_slave_f_rd_addr$CLR,
       axi4_downsizer_xactor_to_slave_f_rd_addr$DEQ,
       axi4_downsizer_xactor_to_slave_f_rd_addr$EMPTY_N,
       axi4_downsizer_xactor_to_slave_f_rd_addr$ENQ,
       axi4_downsizer_xactor_to_slave_f_rd_addr$FULL_N;

  // ports of submodule axi4_downsizer_xactor_to_slave_f_rd_data
  wire [82 : 0] axi4_downsizer_xactor_to_slave_f_rd_data$D_IN,
		axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT;
  wire axi4_downsizer_xactor_to_slave_f_rd_data$CLR,
       axi4_downsizer_xactor_to_slave_f_rd_data$DEQ,
       axi4_downsizer_xactor_to_slave_f_rd_data$EMPTY_N,
       axi4_downsizer_xactor_to_slave_f_rd_data$ENQ,
       axi4_downsizer_xactor_to_slave_f_rd_data$FULL_N;

  // ports of submodule axi4_downsizer_xactor_to_slave_f_wr_addr
  wire [108 : 0] axi4_downsizer_xactor_to_slave_f_wr_addr$D_IN,
		 axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT;
  wire axi4_downsizer_xactor_to_slave_f_wr_addr$CLR,
       axi4_downsizer_xactor_to_slave_f_wr_addr$DEQ,
       axi4_downsizer_xactor_to_slave_f_wr_addr$EMPTY_N,
       axi4_downsizer_xactor_to_slave_f_wr_addr$ENQ,
       axi4_downsizer_xactor_to_slave_f_wr_addr$FULL_N;

  // ports of submodule axi4_downsizer_xactor_to_slave_f_wr_data
  wire [72 : 0] axi4_downsizer_xactor_to_slave_f_wr_data$D_IN,
		axi4_downsizer_xactor_to_slave_f_wr_data$D_OUT;
  wire axi4_downsizer_xactor_to_slave_f_wr_data$CLR,
       axi4_downsizer_xactor_to_slave_f_wr_data$DEQ,
       axi4_downsizer_xactor_to_slave_f_wr_data$EMPTY_N,
       axi4_downsizer_xactor_to_slave_f_wr_data$ENQ,
       axi4_downsizer_xactor_to_slave_f_wr_data$FULL_N;

  // ports of submodule axi4_downsizer_xactor_to_slave_f_wr_resp
  wire [17 : 0] axi4_downsizer_xactor_to_slave_f_wr_resp$D_IN,
		axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT;
  wire axi4_downsizer_xactor_to_slave_f_wr_resp$CLR,
       axi4_downsizer_xactor_to_slave_f_wr_resp$DEQ,
       axi4_downsizer_xactor_to_slave_f_wr_resp$EMPTY_N,
       axi4_downsizer_xactor_to_slave_f_wr_resp$ENQ,
       axi4_downsizer_xactor_to_slave_f_wr_resp$FULL_N;

  // ports of submodule axi4_widener_f_araddrs
  wire [63 : 0] axi4_widener_f_araddrs$D_IN, axi4_widener_f_araddrs$D_OUT;
  wire axi4_widener_f_araddrs$CLR,
       axi4_widener_f_araddrs$DEQ,
       axi4_widener_f_araddrs$EMPTY_N,
       axi4_widener_f_araddrs$ENQ,
       axi4_widener_f_araddrs$FULL_N;

  // ports of submodule axi4_widener_xactor_from_master_f_rd_addr
  wire [108 : 0] axi4_widener_xactor_from_master_f_rd_addr$D_IN,
		 axi4_widener_xactor_from_master_f_rd_addr$D_OUT;
  wire axi4_widener_xactor_from_master_f_rd_addr$CLR,
       axi4_widener_xactor_from_master_f_rd_addr$DEQ,
       axi4_widener_xactor_from_master_f_rd_addr$EMPTY_N,
       axi4_widener_xactor_from_master_f_rd_addr$ENQ,
       axi4_widener_xactor_from_master_f_rd_addr$FULL_N;

  // ports of submodule axi4_widener_xactor_from_master_f_rd_data
  wire [82 : 0] axi4_widener_xactor_from_master_f_rd_data$D_IN,
		axi4_widener_xactor_from_master_f_rd_data$D_OUT;
  wire axi4_widener_xactor_from_master_f_rd_data$CLR,
       axi4_widener_xactor_from_master_f_rd_data$DEQ,
       axi4_widener_xactor_from_master_f_rd_data$EMPTY_N,
       axi4_widener_xactor_from_master_f_rd_data$ENQ,
       axi4_widener_xactor_from_master_f_rd_data$FULL_N;

  // ports of submodule axi4_widener_xactor_from_master_f_wr_addr
  wire [108 : 0] axi4_widener_xactor_from_master_f_wr_addr$D_IN,
		 axi4_widener_xactor_from_master_f_wr_addr$D_OUT;
  wire axi4_widener_xactor_from_master_f_wr_addr$CLR,
       axi4_widener_xactor_from_master_f_wr_addr$DEQ,
       axi4_widener_xactor_from_master_f_wr_addr$EMPTY_N,
       axi4_widener_xactor_from_master_f_wr_addr$ENQ,
       axi4_widener_xactor_from_master_f_wr_addr$FULL_N;

  // ports of submodule axi4_widener_xactor_from_master_f_wr_data
  wire [72 : 0] axi4_widener_xactor_from_master_f_wr_data$D_IN,
		axi4_widener_xactor_from_master_f_wr_data$D_OUT;
  wire axi4_widener_xactor_from_master_f_wr_data$CLR,
       axi4_widener_xactor_from_master_f_wr_data$DEQ,
       axi4_widener_xactor_from_master_f_wr_data$EMPTY_N,
       axi4_widener_xactor_from_master_f_wr_data$ENQ,
       axi4_widener_xactor_from_master_f_wr_data$FULL_N;

  // ports of submodule axi4_widener_xactor_from_master_f_wr_resp
  wire [17 : 0] axi4_widener_xactor_from_master_f_wr_resp$D_IN,
		axi4_widener_xactor_from_master_f_wr_resp$D_OUT;
  wire axi4_widener_xactor_from_master_f_wr_resp$CLR,
       axi4_widener_xactor_from_master_f_wr_resp$DEQ,
       axi4_widener_xactor_from_master_f_wr_resp$EMPTY_N,
       axi4_widener_xactor_from_master_f_wr_resp$ENQ,
       axi4_widener_xactor_from_master_f_wr_resp$FULL_N;

  // ports of submodule axi4_widener_xactor_to_slave_f_rd_addr
  wire [108 : 0] axi4_widener_xactor_to_slave_f_rd_addr$D_IN,
		 axi4_widener_xactor_to_slave_f_rd_addr$D_OUT;
  wire axi4_widener_xactor_to_slave_f_rd_addr$CLR,
       axi4_widener_xactor_to_slave_f_rd_addr$DEQ,
       axi4_widener_xactor_to_slave_f_rd_addr$EMPTY_N,
       axi4_widener_xactor_to_slave_f_rd_addr$ENQ,
       axi4_widener_xactor_to_slave_f_rd_addr$FULL_N;

  // ports of submodule axi4_widener_xactor_to_slave_f_rd_data
  wire [530 : 0] axi4_widener_xactor_to_slave_f_rd_data$D_IN,
		 axi4_widener_xactor_to_slave_f_rd_data$D_OUT;
  wire axi4_widener_xactor_to_slave_f_rd_data$CLR,
       axi4_widener_xactor_to_slave_f_rd_data$DEQ,
       axi4_widener_xactor_to_slave_f_rd_data$EMPTY_N,
       axi4_widener_xactor_to_slave_f_rd_data$ENQ,
       axi4_widener_xactor_to_slave_f_rd_data$FULL_N;

  // ports of submodule axi4_widener_xactor_to_slave_f_wr_addr
  wire [108 : 0] axi4_widener_xactor_to_slave_f_wr_addr$D_IN,
		 axi4_widener_xactor_to_slave_f_wr_addr$D_OUT;
  wire axi4_widener_xactor_to_slave_f_wr_addr$CLR,
       axi4_widener_xactor_to_slave_f_wr_addr$DEQ,
       axi4_widener_xactor_to_slave_f_wr_addr$EMPTY_N,
       axi4_widener_xactor_to_slave_f_wr_addr$ENQ,
       axi4_widener_xactor_to_slave_f_wr_addr$FULL_N;

  // ports of submodule axi4_widener_xactor_to_slave_f_wr_data
  wire [576 : 0] axi4_widener_xactor_to_slave_f_wr_data$D_IN,
		 axi4_widener_xactor_to_slave_f_wr_data$D_OUT;
  wire axi4_widener_xactor_to_slave_f_wr_data$CLR,
       axi4_widener_xactor_to_slave_f_wr_data$DEQ,
       axi4_widener_xactor_to_slave_f_wr_data$EMPTY_N,
       axi4_widener_xactor_to_slave_f_wr_data$ENQ,
       axi4_widener_xactor_to_slave_f_wr_data$FULL_N;

  // ports of submodule axi4_widener_xactor_to_slave_f_wr_resp
  wire [17 : 0] axi4_widener_xactor_to_slave_f_wr_resp$D_IN,
		axi4_widener_xactor_to_slave_f_wr_resp$D_OUT;
  wire axi4_widener_xactor_to_slave_f_wr_resp$CLR,
       axi4_widener_xactor_to_slave_f_wr_resp$DEQ,
       axi4_widener_xactor_to_slave_f_wr_resp$EMPTY_N,
       axi4_widener_xactor_to_slave_f_wr_resp$ENQ,
       axi4_widener_xactor_to_slave_f_wr_resp$FULL_N;

  // ports of submodule ddr_fabric
  wire [511 : 0] ddr_fabric$v_from_masters_0_rdata,
		 ddr_fabric$v_from_masters_0_wdata,
		 ddr_fabric$v_from_masters_1_rdata,
		 ddr_fabric$v_from_masters_1_wdata,
		 ddr_fabric$v_from_masters_2_rdata,
		 ddr_fabric$v_from_masters_2_wdata,
		 ddr_fabric$v_to_slaves_0_rdata,
		 ddr_fabric$v_to_slaves_0_wdata,
		 ddr_fabric$v_to_slaves_1_rdata,
		 ddr_fabric$v_to_slaves_1_wdata,
		 ddr_fabric$v_to_slaves_2_rdata,
		 ddr_fabric$v_to_slaves_2_wdata,
		 ddr_fabric$v_to_slaves_3_rdata,
		 ddr_fabric$v_to_slaves_3_wdata;
  wire [63 : 0] ddr_fabric$v_from_masters_0_araddr,
		ddr_fabric$v_from_masters_0_awaddr,
		ddr_fabric$v_from_masters_0_wstrb,
		ddr_fabric$v_from_masters_1_araddr,
		ddr_fabric$v_from_masters_1_awaddr,
		ddr_fabric$v_from_masters_1_wstrb,
		ddr_fabric$v_from_masters_2_araddr,
		ddr_fabric$v_from_masters_2_awaddr,
		ddr_fabric$v_from_masters_2_wstrb,
		ddr_fabric$v_to_slaves_0_araddr,
		ddr_fabric$v_to_slaves_0_awaddr,
		ddr_fabric$v_to_slaves_0_wstrb,
		ddr_fabric$v_to_slaves_1_araddr,
		ddr_fabric$v_to_slaves_1_awaddr,
		ddr_fabric$v_to_slaves_1_wstrb,
		ddr_fabric$v_to_slaves_2_araddr,
		ddr_fabric$v_to_slaves_2_awaddr,
		ddr_fabric$v_to_slaves_2_wstrb,
		ddr_fabric$v_to_slaves_3_araddr,
		ddr_fabric$v_to_slaves_3_awaddr,
		ddr_fabric$v_to_slaves_3_wstrb;
  wire [15 : 0] ddr_fabric$v_from_masters_0_arid,
		ddr_fabric$v_from_masters_0_awid,
		ddr_fabric$v_from_masters_0_bid,
		ddr_fabric$v_from_masters_0_rid,
		ddr_fabric$v_from_masters_1_arid,
		ddr_fabric$v_from_masters_1_awid,
		ddr_fabric$v_from_masters_1_bid,
		ddr_fabric$v_from_masters_1_rid,
		ddr_fabric$v_from_masters_2_arid,
		ddr_fabric$v_from_masters_2_awid,
		ddr_fabric$v_from_masters_2_bid,
		ddr_fabric$v_from_masters_2_rid,
		ddr_fabric$v_to_slaves_0_arid,
		ddr_fabric$v_to_slaves_0_awid,
		ddr_fabric$v_to_slaves_0_bid,
		ddr_fabric$v_to_slaves_0_rid,
		ddr_fabric$v_to_slaves_1_arid,
		ddr_fabric$v_to_slaves_1_awid,
		ddr_fabric$v_to_slaves_1_bid,
		ddr_fabric$v_to_slaves_1_rid,
		ddr_fabric$v_to_slaves_2_arid,
		ddr_fabric$v_to_slaves_2_awid,
		ddr_fabric$v_to_slaves_2_bid,
		ddr_fabric$v_to_slaves_2_rid,
		ddr_fabric$v_to_slaves_3_arid,
		ddr_fabric$v_to_slaves_3_awid,
		ddr_fabric$v_to_slaves_3_bid,
		ddr_fabric$v_to_slaves_3_rid;
  wire [7 : 0] ddr_fabric$v_from_masters_0_arlen,
	       ddr_fabric$v_from_masters_0_awlen,
	       ddr_fabric$v_from_masters_1_arlen,
	       ddr_fabric$v_from_masters_1_awlen,
	       ddr_fabric$v_from_masters_2_arlen,
	       ddr_fabric$v_from_masters_2_awlen,
	       ddr_fabric$v_to_slaves_0_arlen,
	       ddr_fabric$v_to_slaves_0_awlen,
	       ddr_fabric$v_to_slaves_1_arlen,
	       ddr_fabric$v_to_slaves_1_awlen,
	       ddr_fabric$v_to_slaves_2_arlen,
	       ddr_fabric$v_to_slaves_2_awlen,
	       ddr_fabric$v_to_slaves_3_arlen,
	       ddr_fabric$v_to_slaves_3_awlen;
  wire [3 : 0] ddr_fabric$set_verbosity_verbosity,
	       ddr_fabric$v_from_masters_0_arcache,
	       ddr_fabric$v_from_masters_0_arqos,
	       ddr_fabric$v_from_masters_0_arregion,
	       ddr_fabric$v_from_masters_0_awcache,
	       ddr_fabric$v_from_masters_0_awqos,
	       ddr_fabric$v_from_masters_0_awregion,
	       ddr_fabric$v_from_masters_1_arcache,
	       ddr_fabric$v_from_masters_1_arqos,
	       ddr_fabric$v_from_masters_1_arregion,
	       ddr_fabric$v_from_masters_1_awcache,
	       ddr_fabric$v_from_masters_1_awqos,
	       ddr_fabric$v_from_masters_1_awregion,
	       ddr_fabric$v_from_masters_2_arcache,
	       ddr_fabric$v_from_masters_2_arqos,
	       ddr_fabric$v_from_masters_2_arregion,
	       ddr_fabric$v_from_masters_2_awcache,
	       ddr_fabric$v_from_masters_2_awqos,
	       ddr_fabric$v_from_masters_2_awregion,
	       ddr_fabric$v_to_slaves_0_arcache,
	       ddr_fabric$v_to_slaves_0_arqos,
	       ddr_fabric$v_to_slaves_0_arregion,
	       ddr_fabric$v_to_slaves_0_awcache,
	       ddr_fabric$v_to_slaves_0_awqos,
	       ddr_fabric$v_to_slaves_0_awregion,
	       ddr_fabric$v_to_slaves_1_arcache,
	       ddr_fabric$v_to_slaves_1_arqos,
	       ddr_fabric$v_to_slaves_1_arregion,
	       ddr_fabric$v_to_slaves_1_awcache,
	       ddr_fabric$v_to_slaves_1_awqos,
	       ddr_fabric$v_to_slaves_1_awregion,
	       ddr_fabric$v_to_slaves_2_arcache,
	       ddr_fabric$v_to_slaves_2_arqos,
	       ddr_fabric$v_to_slaves_2_arregion,
	       ddr_fabric$v_to_slaves_2_awcache,
	       ddr_fabric$v_to_slaves_2_awqos,
	       ddr_fabric$v_to_slaves_2_awregion,
	       ddr_fabric$v_to_slaves_3_arcache,
	       ddr_fabric$v_to_slaves_3_arqos,
	       ddr_fabric$v_to_slaves_3_arregion,
	       ddr_fabric$v_to_slaves_3_awcache,
	       ddr_fabric$v_to_slaves_3_awqos,
	       ddr_fabric$v_to_slaves_3_awregion;
  wire [2 : 0] ddr_fabric$v_from_masters_0_arprot,
	       ddr_fabric$v_from_masters_0_arsize,
	       ddr_fabric$v_from_masters_0_awprot,
	       ddr_fabric$v_from_masters_0_awsize,
	       ddr_fabric$v_from_masters_1_arprot,
	       ddr_fabric$v_from_masters_1_arsize,
	       ddr_fabric$v_from_masters_1_awprot,
	       ddr_fabric$v_from_masters_1_awsize,
	       ddr_fabric$v_from_masters_2_arprot,
	       ddr_fabric$v_from_masters_2_arsize,
	       ddr_fabric$v_from_masters_2_awprot,
	       ddr_fabric$v_from_masters_2_awsize,
	       ddr_fabric$v_to_slaves_0_arprot,
	       ddr_fabric$v_to_slaves_0_arsize,
	       ddr_fabric$v_to_slaves_0_awprot,
	       ddr_fabric$v_to_slaves_0_awsize,
	       ddr_fabric$v_to_slaves_1_arprot,
	       ddr_fabric$v_to_slaves_1_arsize,
	       ddr_fabric$v_to_slaves_1_awprot,
	       ddr_fabric$v_to_slaves_1_awsize,
	       ddr_fabric$v_to_slaves_2_arprot,
	       ddr_fabric$v_to_slaves_2_arsize,
	       ddr_fabric$v_to_slaves_2_awprot,
	       ddr_fabric$v_to_slaves_2_awsize,
	       ddr_fabric$v_to_slaves_3_arprot,
	       ddr_fabric$v_to_slaves_3_arsize,
	       ddr_fabric$v_to_slaves_3_awprot,
	       ddr_fabric$v_to_slaves_3_awsize;
  wire [1 : 0] ddr_fabric$v_from_masters_0_arburst,
	       ddr_fabric$v_from_masters_0_awburst,
	       ddr_fabric$v_from_masters_0_bresp,
	       ddr_fabric$v_from_masters_0_rresp,
	       ddr_fabric$v_from_masters_1_arburst,
	       ddr_fabric$v_from_masters_1_awburst,
	       ddr_fabric$v_from_masters_1_bresp,
	       ddr_fabric$v_from_masters_1_rresp,
	       ddr_fabric$v_from_masters_2_arburst,
	       ddr_fabric$v_from_masters_2_awburst,
	       ddr_fabric$v_from_masters_2_bresp,
	       ddr_fabric$v_from_masters_2_rresp,
	       ddr_fabric$v_to_slaves_0_arburst,
	       ddr_fabric$v_to_slaves_0_awburst,
	       ddr_fabric$v_to_slaves_0_bresp,
	       ddr_fabric$v_to_slaves_0_rresp,
	       ddr_fabric$v_to_slaves_1_arburst,
	       ddr_fabric$v_to_slaves_1_awburst,
	       ddr_fabric$v_to_slaves_1_bresp,
	       ddr_fabric$v_to_slaves_1_rresp,
	       ddr_fabric$v_to_slaves_2_arburst,
	       ddr_fabric$v_to_slaves_2_awburst,
	       ddr_fabric$v_to_slaves_2_bresp,
	       ddr_fabric$v_to_slaves_2_rresp,
	       ddr_fabric$v_to_slaves_3_arburst,
	       ddr_fabric$v_to_slaves_3_awburst,
	       ddr_fabric$v_to_slaves_3_bresp,
	       ddr_fabric$v_to_slaves_3_rresp;
  wire ddr_fabric$EN_reset,
       ddr_fabric$EN_set_verbosity,
       ddr_fabric$v_from_masters_0_arlock,
       ddr_fabric$v_from_masters_0_arready,
       ddr_fabric$v_from_masters_0_arvalid,
       ddr_fabric$v_from_masters_0_awlock,
       ddr_fabric$v_from_masters_0_awready,
       ddr_fabric$v_from_masters_0_awvalid,
       ddr_fabric$v_from_masters_0_bready,
       ddr_fabric$v_from_masters_0_bvalid,
       ddr_fabric$v_from_masters_0_rlast,
       ddr_fabric$v_from_masters_0_rready,
       ddr_fabric$v_from_masters_0_rvalid,
       ddr_fabric$v_from_masters_0_wlast,
       ddr_fabric$v_from_masters_0_wready,
       ddr_fabric$v_from_masters_0_wvalid,
       ddr_fabric$v_from_masters_1_arlock,
       ddr_fabric$v_from_masters_1_arready,
       ddr_fabric$v_from_masters_1_arvalid,
       ddr_fabric$v_from_masters_1_awlock,
       ddr_fabric$v_from_masters_1_awready,
       ddr_fabric$v_from_masters_1_awvalid,
       ddr_fabric$v_from_masters_1_bready,
       ddr_fabric$v_from_masters_1_bvalid,
       ddr_fabric$v_from_masters_1_rlast,
       ddr_fabric$v_from_masters_1_rready,
       ddr_fabric$v_from_masters_1_rvalid,
       ddr_fabric$v_from_masters_1_wlast,
       ddr_fabric$v_from_masters_1_wready,
       ddr_fabric$v_from_masters_1_wvalid,
       ddr_fabric$v_from_masters_2_arlock,
       ddr_fabric$v_from_masters_2_arready,
       ddr_fabric$v_from_masters_2_arvalid,
       ddr_fabric$v_from_masters_2_awlock,
       ddr_fabric$v_from_masters_2_awready,
       ddr_fabric$v_from_masters_2_awvalid,
       ddr_fabric$v_from_masters_2_bready,
       ddr_fabric$v_from_masters_2_bvalid,
       ddr_fabric$v_from_masters_2_rlast,
       ddr_fabric$v_from_masters_2_rready,
       ddr_fabric$v_from_masters_2_rvalid,
       ddr_fabric$v_from_masters_2_wlast,
       ddr_fabric$v_from_masters_2_wready,
       ddr_fabric$v_from_masters_2_wvalid,
       ddr_fabric$v_to_slaves_0_arlock,
       ddr_fabric$v_to_slaves_0_arready,
       ddr_fabric$v_to_slaves_0_arvalid,
       ddr_fabric$v_to_slaves_0_awlock,
       ddr_fabric$v_to_slaves_0_awready,
       ddr_fabric$v_to_slaves_0_awvalid,
       ddr_fabric$v_to_slaves_0_bready,
       ddr_fabric$v_to_slaves_0_bvalid,
       ddr_fabric$v_to_slaves_0_rlast,
       ddr_fabric$v_to_slaves_0_rready,
       ddr_fabric$v_to_slaves_0_rvalid,
       ddr_fabric$v_to_slaves_0_wlast,
       ddr_fabric$v_to_slaves_0_wready,
       ddr_fabric$v_to_slaves_0_wvalid,
       ddr_fabric$v_to_slaves_1_arlock,
       ddr_fabric$v_to_slaves_1_arready,
       ddr_fabric$v_to_slaves_1_arvalid,
       ddr_fabric$v_to_slaves_1_awlock,
       ddr_fabric$v_to_slaves_1_awready,
       ddr_fabric$v_to_slaves_1_awvalid,
       ddr_fabric$v_to_slaves_1_bready,
       ddr_fabric$v_to_slaves_1_bvalid,
       ddr_fabric$v_to_slaves_1_rlast,
       ddr_fabric$v_to_slaves_1_rready,
       ddr_fabric$v_to_slaves_1_rvalid,
       ddr_fabric$v_to_slaves_1_wlast,
       ddr_fabric$v_to_slaves_1_wready,
       ddr_fabric$v_to_slaves_1_wvalid,
       ddr_fabric$v_to_slaves_2_arlock,
       ddr_fabric$v_to_slaves_2_arready,
       ddr_fabric$v_to_slaves_2_arvalid,
       ddr_fabric$v_to_slaves_2_awlock,
       ddr_fabric$v_to_slaves_2_awready,
       ddr_fabric$v_to_slaves_2_awvalid,
       ddr_fabric$v_to_slaves_2_bready,
       ddr_fabric$v_to_slaves_2_bvalid,
       ddr_fabric$v_to_slaves_2_rlast,
       ddr_fabric$v_to_slaves_2_rready,
       ddr_fabric$v_to_slaves_2_rvalid,
       ddr_fabric$v_to_slaves_2_wlast,
       ddr_fabric$v_to_slaves_2_wready,
       ddr_fabric$v_to_slaves_2_wvalid,
       ddr_fabric$v_to_slaves_3_arlock,
       ddr_fabric$v_to_slaves_3_arready,
       ddr_fabric$v_to_slaves_3_arvalid,
       ddr_fabric$v_to_slaves_3_awlock,
       ddr_fabric$v_to_slaves_3_awready,
       ddr_fabric$v_to_slaves_3_awvalid,
       ddr_fabric$v_to_slaves_3_bready,
       ddr_fabric$v_to_slaves_3_bvalid,
       ddr_fabric$v_to_slaves_3_rlast,
       ddr_fabric$v_to_slaves_3_rready,
       ddr_fabric$v_to_slaves_3_rvalid,
       ddr_fabric$v_to_slaves_3_wlast,
       ddr_fabric$v_to_slaves_3_wready,
       ddr_fabric$v_to_slaves_3_wvalid;

  // ports of submodule f_uart_to_console
  wire [31 : 0] f_uart_to_console$D_IN;
  wire f_uart_to_console$CLR, f_uart_to_console$DEQ, f_uart_to_console$ENQ;

  // ports of submodule host_fabric
  wire [511 : 0] host_fabric$v_from_masters_0_rdata,
		 host_fabric$v_from_masters_0_wdata,
		 host_fabric$v_to_slaves_0_rdata,
		 host_fabric$v_to_slaves_0_wdata,
		 host_fabric$v_to_slaves_1_rdata,
		 host_fabric$v_to_slaves_1_wdata,
		 host_fabric$v_to_slaves_2_rdata,
		 host_fabric$v_to_slaves_2_wdata;
  wire [63 : 0] host_fabric$v_from_masters_0_araddr,
		host_fabric$v_from_masters_0_awaddr,
		host_fabric$v_from_masters_0_wstrb,
		host_fabric$v_to_slaves_0_araddr,
		host_fabric$v_to_slaves_0_awaddr,
		host_fabric$v_to_slaves_0_wstrb,
		host_fabric$v_to_slaves_1_araddr,
		host_fabric$v_to_slaves_1_awaddr,
		host_fabric$v_to_slaves_1_wstrb,
		host_fabric$v_to_slaves_2_araddr,
		host_fabric$v_to_slaves_2_awaddr,
		host_fabric$v_to_slaves_2_wstrb;
  wire [15 : 0] host_fabric$v_from_masters_0_arid,
		host_fabric$v_from_masters_0_awid,
		host_fabric$v_from_masters_0_bid,
		host_fabric$v_from_masters_0_rid,
		host_fabric$v_to_slaves_0_arid,
		host_fabric$v_to_slaves_0_awid,
		host_fabric$v_to_slaves_0_bid,
		host_fabric$v_to_slaves_0_rid,
		host_fabric$v_to_slaves_1_arid,
		host_fabric$v_to_slaves_1_awid,
		host_fabric$v_to_slaves_1_bid,
		host_fabric$v_to_slaves_1_rid,
		host_fabric$v_to_slaves_2_arid,
		host_fabric$v_to_slaves_2_awid,
		host_fabric$v_to_slaves_2_bid,
		host_fabric$v_to_slaves_2_rid;
  wire [7 : 0] host_fabric$v_from_masters_0_arlen,
	       host_fabric$v_from_masters_0_awlen,
	       host_fabric$v_to_slaves_0_arlen,
	       host_fabric$v_to_slaves_0_awlen,
	       host_fabric$v_to_slaves_1_arlen,
	       host_fabric$v_to_slaves_1_awlen,
	       host_fabric$v_to_slaves_2_arlen,
	       host_fabric$v_to_slaves_2_awlen;
  wire [3 : 0] host_fabric$set_verbosity_verbosity,
	       host_fabric$v_from_masters_0_arcache,
	       host_fabric$v_from_masters_0_arqos,
	       host_fabric$v_from_masters_0_arregion,
	       host_fabric$v_from_masters_0_awcache,
	       host_fabric$v_from_masters_0_awqos,
	       host_fabric$v_from_masters_0_awregion,
	       host_fabric$v_to_slaves_0_arcache,
	       host_fabric$v_to_slaves_0_arqos,
	       host_fabric$v_to_slaves_0_arregion,
	       host_fabric$v_to_slaves_0_awcache,
	       host_fabric$v_to_slaves_0_awqos,
	       host_fabric$v_to_slaves_0_awregion,
	       host_fabric$v_to_slaves_1_arcache,
	       host_fabric$v_to_slaves_1_arqos,
	       host_fabric$v_to_slaves_1_arregion,
	       host_fabric$v_to_slaves_1_awcache,
	       host_fabric$v_to_slaves_1_awqos,
	       host_fabric$v_to_slaves_1_awregion,
	       host_fabric$v_to_slaves_2_arcache,
	       host_fabric$v_to_slaves_2_arqos,
	       host_fabric$v_to_slaves_2_arregion,
	       host_fabric$v_to_slaves_2_awcache,
	       host_fabric$v_to_slaves_2_awqos,
	       host_fabric$v_to_slaves_2_awregion;
  wire [2 : 0] host_fabric$v_from_masters_0_arprot,
	       host_fabric$v_from_masters_0_arsize,
	       host_fabric$v_from_masters_0_awprot,
	       host_fabric$v_from_masters_0_awsize,
	       host_fabric$v_to_slaves_0_arprot,
	       host_fabric$v_to_slaves_0_arsize,
	       host_fabric$v_to_slaves_0_awprot,
	       host_fabric$v_to_slaves_0_awsize,
	       host_fabric$v_to_slaves_1_arprot,
	       host_fabric$v_to_slaves_1_arsize,
	       host_fabric$v_to_slaves_1_awprot,
	       host_fabric$v_to_slaves_1_awsize,
	       host_fabric$v_to_slaves_2_arprot,
	       host_fabric$v_to_slaves_2_arsize,
	       host_fabric$v_to_slaves_2_awprot,
	       host_fabric$v_to_slaves_2_awsize;
  wire [1 : 0] host_fabric$v_from_masters_0_arburst,
	       host_fabric$v_from_masters_0_awburst,
	       host_fabric$v_from_masters_0_bresp,
	       host_fabric$v_from_masters_0_rresp,
	       host_fabric$v_to_slaves_0_arburst,
	       host_fabric$v_to_slaves_0_awburst,
	       host_fabric$v_to_slaves_0_bresp,
	       host_fabric$v_to_slaves_0_rresp,
	       host_fabric$v_to_slaves_1_arburst,
	       host_fabric$v_to_slaves_1_awburst,
	       host_fabric$v_to_slaves_1_bresp,
	       host_fabric$v_to_slaves_1_rresp,
	       host_fabric$v_to_slaves_2_arburst,
	       host_fabric$v_to_slaves_2_awburst,
	       host_fabric$v_to_slaves_2_bresp,
	       host_fabric$v_to_slaves_2_rresp;
  wire host_fabric$EN_reset,
       host_fabric$EN_set_verbosity,
       host_fabric$v_from_masters_0_arlock,
       host_fabric$v_from_masters_0_arready,
       host_fabric$v_from_masters_0_arvalid,
       host_fabric$v_from_masters_0_awlock,
       host_fabric$v_from_masters_0_awready,
       host_fabric$v_from_masters_0_awvalid,
       host_fabric$v_from_masters_0_bready,
       host_fabric$v_from_masters_0_bvalid,
       host_fabric$v_from_masters_0_rlast,
       host_fabric$v_from_masters_0_rready,
       host_fabric$v_from_masters_0_rvalid,
       host_fabric$v_from_masters_0_wlast,
       host_fabric$v_from_masters_0_wready,
       host_fabric$v_from_masters_0_wvalid,
       host_fabric$v_to_slaves_0_arlock,
       host_fabric$v_to_slaves_0_arready,
       host_fabric$v_to_slaves_0_arvalid,
       host_fabric$v_to_slaves_0_awlock,
       host_fabric$v_to_slaves_0_awready,
       host_fabric$v_to_slaves_0_awvalid,
       host_fabric$v_to_slaves_0_bready,
       host_fabric$v_to_slaves_0_bvalid,
       host_fabric$v_to_slaves_0_rlast,
       host_fabric$v_to_slaves_0_rready,
       host_fabric$v_to_slaves_0_rvalid,
       host_fabric$v_to_slaves_0_wlast,
       host_fabric$v_to_slaves_0_wready,
       host_fabric$v_to_slaves_0_wvalid,
       host_fabric$v_to_slaves_1_arlock,
       host_fabric$v_to_slaves_1_arready,
       host_fabric$v_to_slaves_1_arvalid,
       host_fabric$v_to_slaves_1_awlock,
       host_fabric$v_to_slaves_1_awready,
       host_fabric$v_to_slaves_1_awvalid,
       host_fabric$v_to_slaves_1_bready,
       host_fabric$v_to_slaves_1_bvalid,
       host_fabric$v_to_slaves_1_rlast,
       host_fabric$v_to_slaves_1_rready,
       host_fabric$v_to_slaves_1_rvalid,
       host_fabric$v_to_slaves_1_wlast,
       host_fabric$v_to_slaves_1_wready,
       host_fabric$v_to_slaves_1_wvalid,
       host_fabric$v_to_slaves_2_arlock,
       host_fabric$v_to_slaves_2_arready,
       host_fabric$v_to_slaves_2_arvalid,
       host_fabric$v_to_slaves_2_awlock,
       host_fabric$v_to_slaves_2_awready,
       host_fabric$v_to_slaves_2_awvalid,
       host_fabric$v_to_slaves_2_bready,
       host_fabric$v_to_slaves_2_bvalid,
       host_fabric$v_to_slaves_2_rlast,
       host_fabric$v_to_slaves_2_rready,
       host_fabric$v_to_slaves_2_rvalid,
       host_fabric$v_to_slaves_2_wlast,
       host_fabric$v_to_slaves_2_wready,
       host_fabric$v_to_slaves_2_wvalid;

  // ports of submodule mmio_axi4_deburster
  wire [63 : 0] mmio_axi4_deburster$from_master_araddr,
		mmio_axi4_deburster$from_master_awaddr,
		mmio_axi4_deburster$from_master_rdata,
		mmio_axi4_deburster$from_master_wdata,
		mmio_axi4_deburster$to_slave_araddr,
		mmio_axi4_deburster$to_slave_awaddr,
		mmio_axi4_deburster$to_slave_rdata,
		mmio_axi4_deburster$to_slave_wdata;
  wire [15 : 0] mmio_axi4_deburster$from_master_arid,
		mmio_axi4_deburster$from_master_awid,
		mmio_axi4_deburster$from_master_bid,
		mmio_axi4_deburster$from_master_rid,
		mmio_axi4_deburster$to_slave_arid,
		mmio_axi4_deburster$to_slave_awid,
		mmio_axi4_deburster$to_slave_bid,
		mmio_axi4_deburster$to_slave_rid;
  wire [7 : 0] mmio_axi4_deburster$from_master_arlen,
	       mmio_axi4_deburster$from_master_awlen,
	       mmio_axi4_deburster$from_master_wstrb,
	       mmio_axi4_deburster$to_slave_arlen,
	       mmio_axi4_deburster$to_slave_awlen,
	       mmio_axi4_deburster$to_slave_wstrb;
  wire [3 : 0] mmio_axi4_deburster$from_master_arcache,
	       mmio_axi4_deburster$from_master_arqos,
	       mmio_axi4_deburster$from_master_arregion,
	       mmio_axi4_deburster$from_master_awcache,
	       mmio_axi4_deburster$from_master_awqos,
	       mmio_axi4_deburster$from_master_awregion,
	       mmio_axi4_deburster$to_slave_arcache,
	       mmio_axi4_deburster$to_slave_arqos,
	       mmio_axi4_deburster$to_slave_arregion,
	       mmio_axi4_deburster$to_slave_awcache,
	       mmio_axi4_deburster$to_slave_awqos,
	       mmio_axi4_deburster$to_slave_awregion;
  wire [2 : 0] mmio_axi4_deburster$from_master_arprot,
	       mmio_axi4_deburster$from_master_arsize,
	       mmio_axi4_deburster$from_master_awprot,
	       mmio_axi4_deburster$from_master_awsize,
	       mmio_axi4_deburster$to_slave_arprot,
	       mmio_axi4_deburster$to_slave_arsize,
	       mmio_axi4_deburster$to_slave_awprot,
	       mmio_axi4_deburster$to_slave_awsize;
  wire [1 : 0] mmio_axi4_deburster$from_master_arburst,
	       mmio_axi4_deburster$from_master_awburst,
	       mmio_axi4_deburster$from_master_bresp,
	       mmio_axi4_deburster$from_master_rresp,
	       mmio_axi4_deburster$to_slave_arburst,
	       mmio_axi4_deburster$to_slave_awburst,
	       mmio_axi4_deburster$to_slave_bresp,
	       mmio_axi4_deburster$to_slave_rresp;
  wire mmio_axi4_deburster$EN_reset,
       mmio_axi4_deburster$from_master_arlock,
       mmio_axi4_deburster$from_master_arready,
       mmio_axi4_deburster$from_master_arvalid,
       mmio_axi4_deburster$from_master_awlock,
       mmio_axi4_deburster$from_master_awready,
       mmio_axi4_deburster$from_master_awvalid,
       mmio_axi4_deburster$from_master_bready,
       mmio_axi4_deburster$from_master_bvalid,
       mmio_axi4_deburster$from_master_rlast,
       mmio_axi4_deburster$from_master_rready,
       mmio_axi4_deburster$from_master_rvalid,
       mmio_axi4_deburster$from_master_wlast,
       mmio_axi4_deburster$from_master_wready,
       mmio_axi4_deburster$from_master_wvalid,
       mmio_axi4_deburster$to_slave_arlock,
       mmio_axi4_deburster$to_slave_arready,
       mmio_axi4_deburster$to_slave_arvalid,
       mmio_axi4_deburster$to_slave_awlock,
       mmio_axi4_deburster$to_slave_awready,
       mmio_axi4_deburster$to_slave_awvalid,
       mmio_axi4_deburster$to_slave_bready,
       mmio_axi4_deburster$to_slave_bvalid,
       mmio_axi4_deburster$to_slave_rlast,
       mmio_axi4_deburster$to_slave_rready,
       mmio_axi4_deburster$to_slave_rvalid,
       mmio_axi4_deburster$to_slave_wlast,
       mmio_axi4_deburster$to_slave_wready,
       mmio_axi4_deburster$to_slave_wvalid;

  // ports of submodule mmio_fabric
  wire [63 : 0] mmio_fabric$v_from_masters_0_araddr,
		mmio_fabric$v_from_masters_0_awaddr,
		mmio_fabric$v_from_masters_0_rdata,
		mmio_fabric$v_from_masters_0_wdata,
		mmio_fabric$v_from_masters_1_araddr,
		mmio_fabric$v_from_masters_1_awaddr,
		mmio_fabric$v_from_masters_1_rdata,
		mmio_fabric$v_from_masters_1_wdata,
		mmio_fabric$v_to_slaves_0_araddr,
		mmio_fabric$v_to_slaves_0_awaddr,
		mmio_fabric$v_to_slaves_0_rdata,
		mmio_fabric$v_to_slaves_0_wdata,
		mmio_fabric$v_to_slaves_1_araddr,
		mmio_fabric$v_to_slaves_1_awaddr,
		mmio_fabric$v_to_slaves_1_rdata,
		mmio_fabric$v_to_slaves_1_wdata,
		mmio_fabric$v_to_slaves_2_araddr,
		mmio_fabric$v_to_slaves_2_awaddr,
		mmio_fabric$v_to_slaves_2_rdata,
		mmio_fabric$v_to_slaves_2_wdata,
		mmio_fabric$v_to_slaves_3_araddr,
		mmio_fabric$v_to_slaves_3_awaddr,
		mmio_fabric$v_to_slaves_3_rdata,
		mmio_fabric$v_to_slaves_3_wdata;
  wire [15 : 0] mmio_fabric$v_from_masters_0_arid,
		mmio_fabric$v_from_masters_0_awid,
		mmio_fabric$v_from_masters_0_bid,
		mmio_fabric$v_from_masters_0_rid,
		mmio_fabric$v_from_masters_1_arid,
		mmio_fabric$v_from_masters_1_awid,
		mmio_fabric$v_from_masters_1_bid,
		mmio_fabric$v_from_masters_1_rid,
		mmio_fabric$v_to_slaves_0_arid,
		mmio_fabric$v_to_slaves_0_awid,
		mmio_fabric$v_to_slaves_0_bid,
		mmio_fabric$v_to_slaves_0_rid,
		mmio_fabric$v_to_slaves_1_arid,
		mmio_fabric$v_to_slaves_1_awid,
		mmio_fabric$v_to_slaves_1_bid,
		mmio_fabric$v_to_slaves_1_rid,
		mmio_fabric$v_to_slaves_2_arid,
		mmio_fabric$v_to_slaves_2_awid,
		mmio_fabric$v_to_slaves_2_bid,
		mmio_fabric$v_to_slaves_2_rid,
		mmio_fabric$v_to_slaves_3_arid,
		mmio_fabric$v_to_slaves_3_awid,
		mmio_fabric$v_to_slaves_3_bid,
		mmio_fabric$v_to_slaves_3_rid;
  wire [7 : 0] mmio_fabric$v_from_masters_0_arlen,
	       mmio_fabric$v_from_masters_0_awlen,
	       mmio_fabric$v_from_masters_0_wstrb,
	       mmio_fabric$v_from_masters_1_arlen,
	       mmio_fabric$v_from_masters_1_awlen,
	       mmio_fabric$v_from_masters_1_wstrb,
	       mmio_fabric$v_to_slaves_0_arlen,
	       mmio_fabric$v_to_slaves_0_awlen,
	       mmio_fabric$v_to_slaves_0_wstrb,
	       mmio_fabric$v_to_slaves_1_arlen,
	       mmio_fabric$v_to_slaves_1_awlen,
	       mmio_fabric$v_to_slaves_1_wstrb,
	       mmio_fabric$v_to_slaves_2_arlen,
	       mmio_fabric$v_to_slaves_2_awlen,
	       mmio_fabric$v_to_slaves_2_wstrb,
	       mmio_fabric$v_to_slaves_3_arlen,
	       mmio_fabric$v_to_slaves_3_awlen,
	       mmio_fabric$v_to_slaves_3_wstrb;
  wire [3 : 0] mmio_fabric$set_verbosity_verbosity,
	       mmio_fabric$v_from_masters_0_arcache,
	       mmio_fabric$v_from_masters_0_arqos,
	       mmio_fabric$v_from_masters_0_arregion,
	       mmio_fabric$v_from_masters_0_awcache,
	       mmio_fabric$v_from_masters_0_awqos,
	       mmio_fabric$v_from_masters_0_awregion,
	       mmio_fabric$v_from_masters_1_arcache,
	       mmio_fabric$v_from_masters_1_arqos,
	       mmio_fabric$v_from_masters_1_arregion,
	       mmio_fabric$v_from_masters_1_awcache,
	       mmio_fabric$v_from_masters_1_awqos,
	       mmio_fabric$v_from_masters_1_awregion,
	       mmio_fabric$v_to_slaves_0_arcache,
	       mmio_fabric$v_to_slaves_0_arqos,
	       mmio_fabric$v_to_slaves_0_arregion,
	       mmio_fabric$v_to_slaves_0_awcache,
	       mmio_fabric$v_to_slaves_0_awqos,
	       mmio_fabric$v_to_slaves_0_awregion,
	       mmio_fabric$v_to_slaves_1_arcache,
	       mmio_fabric$v_to_slaves_1_arqos,
	       mmio_fabric$v_to_slaves_1_arregion,
	       mmio_fabric$v_to_slaves_1_awcache,
	       mmio_fabric$v_to_slaves_1_awqos,
	       mmio_fabric$v_to_slaves_1_awregion,
	       mmio_fabric$v_to_slaves_2_arcache,
	       mmio_fabric$v_to_slaves_2_arqos,
	       mmio_fabric$v_to_slaves_2_arregion,
	       mmio_fabric$v_to_slaves_2_awcache,
	       mmio_fabric$v_to_slaves_2_awqos,
	       mmio_fabric$v_to_slaves_2_awregion,
	       mmio_fabric$v_to_slaves_3_arcache,
	       mmio_fabric$v_to_slaves_3_arqos,
	       mmio_fabric$v_to_slaves_3_arregion,
	       mmio_fabric$v_to_slaves_3_awcache,
	       mmio_fabric$v_to_slaves_3_awqos,
	       mmio_fabric$v_to_slaves_3_awregion;
  wire [2 : 0] mmio_fabric$v_from_masters_0_arprot,
	       mmio_fabric$v_from_masters_0_arsize,
	       mmio_fabric$v_from_masters_0_awprot,
	       mmio_fabric$v_from_masters_0_awsize,
	       mmio_fabric$v_from_masters_1_arprot,
	       mmio_fabric$v_from_masters_1_arsize,
	       mmio_fabric$v_from_masters_1_awprot,
	       mmio_fabric$v_from_masters_1_awsize,
	       mmio_fabric$v_to_slaves_0_arprot,
	       mmio_fabric$v_to_slaves_0_arsize,
	       mmio_fabric$v_to_slaves_0_awprot,
	       mmio_fabric$v_to_slaves_0_awsize,
	       mmio_fabric$v_to_slaves_1_arprot,
	       mmio_fabric$v_to_slaves_1_arsize,
	       mmio_fabric$v_to_slaves_1_awprot,
	       mmio_fabric$v_to_slaves_1_awsize,
	       mmio_fabric$v_to_slaves_2_arprot,
	       mmio_fabric$v_to_slaves_2_arsize,
	       mmio_fabric$v_to_slaves_2_awprot,
	       mmio_fabric$v_to_slaves_2_awsize,
	       mmio_fabric$v_to_slaves_3_arprot,
	       mmio_fabric$v_to_slaves_3_arsize,
	       mmio_fabric$v_to_slaves_3_awprot,
	       mmio_fabric$v_to_slaves_3_awsize;
  wire [1 : 0] mmio_fabric$v_from_masters_0_arburst,
	       mmio_fabric$v_from_masters_0_awburst,
	       mmio_fabric$v_from_masters_0_bresp,
	       mmio_fabric$v_from_masters_0_rresp,
	       mmio_fabric$v_from_masters_1_arburst,
	       mmio_fabric$v_from_masters_1_awburst,
	       mmio_fabric$v_from_masters_1_bresp,
	       mmio_fabric$v_from_masters_1_rresp,
	       mmio_fabric$v_to_slaves_0_arburst,
	       mmio_fabric$v_to_slaves_0_awburst,
	       mmio_fabric$v_to_slaves_0_bresp,
	       mmio_fabric$v_to_slaves_0_rresp,
	       mmio_fabric$v_to_slaves_1_arburst,
	       mmio_fabric$v_to_slaves_1_awburst,
	       mmio_fabric$v_to_slaves_1_bresp,
	       mmio_fabric$v_to_slaves_1_rresp,
	       mmio_fabric$v_to_slaves_2_arburst,
	       mmio_fabric$v_to_slaves_2_awburst,
	       mmio_fabric$v_to_slaves_2_bresp,
	       mmio_fabric$v_to_slaves_2_rresp,
	       mmio_fabric$v_to_slaves_3_arburst,
	       mmio_fabric$v_to_slaves_3_awburst,
	       mmio_fabric$v_to_slaves_3_bresp,
	       mmio_fabric$v_to_slaves_3_rresp;
  wire mmio_fabric$EN_reset,
       mmio_fabric$EN_set_verbosity,
       mmio_fabric$RDY_reset,
       mmio_fabric$v_from_masters_0_arlock,
       mmio_fabric$v_from_masters_0_arready,
       mmio_fabric$v_from_masters_0_arvalid,
       mmio_fabric$v_from_masters_0_awlock,
       mmio_fabric$v_from_masters_0_awready,
       mmio_fabric$v_from_masters_0_awvalid,
       mmio_fabric$v_from_masters_0_bready,
       mmio_fabric$v_from_masters_0_bvalid,
       mmio_fabric$v_from_masters_0_rlast,
       mmio_fabric$v_from_masters_0_rready,
       mmio_fabric$v_from_masters_0_rvalid,
       mmio_fabric$v_from_masters_0_wlast,
       mmio_fabric$v_from_masters_0_wready,
       mmio_fabric$v_from_masters_0_wvalid,
       mmio_fabric$v_from_masters_1_arlock,
       mmio_fabric$v_from_masters_1_arready,
       mmio_fabric$v_from_masters_1_arvalid,
       mmio_fabric$v_from_masters_1_awlock,
       mmio_fabric$v_from_masters_1_awready,
       mmio_fabric$v_from_masters_1_awvalid,
       mmio_fabric$v_from_masters_1_bready,
       mmio_fabric$v_from_masters_1_bvalid,
       mmio_fabric$v_from_masters_1_rlast,
       mmio_fabric$v_from_masters_1_rready,
       mmio_fabric$v_from_masters_1_rvalid,
       mmio_fabric$v_from_masters_1_wlast,
       mmio_fabric$v_from_masters_1_wready,
       mmio_fabric$v_from_masters_1_wvalid,
       mmio_fabric$v_to_slaves_0_arlock,
       mmio_fabric$v_to_slaves_0_arready,
       mmio_fabric$v_to_slaves_0_arvalid,
       mmio_fabric$v_to_slaves_0_awlock,
       mmio_fabric$v_to_slaves_0_awready,
       mmio_fabric$v_to_slaves_0_awvalid,
       mmio_fabric$v_to_slaves_0_bready,
       mmio_fabric$v_to_slaves_0_bvalid,
       mmio_fabric$v_to_slaves_0_rlast,
       mmio_fabric$v_to_slaves_0_rready,
       mmio_fabric$v_to_slaves_0_rvalid,
       mmio_fabric$v_to_slaves_0_wlast,
       mmio_fabric$v_to_slaves_0_wready,
       mmio_fabric$v_to_slaves_0_wvalid,
       mmio_fabric$v_to_slaves_1_arlock,
       mmio_fabric$v_to_slaves_1_arready,
       mmio_fabric$v_to_slaves_1_arvalid,
       mmio_fabric$v_to_slaves_1_awlock,
       mmio_fabric$v_to_slaves_1_awready,
       mmio_fabric$v_to_slaves_1_awvalid,
       mmio_fabric$v_to_slaves_1_bready,
       mmio_fabric$v_to_slaves_1_bvalid,
       mmio_fabric$v_to_slaves_1_rlast,
       mmio_fabric$v_to_slaves_1_rready,
       mmio_fabric$v_to_slaves_1_rvalid,
       mmio_fabric$v_to_slaves_1_wlast,
       mmio_fabric$v_to_slaves_1_wready,
       mmio_fabric$v_to_slaves_1_wvalid,
       mmio_fabric$v_to_slaves_2_arlock,
       mmio_fabric$v_to_slaves_2_arready,
       mmio_fabric$v_to_slaves_2_arvalid,
       mmio_fabric$v_to_slaves_2_awlock,
       mmio_fabric$v_to_slaves_2_awready,
       mmio_fabric$v_to_slaves_2_awvalid,
       mmio_fabric$v_to_slaves_2_bready,
       mmio_fabric$v_to_slaves_2_bvalid,
       mmio_fabric$v_to_slaves_2_rlast,
       mmio_fabric$v_to_slaves_2_rready,
       mmio_fabric$v_to_slaves_2_rvalid,
       mmio_fabric$v_to_slaves_2_wlast,
       mmio_fabric$v_to_slaves_2_wready,
       mmio_fabric$v_to_slaves_2_wvalid,
       mmio_fabric$v_to_slaves_3_arlock,
       mmio_fabric$v_to_slaves_3_arready,
       mmio_fabric$v_to_slaves_3_arvalid,
       mmio_fabric$v_to_slaves_3_awlock,
       mmio_fabric$v_to_slaves_3_awready,
       mmio_fabric$v_to_slaves_3_awvalid,
       mmio_fabric$v_to_slaves_3_bready,
       mmio_fabric$v_to_slaves_3_bvalid,
       mmio_fabric$v_to_slaves_3_rlast,
       mmio_fabric$v_to_slaves_3_rready,
       mmio_fabric$v_to_slaves_3_rvalid,
       mmio_fabric$v_to_slaves_3_wlast,
       mmio_fabric$v_to_slaves_3_wready,
       mmio_fabric$v_to_slaves_3_wvalid;

  // ports of submodule mmio_to_host
  wire [63 : 0] mmio_to_host$axi4_S_araddr,
		mmio_to_host$axi4_S_awaddr,
		mmio_to_host$axi4_S_rdata,
		mmio_to_host$axi4_S_wdata;
  wire [31 : 0] mmio_to_host$from_host_put, mmio_to_host$to_host_get;
  wire [15 : 0] mmio_to_host$axi4_S_arid,
		mmio_to_host$axi4_S_awid,
		mmio_to_host$axi4_S_bid,
		mmio_to_host$axi4_S_rid;
  wire [7 : 0] mmio_to_host$axi4_S_arlen,
	       mmio_to_host$axi4_S_awlen,
	       mmio_to_host$axi4_S_wstrb;
  wire [3 : 0] mmio_to_host$axi4_S_arcache,
	       mmio_to_host$axi4_S_arqos,
	       mmio_to_host$axi4_S_arregion,
	       mmio_to_host$axi4_S_awcache,
	       mmio_to_host$axi4_S_awqos,
	       mmio_to_host$axi4_S_awregion;
  wire [2 : 0] mmio_to_host$axi4_S_arprot,
	       mmio_to_host$axi4_S_arsize,
	       mmio_to_host$axi4_S_awprot,
	       mmio_to_host$axi4_S_awsize;
  wire [1 : 0] mmio_to_host$axi4_S_arburst,
	       mmio_to_host$axi4_S_awburst,
	       mmio_to_host$axi4_S_bresp,
	       mmio_to_host$axi4_S_rresp;
  wire mmio_to_host$EN_from_host_put,
       mmio_to_host$EN_to_host_get,
       mmio_to_host$RDY_from_host_put,
       mmio_to_host$RDY_to_host_get,
       mmio_to_host$axi4_S_arlock,
       mmio_to_host$axi4_S_arready,
       mmio_to_host$axi4_S_arvalid,
       mmio_to_host$axi4_S_awlock,
       mmio_to_host$axi4_S_awready,
       mmio_to_host$axi4_S_awvalid,
       mmio_to_host$axi4_S_bready,
       mmio_to_host$axi4_S_bvalid,
       mmio_to_host$axi4_S_rlast,
       mmio_to_host$axi4_S_rready,
       mmio_to_host$axi4_S_rvalid,
       mmio_to_host$axi4_S_wlast,
       mmio_to_host$axi4_S_wready,
       mmio_to_host$axi4_S_wvalid;

  // ports of submodule msi
  wire [63 : 0] msi$set_addr_map_addr_base,
		msi$set_addr_map_addr_lim,
		msi$slave_araddr,
		msi$slave_awaddr,
		msi$slave_rdata,
		msi$slave_wdata;
  wire [31 : 0] msi$interruptLevels;
  wire [15 : 0] msi$slave_arid, msi$slave_awid, msi$slave_bid, msi$slave_rid;
  wire [7 : 0] msi$slave_arlen, msi$slave_awlen, msi$slave_wstrb;
  wire [3 : 0] msi$slave_arcache,
	       msi$slave_arqos,
	       msi$slave_arregion,
	       msi$slave_awcache,
	       msi$slave_awqos,
	       msi$slave_awregion;
  wire [2 : 0] msi$slave_arprot,
	       msi$slave_arsize,
	       msi$slave_awprot,
	       msi$slave_awsize;
  wire [1 : 0] msi$slave_arburst,
	       msi$slave_awburst,
	       msi$slave_bresp,
	       msi$slave_rresp;
  wire msi$EN_set_addr_map,
       msi$slave_arlock,
       msi$slave_arready,
       msi$slave_arvalid,
       msi$slave_awlock,
       msi$slave_awready,
       msi$slave_awvalid,
       msi$slave_bready,
       msi$slave_bvalid,
       msi$slave_rlast,
       msi$slave_rready,
       msi$slave_rvalid,
       msi$slave_wlast,
       msi$slave_wready,
       msi$slave_wvalid;

  // ports of submodule uart0
  wire [63 : 0] uart0$set_addr_map_addr_base,
		uart0$set_addr_map_addr_lim,
		uart0$slave_araddr,
		uart0$slave_awaddr,
		uart0$slave_rdata,
		uart0$slave_wdata;
  wire [15 : 0] uart0$slave_arid,
		uart0$slave_awid,
		uart0$slave_bid,
		uart0$slave_rid;
  wire [7 : 0] uart0$get_to_console_get,
	       uart0$put_from_console_put,
	       uart0$slave_arlen,
	       uart0$slave_awlen,
	       uart0$slave_wstrb;
  wire [3 : 0] uart0$slave_arcache,
	       uart0$slave_arqos,
	       uart0$slave_arregion,
	       uart0$slave_awcache,
	       uart0$slave_awqos,
	       uart0$slave_awregion;
  wire [2 : 0] uart0$slave_arprot,
	       uart0$slave_arsize,
	       uart0$slave_awprot,
	       uart0$slave_awsize;
  wire [1 : 0] uart0$slave_arburst,
	       uart0$slave_awburst,
	       uart0$slave_bresp,
	       uart0$slave_rresp;
  wire uart0$EN_get_to_console_get,
       uart0$EN_put_from_console_put,
       uart0$EN_server_reset_request_put,
       uart0$EN_server_reset_response_get,
       uart0$EN_set_addr_map,
       uart0$RDY_get_to_console_get,
       uart0$RDY_put_from_console_put,
       uart0$RDY_server_reset_request_put,
       uart0$RDY_server_reset_response_get,
       uart0$intr,
       uart0$slave_arlock,
       uart0$slave_arready,
       uart0$slave_arvalid,
       uart0$slave_awlock,
       uart0$slave_awready,
       uart0$slave_awvalid,
       uart0$slave_bready,
       uart0$slave_bvalid,
       uart0$slave_rlast,
       uart0$slave_rready,
       uart0$slave_rvalid,
       uart0$slave_wlast,
       uart0$slave_wready,
       uart0$slave_wvalid;

  // rule scheduling signals
  wire CAN_FIRE_RL_axi4_downsizer_rl_rd_req,
       CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp,
       CAN_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master,
       CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big,
       CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small,
       CAN_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master,
       CAN_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave,
       CAN_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master,
       CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave,
       CAN_FIRE_RL_rl_DM_rd_rsp,
       CAN_FIRE_RL_rl_UART_to_console,
       CAN_FIRE_RL_rl_UART_to_console_flush,
       CAN_FIRE_RL_rl_connect,
       CAN_FIRE_RL_rl_connect_1,
       CAN_FIRE_RL_rl_console_to_UART,
       CAN_FIRE_RL_rl_control_to_DM_idle,
       CAN_FIRE_RL_rl_control_to_DM_wr_req,
       CAN_FIRE_RL_rl_host_to_hw_mem_rsp,
       CAN_FIRE_RL_rl_host_to_hw_misc,
       CAN_FIRE_RL_rl_hw_to_host_mem_req,
       CAN_FIRE_RL_rl_hw_to_host_misc,
       CAN_FIRE_RL_rl_init_complete,
       CAN_FIRE_RL_rl_initialize,
       CAN_FIRE_RL_rl_interrupts,
       CAN_FIRE_RL_rl_ndm_reset,
       CAN_FIRE_RL_rl_nmi_to_core,
       CAN_FIRE_RL_rl_rd_addr_channel,
       CAN_FIRE_RL_rl_rd_addr_channel_1,
       CAN_FIRE_RL_rl_rd_addr_channel_10,
       CAN_FIRE_RL_rl_rd_addr_channel_11,
       CAN_FIRE_RL_rl_rd_addr_channel_2,
       CAN_FIRE_RL_rl_rd_addr_channel_3,
       CAN_FIRE_RL_rl_rd_addr_channel_4,
       CAN_FIRE_RL_rl_rd_addr_channel_5,
       CAN_FIRE_RL_rl_rd_addr_channel_6,
       CAN_FIRE_RL_rl_rd_addr_channel_7,
       CAN_FIRE_RL_rl_rd_addr_channel_8,
       CAN_FIRE_RL_rl_rd_addr_channel_9,
       CAN_FIRE_RL_rl_rd_data_channel,
       CAN_FIRE_RL_rl_rd_data_channel_1,
       CAN_FIRE_RL_rl_rd_data_channel_10,
       CAN_FIRE_RL_rl_rd_data_channel_11,
       CAN_FIRE_RL_rl_rd_data_channel_2,
       CAN_FIRE_RL_rl_rd_data_channel_3,
       CAN_FIRE_RL_rl_rd_data_channel_4,
       CAN_FIRE_RL_rl_rd_data_channel_5,
       CAN_FIRE_RL_rl_rd_data_channel_6,
       CAN_FIRE_RL_rl_rd_data_channel_7,
       CAN_FIRE_RL_rl_rd_data_channel_8,
       CAN_FIRE_RL_rl_rd_data_channel_9,
       CAN_FIRE_RL_rl_tv_vb_out,
       CAN_FIRE_RL_rl_wr_addr_channel,
       CAN_FIRE_RL_rl_wr_addr_channel_1,
       CAN_FIRE_RL_rl_wr_addr_channel_10,
       CAN_FIRE_RL_rl_wr_addr_channel_11,
       CAN_FIRE_RL_rl_wr_addr_channel_2,
       CAN_FIRE_RL_rl_wr_addr_channel_3,
       CAN_FIRE_RL_rl_wr_addr_channel_4,
       CAN_FIRE_RL_rl_wr_addr_channel_5,
       CAN_FIRE_RL_rl_wr_addr_channel_6,
       CAN_FIRE_RL_rl_wr_addr_channel_7,
       CAN_FIRE_RL_rl_wr_addr_channel_8,
       CAN_FIRE_RL_rl_wr_addr_channel_9,
       CAN_FIRE_RL_rl_wr_data_channel,
       CAN_FIRE_RL_rl_wr_data_channel_1,
       CAN_FIRE_RL_rl_wr_data_channel_10,
       CAN_FIRE_RL_rl_wr_data_channel_11,
       CAN_FIRE_RL_rl_wr_data_channel_2,
       CAN_FIRE_RL_rl_wr_data_channel_3,
       CAN_FIRE_RL_rl_wr_data_channel_4,
       CAN_FIRE_RL_rl_wr_data_channel_5,
       CAN_FIRE_RL_rl_wr_data_channel_6,
       CAN_FIRE_RL_rl_wr_data_channel_7,
       CAN_FIRE_RL_rl_wr_data_channel_8,
       CAN_FIRE_RL_rl_wr_data_channel_9,
       CAN_FIRE_RL_rl_wr_response_channel,
       CAN_FIRE_RL_rl_wr_response_channel_1,
       CAN_FIRE_RL_rl_wr_response_channel_10,
       CAN_FIRE_RL_rl_wr_response_channel_11,
       CAN_FIRE_RL_rl_wr_response_channel_2,
       CAN_FIRE_RL_rl_wr_response_channel_3,
       CAN_FIRE_RL_rl_wr_response_channel_4,
       CAN_FIRE_RL_rl_wr_response_channel_5,
       CAN_FIRE_RL_rl_wr_response_channel_6,
       CAN_FIRE_RL_rl_wr_response_channel_7,
       CAN_FIRE_RL_rl_wr_response_channel_8,
       CAN_FIRE_RL_rl_wr_response_channel_9,
       CAN_FIRE_ddr_A_M_m_arready,
       CAN_FIRE_ddr_A_M_m_awready,
       CAN_FIRE_ddr_A_M_m_bvalid,
       CAN_FIRE_ddr_A_M_m_rvalid,
       CAN_FIRE_ddr_A_M_m_wready,
       CAN_FIRE_ddr_B_M_m_arready,
       CAN_FIRE_ddr_B_M_m_awready,
       CAN_FIRE_ddr_B_M_m_bvalid,
       CAN_FIRE_ddr_B_M_m_rvalid,
       CAN_FIRE_ddr_B_M_m_wready,
       CAN_FIRE_ddr_C_M_m_arready,
       CAN_FIRE_ddr_C_M_m_awready,
       CAN_FIRE_ddr_C_M_m_bvalid,
       CAN_FIRE_ddr_C_M_m_rvalid,
       CAN_FIRE_ddr_C_M_m_wready,
       CAN_FIRE_ddr_D_M_m_arready,
       CAN_FIRE_ddr_D_M_m_awready,
       CAN_FIRE_ddr_D_M_m_bvalid,
       CAN_FIRE_ddr_D_M_m_rvalid,
       CAN_FIRE_ddr_D_M_m_wready,
       CAN_FIRE_host_AXI4L_S_m_arvalid,
       CAN_FIRE_host_AXI4L_S_m_awvalid,
       CAN_FIRE_host_AXI4L_S_m_bready,
       CAN_FIRE_host_AXI4L_S_m_rready,
       CAN_FIRE_host_AXI4L_S_m_wvalid,
       CAN_FIRE_host_AXI4_S_m_arvalid,
       CAN_FIRE_host_AXI4_S_m_awvalid,
       CAN_FIRE_host_AXI4_S_m_bready,
       CAN_FIRE_host_AXI4_S_m_rready,
       CAN_FIRE_host_AXI4_S_m_wvalid,
       CAN_FIRE_m_env_ready,
       CAN_FIRE_m_glcount,
       WILL_FIRE_RL_axi4_downsizer_rl_rd_req,
       WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp,
       WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master,
       WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big,
       WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small,
       WILL_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master,
       WILL_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave,
       WILL_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master,
       WILL_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave,
       WILL_FIRE_RL_rl_DM_rd_rsp,
       WILL_FIRE_RL_rl_UART_to_console,
       WILL_FIRE_RL_rl_UART_to_console_flush,
       WILL_FIRE_RL_rl_connect,
       WILL_FIRE_RL_rl_connect_1,
       WILL_FIRE_RL_rl_console_to_UART,
       WILL_FIRE_RL_rl_control_to_DM_idle,
       WILL_FIRE_RL_rl_control_to_DM_wr_req,
       WILL_FIRE_RL_rl_host_to_hw_mem_rsp,
       WILL_FIRE_RL_rl_host_to_hw_misc,
       WILL_FIRE_RL_rl_hw_to_host_mem_req,
       WILL_FIRE_RL_rl_hw_to_host_misc,
       WILL_FIRE_RL_rl_init_complete,
       WILL_FIRE_RL_rl_initialize,
       WILL_FIRE_RL_rl_interrupts,
       WILL_FIRE_RL_rl_ndm_reset,
       WILL_FIRE_RL_rl_nmi_to_core,
       WILL_FIRE_RL_rl_rd_addr_channel,
       WILL_FIRE_RL_rl_rd_addr_channel_1,
       WILL_FIRE_RL_rl_rd_addr_channel_10,
       WILL_FIRE_RL_rl_rd_addr_channel_11,
       WILL_FIRE_RL_rl_rd_addr_channel_2,
       WILL_FIRE_RL_rl_rd_addr_channel_3,
       WILL_FIRE_RL_rl_rd_addr_channel_4,
       WILL_FIRE_RL_rl_rd_addr_channel_5,
       WILL_FIRE_RL_rl_rd_addr_channel_6,
       WILL_FIRE_RL_rl_rd_addr_channel_7,
       WILL_FIRE_RL_rl_rd_addr_channel_8,
       WILL_FIRE_RL_rl_rd_addr_channel_9,
       WILL_FIRE_RL_rl_rd_data_channel,
       WILL_FIRE_RL_rl_rd_data_channel_1,
       WILL_FIRE_RL_rl_rd_data_channel_10,
       WILL_FIRE_RL_rl_rd_data_channel_11,
       WILL_FIRE_RL_rl_rd_data_channel_2,
       WILL_FIRE_RL_rl_rd_data_channel_3,
       WILL_FIRE_RL_rl_rd_data_channel_4,
       WILL_FIRE_RL_rl_rd_data_channel_5,
       WILL_FIRE_RL_rl_rd_data_channel_6,
       WILL_FIRE_RL_rl_rd_data_channel_7,
       WILL_FIRE_RL_rl_rd_data_channel_8,
       WILL_FIRE_RL_rl_rd_data_channel_9,
       WILL_FIRE_RL_rl_tv_vb_out,
       WILL_FIRE_RL_rl_wr_addr_channel,
       WILL_FIRE_RL_rl_wr_addr_channel_1,
       WILL_FIRE_RL_rl_wr_addr_channel_10,
       WILL_FIRE_RL_rl_wr_addr_channel_11,
       WILL_FIRE_RL_rl_wr_addr_channel_2,
       WILL_FIRE_RL_rl_wr_addr_channel_3,
       WILL_FIRE_RL_rl_wr_addr_channel_4,
       WILL_FIRE_RL_rl_wr_addr_channel_5,
       WILL_FIRE_RL_rl_wr_addr_channel_6,
       WILL_FIRE_RL_rl_wr_addr_channel_7,
       WILL_FIRE_RL_rl_wr_addr_channel_8,
       WILL_FIRE_RL_rl_wr_addr_channel_9,
       WILL_FIRE_RL_rl_wr_data_channel,
       WILL_FIRE_RL_rl_wr_data_channel_1,
       WILL_FIRE_RL_rl_wr_data_channel_10,
       WILL_FIRE_RL_rl_wr_data_channel_11,
       WILL_FIRE_RL_rl_wr_data_channel_2,
       WILL_FIRE_RL_rl_wr_data_channel_3,
       WILL_FIRE_RL_rl_wr_data_channel_4,
       WILL_FIRE_RL_rl_wr_data_channel_5,
       WILL_FIRE_RL_rl_wr_data_channel_6,
       WILL_FIRE_RL_rl_wr_data_channel_7,
       WILL_FIRE_RL_rl_wr_data_channel_8,
       WILL_FIRE_RL_rl_wr_data_channel_9,
       WILL_FIRE_RL_rl_wr_response_channel,
       WILL_FIRE_RL_rl_wr_response_channel_1,
       WILL_FIRE_RL_rl_wr_response_channel_10,
       WILL_FIRE_RL_rl_wr_response_channel_11,
       WILL_FIRE_RL_rl_wr_response_channel_2,
       WILL_FIRE_RL_rl_wr_response_channel_3,
       WILL_FIRE_RL_rl_wr_response_channel_4,
       WILL_FIRE_RL_rl_wr_response_channel_5,
       WILL_FIRE_RL_rl_wr_response_channel_6,
       WILL_FIRE_RL_rl_wr_response_channel_7,
       WILL_FIRE_RL_rl_wr_response_channel_8,
       WILL_FIRE_RL_rl_wr_response_channel_9,
       WILL_FIRE_ddr_A_M_m_arready,
       WILL_FIRE_ddr_A_M_m_awready,
       WILL_FIRE_ddr_A_M_m_bvalid,
       WILL_FIRE_ddr_A_M_m_rvalid,
       WILL_FIRE_ddr_A_M_m_wready,
       WILL_FIRE_ddr_B_M_m_arready,
       WILL_FIRE_ddr_B_M_m_awready,
       WILL_FIRE_ddr_B_M_m_bvalid,
       WILL_FIRE_ddr_B_M_m_rvalid,
       WILL_FIRE_ddr_B_M_m_wready,
       WILL_FIRE_ddr_C_M_m_arready,
       WILL_FIRE_ddr_C_M_m_awready,
       WILL_FIRE_ddr_C_M_m_bvalid,
       WILL_FIRE_ddr_C_M_m_rvalid,
       WILL_FIRE_ddr_C_M_m_wready,
       WILL_FIRE_ddr_D_M_m_arready,
       WILL_FIRE_ddr_D_M_m_awready,
       WILL_FIRE_ddr_D_M_m_bvalid,
       WILL_FIRE_ddr_D_M_m_rvalid,
       WILL_FIRE_ddr_D_M_m_wready,
       WILL_FIRE_host_AXI4L_S_m_arvalid,
       WILL_FIRE_host_AXI4L_S_m_awvalid,
       WILL_FIRE_host_AXI4L_S_m_bready,
       WILL_FIRE_host_AXI4L_S_m_rready,
       WILL_FIRE_host_AXI4L_S_m_wvalid,
       WILL_FIRE_host_AXI4_S_m_arvalid,
       WILL_FIRE_host_AXI4_S_m_awvalid,
       WILL_FIRE_host_AXI4_S_m_bready,
       WILL_FIRE_host_AXI4_S_m_rready,
       WILL_FIRE_host_AXI4_S_m_wvalid,
       WILL_FIRE_m_env_ready,
       WILL_FIRE_m_glcount;

  // inputs to muxes for submodule ports
  wire [108 : 0] MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__VAL_1;
  wire [72 : 0] MUX_axi4_downsizer_xactor_to_slave_f_wr_data$enq_1__VAL_1,
		MUX_axi4_downsizer_xactor_to_slave_f_wr_data$enq_1__VAL_2;
  wire [39 : 0] MUX_awsteria_core$se_dmi_request_enq_1__VAL_1,
		MUX_awsteria_core$se_dmi_request_enq_1__VAL_2;
  wire [31 : 0] MUX_rg_uart_buf$write_1__VAL_2;
  wire [15 : 0] MUX_rg_uart_timeout$write_1__VAL_1;
  wire [1 : 0] MUX_axi4_downsizer_ff_wrRsp$enq_1__VAL_1,
	       MUX_axi4_downsizer_rg_wr_state$write_1__VAL_2,
	       MUX_rg_state_dm$write_1__VAL_1;
  wire MUX_awsteria_core$se_dmi_request_enq_1__SEL_1,
       MUX_axi4L_channels$v_to_host_1_enq_1__SEL_2,
       MUX_axi4_downsizer_rg_wr_state$write_1__SEL_1,
       MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__SEL_1,
       MUX_rg_uart_timeout$write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h25640;
  reg [31 : 0] v__h6119;
  reg [31 : 0] v__h6744;
  reg [31 : 0] v__h8336;
  reg [31 : 0] v__h7546;
  reg [31 : 0] v__h9025;
  reg [31 : 0] v__h6113;
  reg [31 : 0] v__h6738;
  reg [31 : 0] v__h7540;
  reg [31 : 0] v__h8330;
  reg [31 : 0] v__h9019;
  reg [31 : 0] v__h25634;
  // synopsys translate_on

  // remaining internal signals
  wire [511 : 0] dta__h6315,
		 dta__h6329,
		 m_rdd___1_rdata__h8873,
		 s_data__h11069,
		 s_wrd_wdata__h11064,
		 x1_avValue_snd_fst__h8820,
		 x1_avValue_snd_rdata__h9165,
		 x__h11578,
		 x__h5968;
  wire [63 : 0] addr___1__h6460,
		addr__h6319,
		s_strb__h11071,
		s_wrd_wstrb__h11065,
		stb__h6316,
		stb__h6331,
		v__h7978,
		v__h7993,
		x1_avValue_fst_awaddr__h7022,
		x1_avValue_snd_fst_wdata__h7116,
		x__h6030;
  wire [31 : 0] IF_rg_uart_buf_BIT_31_THEN_0_ELSE_rg_uart_buf__q2;
  wire [15 : 0] IF_axi4_downsizer_ff_wrRsp_first__13_BIT_0_14__ETC___d138,
		x1_avValue_fst_awid__h7021,
		x1_avValue_snd_rid__h9164,
		y_avValue_fst_bid__h7710;
  wire [11 : 0] _1_PLUS_y946__q1,
		x1_avValue_snd_snd_snd__h8826,
		x__h8938,
		y__h8939,
		y__h8946,
		y_avValue_snd_snd_snd__h8823;
  wire [7 : 0] req_burst___1__h8253, req_burst__h8231;
  wire [3 : 0] rsp_beat__h8808,
	       value__h7052,
	       value__h7060,
	       value__h7064,
	       x1_avValue_snd_snd_fst__h8825,
	       y_avValue_snd_snd_fst__h8822;
  wire [2 : 0] value__h7041, value__h7056;
  wire [1 : 0] _theResult_____2__h8807,
	       x1_avValue_fst__h8800,
	       x1_avValue_fst_awburst__h7025,
	       x1_avValue_fst_bresp__h7714,
	       x1_avValue_snd_rresp__h9166,
	       y_avValue_fst_bresp__h7711;
  wire IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d67,
       IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d91,
       IF_axi4_downsizer_rg_req_beat_0_EQ_7_66_THEN_a_ETC___d169,
       NOT_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THE_ETC___d68,
       axi4_downsizer_rg_req_beat_0_EQ_0_1_AND_axi4_d_ETC___d25,
       axi4_downsizer_rg_req_beat_0_EQ_0_1_AND_axi4_d_ETC___d75,
       axi4_downsizer_xactor_from_master_f_wr_addr_fi_ETC___d17,
       x1_avValue_fst_awlock__h7026;

  // action method host_AXI4_S_m_awvalid
  assign CAN_FIRE_host_AXI4_S_m_awvalid = 1'd1 ;
  assign WILL_FIRE_host_AXI4_S_m_awvalid = 1'd1 ;

  // value method host_AXI4_S_m_awready
  assign host_AXI4_S_awready = host_fabric$v_from_masters_0_awready ;

  // action method host_AXI4_S_m_wvalid
  assign CAN_FIRE_host_AXI4_S_m_wvalid = 1'd1 ;
  assign WILL_FIRE_host_AXI4_S_m_wvalid = 1'd1 ;

  // value method host_AXI4_S_m_wready
  assign host_AXI4_S_wready = host_fabric$v_from_masters_0_wready ;

  // value method host_AXI4_S_m_bvalid
  assign host_AXI4_S_bvalid = host_fabric$v_from_masters_0_bvalid ;

  // value method host_AXI4_S_m_bid
  assign host_AXI4_S_bid = host_fabric$v_from_masters_0_bid ;

  // value method host_AXI4_S_m_bresp
  assign host_AXI4_S_bresp = host_fabric$v_from_masters_0_bresp ;

  // action method host_AXI4_S_m_bready
  assign CAN_FIRE_host_AXI4_S_m_bready = 1'd1 ;
  assign WILL_FIRE_host_AXI4_S_m_bready = 1'd1 ;

  // action method host_AXI4_S_m_arvalid
  assign CAN_FIRE_host_AXI4_S_m_arvalid = 1'd1 ;
  assign WILL_FIRE_host_AXI4_S_m_arvalid = 1'd1 ;

  // value method host_AXI4_S_m_arready
  assign host_AXI4_S_arready = host_fabric$v_from_masters_0_arready ;

  // value method host_AXI4_S_m_rvalid
  assign host_AXI4_S_rvalid = host_fabric$v_from_masters_0_rvalid ;

  // value method host_AXI4_S_m_rid
  assign host_AXI4_S_rid = host_fabric$v_from_masters_0_rid ;

  // value method host_AXI4_S_m_rdata
  assign host_AXI4_S_rdata = host_fabric$v_from_masters_0_rdata ;

  // value method host_AXI4_S_m_rresp
  assign host_AXI4_S_rresp = host_fabric$v_from_masters_0_rresp ;

  // value method host_AXI4_S_m_rlast
  assign host_AXI4_S_rlast = host_fabric$v_from_masters_0_rlast ;

  // action method host_AXI4_S_m_rready
  assign CAN_FIRE_host_AXI4_S_m_rready = 1'd1 ;
  assign WILL_FIRE_host_AXI4_S_m_rready = 1'd1 ;

  // action method host_AXI4L_S_m_awvalid
  assign CAN_FIRE_host_AXI4L_S_m_awvalid = 1'd1 ;
  assign WILL_FIRE_host_AXI4L_S_m_awvalid = 1'd1 ;

  // value method host_AXI4L_S_m_awready
  assign host_AXI4L_S_awready = axi4L_channels$axi4L_S_awready ;

  // action method host_AXI4L_S_m_wvalid
  assign CAN_FIRE_host_AXI4L_S_m_wvalid = 1'd1 ;
  assign WILL_FIRE_host_AXI4L_S_m_wvalid = 1'd1 ;

  // value method host_AXI4L_S_m_wready
  assign host_AXI4L_S_wready = axi4L_channels$axi4L_S_wready ;

  // value method host_AXI4L_S_m_bvalid
  assign host_AXI4L_S_bvalid = axi4L_channels$axi4L_S_bvalid ;

  // value method host_AXI4L_S_m_bresp
  assign host_AXI4L_S_bresp = axi4L_channels$axi4L_S_bresp ;

  // action method host_AXI4L_S_m_bready
  assign CAN_FIRE_host_AXI4L_S_m_bready = 1'd1 ;
  assign WILL_FIRE_host_AXI4L_S_m_bready = 1'd1 ;

  // action method host_AXI4L_S_m_arvalid
  assign CAN_FIRE_host_AXI4L_S_m_arvalid = 1'd1 ;
  assign WILL_FIRE_host_AXI4L_S_m_arvalid = 1'd1 ;

  // value method host_AXI4L_S_m_arready
  assign host_AXI4L_S_arready = axi4L_channels$axi4L_S_arready ;

  // value method host_AXI4L_S_m_rvalid
  assign host_AXI4L_S_rvalid = axi4L_channels$axi4L_S_rvalid ;

  // value method host_AXI4L_S_m_rresp
  assign host_AXI4L_S_rresp = axi4L_channels$axi4L_S_rresp ;

  // value method host_AXI4L_S_m_rdata
  assign host_AXI4L_S_rdata = axi4L_channels$axi4L_S_rdata ;

  // action method host_AXI4L_S_m_rready
  assign CAN_FIRE_host_AXI4L_S_m_rready = 1'd1 ;
  assign WILL_FIRE_host_AXI4L_S_m_rready = 1'd1 ;

  // value method ddr_A_M_m_awvalid
  assign ddr_A_M_awvalid = ddr_fabric$v_to_slaves_0_awvalid ;

  // value method ddr_A_M_m_awid
  assign ddr_A_M_awid = ddr_fabric$v_to_slaves_0_awid ;

  // value method ddr_A_M_m_awaddr
  assign ddr_A_M_awaddr = ddr_fabric$v_to_slaves_0_awaddr ;

  // value method ddr_A_M_m_awlen
  assign ddr_A_M_awlen = ddr_fabric$v_to_slaves_0_awlen ;

  // value method ddr_A_M_m_awsize
  assign ddr_A_M_awsize = ddr_fabric$v_to_slaves_0_awsize ;

  // value method ddr_A_M_m_awburst
  assign ddr_A_M_awburst = ddr_fabric$v_to_slaves_0_awburst ;

  // value method ddr_A_M_m_awlock
  assign ddr_A_M_awlock = ddr_fabric$v_to_slaves_0_awlock ;

  // value method ddr_A_M_m_awcache
  assign ddr_A_M_awcache = ddr_fabric$v_to_slaves_0_awcache ;

  // value method ddr_A_M_m_awprot
  assign ddr_A_M_awprot = ddr_fabric$v_to_slaves_0_awprot ;

  // value method ddr_A_M_m_awqos
  assign ddr_A_M_awqos = ddr_fabric$v_to_slaves_0_awqos ;

  // value method ddr_A_M_m_awregion
  assign ddr_A_M_awregion = ddr_fabric$v_to_slaves_0_awregion ;

  // action method ddr_A_M_m_awready
  assign CAN_FIRE_ddr_A_M_m_awready = 1'd1 ;
  assign WILL_FIRE_ddr_A_M_m_awready = 1'd1 ;

  // value method ddr_A_M_m_wvalid
  assign ddr_A_M_wvalid = ddr_fabric$v_to_slaves_0_wvalid ;

  // value method ddr_A_M_m_wdata
  assign ddr_A_M_wdata = ddr_fabric$v_to_slaves_0_wdata ;

  // value method ddr_A_M_m_wstrb
  assign ddr_A_M_wstrb = ddr_fabric$v_to_slaves_0_wstrb ;

  // value method ddr_A_M_m_wlast
  assign ddr_A_M_wlast = ddr_fabric$v_to_slaves_0_wlast ;

  // action method ddr_A_M_m_wready
  assign CAN_FIRE_ddr_A_M_m_wready = 1'd1 ;
  assign WILL_FIRE_ddr_A_M_m_wready = 1'd1 ;

  // action method ddr_A_M_m_bvalid
  assign CAN_FIRE_ddr_A_M_m_bvalid = 1'd1 ;
  assign WILL_FIRE_ddr_A_M_m_bvalid = 1'd1 ;

  // value method ddr_A_M_m_bready
  assign ddr_A_M_bready = ddr_fabric$v_to_slaves_0_bready ;

  // value method ddr_A_M_m_arvalid
  assign ddr_A_M_arvalid = ddr_fabric$v_to_slaves_0_arvalid ;

  // value method ddr_A_M_m_arid
  assign ddr_A_M_arid = ddr_fabric$v_to_slaves_0_arid ;

  // value method ddr_A_M_m_araddr
  assign ddr_A_M_araddr = ddr_fabric$v_to_slaves_0_araddr ;

  // value method ddr_A_M_m_arlen
  assign ddr_A_M_arlen = ddr_fabric$v_to_slaves_0_arlen ;

  // value method ddr_A_M_m_arsize
  assign ddr_A_M_arsize = ddr_fabric$v_to_slaves_0_arsize ;

  // value method ddr_A_M_m_arburst
  assign ddr_A_M_arburst = ddr_fabric$v_to_slaves_0_arburst ;

  // value method ddr_A_M_m_arlock
  assign ddr_A_M_arlock = ddr_fabric$v_to_slaves_0_arlock ;

  // value method ddr_A_M_m_arcache
  assign ddr_A_M_arcache = ddr_fabric$v_to_slaves_0_arcache ;

  // value method ddr_A_M_m_arprot
  assign ddr_A_M_arprot = ddr_fabric$v_to_slaves_0_arprot ;

  // value method ddr_A_M_m_arqos
  assign ddr_A_M_arqos = ddr_fabric$v_to_slaves_0_arqos ;

  // value method ddr_A_M_m_arregion
  assign ddr_A_M_arregion = ddr_fabric$v_to_slaves_0_arregion ;

  // action method ddr_A_M_m_arready
  assign CAN_FIRE_ddr_A_M_m_arready = 1'd1 ;
  assign WILL_FIRE_ddr_A_M_m_arready = 1'd1 ;

  // action method ddr_A_M_m_rvalid
  assign CAN_FIRE_ddr_A_M_m_rvalid = 1'd1 ;
  assign WILL_FIRE_ddr_A_M_m_rvalid = 1'd1 ;

  // value method ddr_A_M_m_rready
  assign ddr_A_M_rready = ddr_fabric$v_to_slaves_0_rready ;

  // value method ddr_B_M_m_awvalid
  assign ddr_B_M_awvalid = ddr_fabric$v_to_slaves_1_awvalid ;

  // value method ddr_B_M_m_awid
  assign ddr_B_M_awid = ddr_fabric$v_to_slaves_1_awid ;

  // value method ddr_B_M_m_awaddr
  assign ddr_B_M_awaddr = ddr_fabric$v_to_slaves_1_awaddr ;

  // value method ddr_B_M_m_awlen
  assign ddr_B_M_awlen = ddr_fabric$v_to_slaves_1_awlen ;

  // value method ddr_B_M_m_awsize
  assign ddr_B_M_awsize = ddr_fabric$v_to_slaves_1_awsize ;

  // value method ddr_B_M_m_awburst
  assign ddr_B_M_awburst = ddr_fabric$v_to_slaves_1_awburst ;

  // value method ddr_B_M_m_awlock
  assign ddr_B_M_awlock = ddr_fabric$v_to_slaves_1_awlock ;

  // value method ddr_B_M_m_awcache
  assign ddr_B_M_awcache = ddr_fabric$v_to_slaves_1_awcache ;

  // value method ddr_B_M_m_awprot
  assign ddr_B_M_awprot = ddr_fabric$v_to_slaves_1_awprot ;

  // value method ddr_B_M_m_awqos
  assign ddr_B_M_awqos = ddr_fabric$v_to_slaves_1_awqos ;

  // value method ddr_B_M_m_awregion
  assign ddr_B_M_awregion = ddr_fabric$v_to_slaves_1_awregion ;

  // action method ddr_B_M_m_awready
  assign CAN_FIRE_ddr_B_M_m_awready = 1'd1 ;
  assign WILL_FIRE_ddr_B_M_m_awready = 1'd1 ;

  // value method ddr_B_M_m_wvalid
  assign ddr_B_M_wvalid = ddr_fabric$v_to_slaves_1_wvalid ;

  // value method ddr_B_M_m_wdata
  assign ddr_B_M_wdata = ddr_fabric$v_to_slaves_1_wdata ;

  // value method ddr_B_M_m_wstrb
  assign ddr_B_M_wstrb = ddr_fabric$v_to_slaves_1_wstrb ;

  // value method ddr_B_M_m_wlast
  assign ddr_B_M_wlast = ddr_fabric$v_to_slaves_1_wlast ;

  // action method ddr_B_M_m_wready
  assign CAN_FIRE_ddr_B_M_m_wready = 1'd1 ;
  assign WILL_FIRE_ddr_B_M_m_wready = 1'd1 ;

  // action method ddr_B_M_m_bvalid
  assign CAN_FIRE_ddr_B_M_m_bvalid = 1'd1 ;
  assign WILL_FIRE_ddr_B_M_m_bvalid = 1'd1 ;

  // value method ddr_B_M_m_bready
  assign ddr_B_M_bready = ddr_fabric$v_to_slaves_1_bready ;

  // value method ddr_B_M_m_arvalid
  assign ddr_B_M_arvalid = ddr_fabric$v_to_slaves_1_arvalid ;

  // value method ddr_B_M_m_arid
  assign ddr_B_M_arid = ddr_fabric$v_to_slaves_1_arid ;

  // value method ddr_B_M_m_araddr
  assign ddr_B_M_araddr = ddr_fabric$v_to_slaves_1_araddr ;

  // value method ddr_B_M_m_arlen
  assign ddr_B_M_arlen = ddr_fabric$v_to_slaves_1_arlen ;

  // value method ddr_B_M_m_arsize
  assign ddr_B_M_arsize = ddr_fabric$v_to_slaves_1_arsize ;

  // value method ddr_B_M_m_arburst
  assign ddr_B_M_arburst = ddr_fabric$v_to_slaves_1_arburst ;

  // value method ddr_B_M_m_arlock
  assign ddr_B_M_arlock = ddr_fabric$v_to_slaves_1_arlock ;

  // value method ddr_B_M_m_arcache
  assign ddr_B_M_arcache = ddr_fabric$v_to_slaves_1_arcache ;

  // value method ddr_B_M_m_arprot
  assign ddr_B_M_arprot = ddr_fabric$v_to_slaves_1_arprot ;

  // value method ddr_B_M_m_arqos
  assign ddr_B_M_arqos = ddr_fabric$v_to_slaves_1_arqos ;

  // value method ddr_B_M_m_arregion
  assign ddr_B_M_arregion = ddr_fabric$v_to_slaves_1_arregion ;

  // action method ddr_B_M_m_arready
  assign CAN_FIRE_ddr_B_M_m_arready = 1'd1 ;
  assign WILL_FIRE_ddr_B_M_m_arready = 1'd1 ;

  // action method ddr_B_M_m_rvalid
  assign CAN_FIRE_ddr_B_M_m_rvalid = 1'd1 ;
  assign WILL_FIRE_ddr_B_M_m_rvalid = 1'd1 ;

  // value method ddr_B_M_m_rready
  assign ddr_B_M_rready = ddr_fabric$v_to_slaves_1_rready ;

  // value method ddr_C_M_m_awvalid
  assign ddr_C_M_awvalid = ddr_fabric$v_to_slaves_2_awvalid ;

  // value method ddr_C_M_m_awid
  assign ddr_C_M_awid = ddr_fabric$v_to_slaves_2_awid ;

  // value method ddr_C_M_m_awaddr
  assign ddr_C_M_awaddr = ddr_fabric$v_to_slaves_2_awaddr ;

  // value method ddr_C_M_m_awlen
  assign ddr_C_M_awlen = ddr_fabric$v_to_slaves_2_awlen ;

  // value method ddr_C_M_m_awsize
  assign ddr_C_M_awsize = ddr_fabric$v_to_slaves_2_awsize ;

  // value method ddr_C_M_m_awburst
  assign ddr_C_M_awburst = ddr_fabric$v_to_slaves_2_awburst ;

  // value method ddr_C_M_m_awlock
  assign ddr_C_M_awlock = ddr_fabric$v_to_slaves_2_awlock ;

  // value method ddr_C_M_m_awcache
  assign ddr_C_M_awcache = ddr_fabric$v_to_slaves_2_awcache ;

  // value method ddr_C_M_m_awprot
  assign ddr_C_M_awprot = ddr_fabric$v_to_slaves_2_awprot ;

  // value method ddr_C_M_m_awqos
  assign ddr_C_M_awqos = ddr_fabric$v_to_slaves_2_awqos ;

  // value method ddr_C_M_m_awregion
  assign ddr_C_M_awregion = ddr_fabric$v_to_slaves_2_awregion ;

  // action method ddr_C_M_m_awready
  assign CAN_FIRE_ddr_C_M_m_awready = 1'd1 ;
  assign WILL_FIRE_ddr_C_M_m_awready = 1'd1 ;

  // value method ddr_C_M_m_wvalid
  assign ddr_C_M_wvalid = ddr_fabric$v_to_slaves_2_wvalid ;

  // value method ddr_C_M_m_wdata
  assign ddr_C_M_wdata = ddr_fabric$v_to_slaves_2_wdata ;

  // value method ddr_C_M_m_wstrb
  assign ddr_C_M_wstrb = ddr_fabric$v_to_slaves_2_wstrb ;

  // value method ddr_C_M_m_wlast
  assign ddr_C_M_wlast = ddr_fabric$v_to_slaves_2_wlast ;

  // action method ddr_C_M_m_wready
  assign CAN_FIRE_ddr_C_M_m_wready = 1'd1 ;
  assign WILL_FIRE_ddr_C_M_m_wready = 1'd1 ;

  // action method ddr_C_M_m_bvalid
  assign CAN_FIRE_ddr_C_M_m_bvalid = 1'd1 ;
  assign WILL_FIRE_ddr_C_M_m_bvalid = 1'd1 ;

  // value method ddr_C_M_m_bready
  assign ddr_C_M_bready = ddr_fabric$v_to_slaves_2_bready ;

  // value method ddr_C_M_m_arvalid
  assign ddr_C_M_arvalid = ddr_fabric$v_to_slaves_2_arvalid ;

  // value method ddr_C_M_m_arid
  assign ddr_C_M_arid = ddr_fabric$v_to_slaves_2_arid ;

  // value method ddr_C_M_m_araddr
  assign ddr_C_M_araddr = ddr_fabric$v_to_slaves_2_araddr ;

  // value method ddr_C_M_m_arlen
  assign ddr_C_M_arlen = ddr_fabric$v_to_slaves_2_arlen ;

  // value method ddr_C_M_m_arsize
  assign ddr_C_M_arsize = ddr_fabric$v_to_slaves_2_arsize ;

  // value method ddr_C_M_m_arburst
  assign ddr_C_M_arburst = ddr_fabric$v_to_slaves_2_arburst ;

  // value method ddr_C_M_m_arlock
  assign ddr_C_M_arlock = ddr_fabric$v_to_slaves_2_arlock ;

  // value method ddr_C_M_m_arcache
  assign ddr_C_M_arcache = ddr_fabric$v_to_slaves_2_arcache ;

  // value method ddr_C_M_m_arprot
  assign ddr_C_M_arprot = ddr_fabric$v_to_slaves_2_arprot ;

  // value method ddr_C_M_m_arqos
  assign ddr_C_M_arqos = ddr_fabric$v_to_slaves_2_arqos ;

  // value method ddr_C_M_m_arregion
  assign ddr_C_M_arregion = ddr_fabric$v_to_slaves_2_arregion ;

  // action method ddr_C_M_m_arready
  assign CAN_FIRE_ddr_C_M_m_arready = 1'd1 ;
  assign WILL_FIRE_ddr_C_M_m_arready = 1'd1 ;

  // action method ddr_C_M_m_rvalid
  assign CAN_FIRE_ddr_C_M_m_rvalid = 1'd1 ;
  assign WILL_FIRE_ddr_C_M_m_rvalid = 1'd1 ;

  // value method ddr_C_M_m_rready
  assign ddr_C_M_rready = ddr_fabric$v_to_slaves_2_rready ;

  // value method ddr_D_M_m_awvalid
  assign ddr_D_M_awvalid = ddr_fabric$v_to_slaves_3_awvalid ;

  // value method ddr_D_M_m_awid
  assign ddr_D_M_awid = ddr_fabric$v_to_slaves_3_awid ;

  // value method ddr_D_M_m_awaddr
  assign ddr_D_M_awaddr = ddr_fabric$v_to_slaves_3_awaddr ;

  // value method ddr_D_M_m_awlen
  assign ddr_D_M_awlen = ddr_fabric$v_to_slaves_3_awlen ;

  // value method ddr_D_M_m_awsize
  assign ddr_D_M_awsize = ddr_fabric$v_to_slaves_3_awsize ;

  // value method ddr_D_M_m_awburst
  assign ddr_D_M_awburst = ddr_fabric$v_to_slaves_3_awburst ;

  // value method ddr_D_M_m_awlock
  assign ddr_D_M_awlock = ddr_fabric$v_to_slaves_3_awlock ;

  // value method ddr_D_M_m_awcache
  assign ddr_D_M_awcache = ddr_fabric$v_to_slaves_3_awcache ;

  // value method ddr_D_M_m_awprot
  assign ddr_D_M_awprot = ddr_fabric$v_to_slaves_3_awprot ;

  // value method ddr_D_M_m_awqos
  assign ddr_D_M_awqos = ddr_fabric$v_to_slaves_3_awqos ;

  // value method ddr_D_M_m_awregion
  assign ddr_D_M_awregion = ddr_fabric$v_to_slaves_3_awregion ;

  // action method ddr_D_M_m_awready
  assign CAN_FIRE_ddr_D_M_m_awready = 1'd1 ;
  assign WILL_FIRE_ddr_D_M_m_awready = 1'd1 ;

  // value method ddr_D_M_m_wvalid
  assign ddr_D_M_wvalid = ddr_fabric$v_to_slaves_3_wvalid ;

  // value method ddr_D_M_m_wdata
  assign ddr_D_M_wdata = ddr_fabric$v_to_slaves_3_wdata ;

  // value method ddr_D_M_m_wstrb
  assign ddr_D_M_wstrb = ddr_fabric$v_to_slaves_3_wstrb ;

  // value method ddr_D_M_m_wlast
  assign ddr_D_M_wlast = ddr_fabric$v_to_slaves_3_wlast ;

  // action method ddr_D_M_m_wready
  assign CAN_FIRE_ddr_D_M_m_wready = 1'd1 ;
  assign WILL_FIRE_ddr_D_M_m_wready = 1'd1 ;

  // action method ddr_D_M_m_bvalid
  assign CAN_FIRE_ddr_D_M_m_bvalid = 1'd1 ;
  assign WILL_FIRE_ddr_D_M_m_bvalid = 1'd1 ;

  // value method ddr_D_M_m_bready
  assign ddr_D_M_bready = ddr_fabric$v_to_slaves_3_bready ;

  // value method ddr_D_M_m_arvalid
  assign ddr_D_M_arvalid = ddr_fabric$v_to_slaves_3_arvalid ;

  // value method ddr_D_M_m_arid
  assign ddr_D_M_arid = ddr_fabric$v_to_slaves_3_arid ;

  // value method ddr_D_M_m_araddr
  assign ddr_D_M_araddr = ddr_fabric$v_to_slaves_3_araddr ;

  // value method ddr_D_M_m_arlen
  assign ddr_D_M_arlen = ddr_fabric$v_to_slaves_3_arlen ;

  // value method ddr_D_M_m_arsize
  assign ddr_D_M_arsize = ddr_fabric$v_to_slaves_3_arsize ;

  // value method ddr_D_M_m_arburst
  assign ddr_D_M_arburst = ddr_fabric$v_to_slaves_3_arburst ;

  // value method ddr_D_M_m_arlock
  assign ddr_D_M_arlock = ddr_fabric$v_to_slaves_3_arlock ;

  // value method ddr_D_M_m_arcache
  assign ddr_D_M_arcache = ddr_fabric$v_to_slaves_3_arcache ;

  // value method ddr_D_M_m_arprot
  assign ddr_D_M_arprot = ddr_fabric$v_to_slaves_3_arprot ;

  // value method ddr_D_M_m_arqos
  assign ddr_D_M_arqos = ddr_fabric$v_to_slaves_3_arqos ;

  // value method ddr_D_M_m_arregion
  assign ddr_D_M_arregion = ddr_fabric$v_to_slaves_3_arregion ;

  // action method ddr_D_M_m_arready
  assign CAN_FIRE_ddr_D_M_m_arready = 1'd1 ;
  assign WILL_FIRE_ddr_D_M_m_arready = 1'd1 ;

  // action method ddr_D_M_m_rvalid
  assign CAN_FIRE_ddr_D_M_m_rvalid = 1'd1 ;
  assign WILL_FIRE_ddr_D_M_m_rvalid = 1'd1 ;

  // value method ddr_D_M_m_rready
  assign ddr_D_M_rready = ddr_fabric$v_to_slaves_3_rready ;

  // action method m_env_ready
  assign CAN_FIRE_m_env_ready = 1'd1 ;
  assign WILL_FIRE_m_env_ready = 1'd1 ;

  // value method m_halted
  assign m_halted = 1'd0 ;

  // action method m_glcount
  assign CAN_FIRE_m_glcount = 1'd1 ;
  assign WILL_FIRE_m_glcount = 1'd1 ;

  // submodule awsteria_core
  mkAWSteria_Core awsteria_core(.CLK_clk1(CLK_clk1),
				.CLK_clk2(CLK_clk2),
				.CLK_clk3(CLK_clk3),
				.CLK_clk4(CLK_clk4),
				.CLK_clk5(CLK_clk5),
				.CLK(CLK),
				.RST_N(RST_N),
				.dma_S_araddr(awsteria_core$dma_S_araddr),
				.dma_S_arburst(awsteria_core$dma_S_arburst),
				.dma_S_arcache(awsteria_core$dma_S_arcache),
				.dma_S_arid(awsteria_core$dma_S_arid),
				.dma_S_arlen(awsteria_core$dma_S_arlen),
				.dma_S_arlock(awsteria_core$dma_S_arlock),
				.dma_S_arprot(awsteria_core$dma_S_arprot),
				.dma_S_arqos(awsteria_core$dma_S_arqos),
				.dma_S_arregion(awsteria_core$dma_S_arregion),
				.dma_S_arsize(awsteria_core$dma_S_arsize),
				.dma_S_arvalid(awsteria_core$dma_S_arvalid),
				.dma_S_awaddr(awsteria_core$dma_S_awaddr),
				.dma_S_awburst(awsteria_core$dma_S_awburst),
				.dma_S_awcache(awsteria_core$dma_S_awcache),
				.dma_S_awid(awsteria_core$dma_S_awid),
				.dma_S_awlen(awsteria_core$dma_S_awlen),
				.dma_S_awlock(awsteria_core$dma_S_awlock),
				.dma_S_awprot(awsteria_core$dma_S_awprot),
				.dma_S_awqos(awsteria_core$dma_S_awqos),
				.dma_S_awregion(awsteria_core$dma_S_awregion),
				.dma_S_awsize(awsteria_core$dma_S_awsize),
				.dma_S_awvalid(awsteria_core$dma_S_awvalid),
				.dma_S_bready(awsteria_core$dma_S_bready),
				.dma_S_rready(awsteria_core$dma_S_rready),
				.dma_S_wdata(awsteria_core$dma_S_wdata),
				.dma_S_wlast(awsteria_core$dma_S_wlast),
				.dma_S_wstrb(awsteria_core$dma_S_wstrb),
				.dma_S_wvalid(awsteria_core$dma_S_wvalid),
				.ext_interrupts_x(awsteria_core$ext_interrupts_x),
				.fi_misc_enq_x(awsteria_core$fi_misc_enq_x),
				.fi_nmi_enq_x(awsteria_core$fi_nmi_enq_x),
				.mem_M_arready(awsteria_core$mem_M_arready),
				.mem_M_awready(awsteria_core$mem_M_awready),
				.mem_M_bid(awsteria_core$mem_M_bid),
				.mem_M_bresp(awsteria_core$mem_M_bresp),
				.mem_M_bvalid(awsteria_core$mem_M_bvalid),
				.mem_M_rdata(awsteria_core$mem_M_rdata),
				.mem_M_rid(awsteria_core$mem_M_rid),
				.mem_M_rlast(awsteria_core$mem_M_rlast),
				.mem_M_rresp(awsteria_core$mem_M_rresp),
				.mem_M_rvalid(awsteria_core$mem_M_rvalid),
				.mem_M_wready(awsteria_core$mem_M_wready),
				.mmio_M_arready(awsteria_core$mmio_M_arready),
				.mmio_M_awready(awsteria_core$mmio_M_awready),
				.mmio_M_bid(awsteria_core$mmio_M_bid),
				.mmio_M_bresp(awsteria_core$mmio_M_bresp),
				.mmio_M_bvalid(awsteria_core$mmio_M_bvalid),
				.mmio_M_rdata(awsteria_core$mmio_M_rdata),
				.mmio_M_rid(awsteria_core$mmio_M_rid),
				.mmio_M_rlast(awsteria_core$mmio_M_rlast),
				.mmio_M_rresp(awsteria_core$mmio_M_rresp),
				.mmio_M_rvalid(awsteria_core$mmio_M_rvalid),
				.mmio_M_wready(awsteria_core$mmio_M_wready),
				.se_control_status_request_enq_x(awsteria_core$se_control_status_request_enq_x),
				.se_dmi_request_enq_x(awsteria_core$se_dmi_request_enq_x),
				.EN_ext_interrupts(awsteria_core$EN_ext_interrupts),
				.EN_fi_nmi_enq(awsteria_core$EN_fi_nmi_enq),
				.EN_fo_misc_deq(awsteria_core$EN_fo_misc_deq),
				.EN_fi_misc_enq(awsteria_core$EN_fi_misc_enq),
				.EN_fo_tv_info_deq(awsteria_core$EN_fo_tv_info_deq),
				.EN_se_dmi_request_enq(awsteria_core$EN_se_dmi_request_enq),
				.EN_se_dmi_response_deq(awsteria_core$EN_se_dmi_response_deq),
				.EN_cl_ndm_reset_request_deq(awsteria_core$EN_cl_ndm_reset_request_deq),
				.EN_cl_ndm_reset_response_enq(awsteria_core$EN_cl_ndm_reset_response_enq),
				.EN_se_control_status_request_enq(awsteria_core$EN_se_control_status_request_enq),
				.EN_se_control_status_response_deq(awsteria_core$EN_se_control_status_response_deq),
				.mem_M_awvalid(awsteria_core$mem_M_awvalid),
				.mem_M_awid(awsteria_core$mem_M_awid),
				.mem_M_awaddr(awsteria_core$mem_M_awaddr),
				.mem_M_awlen(awsteria_core$mem_M_awlen),
				.mem_M_awsize(awsteria_core$mem_M_awsize),
				.mem_M_awburst(awsteria_core$mem_M_awburst),
				.mem_M_awlock(awsteria_core$mem_M_awlock),
				.mem_M_awcache(awsteria_core$mem_M_awcache),
				.mem_M_awprot(awsteria_core$mem_M_awprot),
				.mem_M_awqos(awsteria_core$mem_M_awqos),
				.mem_M_awregion(awsteria_core$mem_M_awregion),
				.mem_M_wvalid(awsteria_core$mem_M_wvalid),
				.mem_M_wdata(awsteria_core$mem_M_wdata),
				.mem_M_wstrb(awsteria_core$mem_M_wstrb),
				.mem_M_wlast(awsteria_core$mem_M_wlast),
				.mem_M_bready(awsteria_core$mem_M_bready),
				.mem_M_arvalid(awsteria_core$mem_M_arvalid),
				.mem_M_arid(awsteria_core$mem_M_arid),
				.mem_M_araddr(awsteria_core$mem_M_araddr),
				.mem_M_arlen(awsteria_core$mem_M_arlen),
				.mem_M_arsize(awsteria_core$mem_M_arsize),
				.mem_M_arburst(awsteria_core$mem_M_arburst),
				.mem_M_arlock(awsteria_core$mem_M_arlock),
				.mem_M_arcache(awsteria_core$mem_M_arcache),
				.mem_M_arprot(awsteria_core$mem_M_arprot),
				.mem_M_arqos(awsteria_core$mem_M_arqos),
				.mem_M_arregion(awsteria_core$mem_M_arregion),
				.mem_M_rready(awsteria_core$mem_M_rready),
				.mmio_M_awvalid(awsteria_core$mmio_M_awvalid),
				.mmio_M_awid(awsteria_core$mmio_M_awid),
				.mmio_M_awaddr(awsteria_core$mmio_M_awaddr),
				.mmio_M_awlen(awsteria_core$mmio_M_awlen),
				.mmio_M_awsize(awsteria_core$mmio_M_awsize),
				.mmio_M_awburst(awsteria_core$mmio_M_awburst),
				.mmio_M_awlock(awsteria_core$mmio_M_awlock),
				.mmio_M_awcache(awsteria_core$mmio_M_awcache),
				.mmio_M_awprot(awsteria_core$mmio_M_awprot),
				.mmio_M_awqos(awsteria_core$mmio_M_awqos),
				.mmio_M_awregion(awsteria_core$mmio_M_awregion),
				.mmio_M_wvalid(awsteria_core$mmio_M_wvalid),
				.mmio_M_wdata(awsteria_core$mmio_M_wdata),
				.mmio_M_wstrb(awsteria_core$mmio_M_wstrb),
				.mmio_M_wlast(awsteria_core$mmio_M_wlast),
				.mmio_M_bready(awsteria_core$mmio_M_bready),
				.mmio_M_arvalid(awsteria_core$mmio_M_arvalid),
				.mmio_M_arid(awsteria_core$mmio_M_arid),
				.mmio_M_araddr(awsteria_core$mmio_M_araddr),
				.mmio_M_arlen(awsteria_core$mmio_M_arlen),
				.mmio_M_arsize(awsteria_core$mmio_M_arsize),
				.mmio_M_arburst(awsteria_core$mmio_M_arburst),
				.mmio_M_arlock(awsteria_core$mmio_M_arlock),
				.mmio_M_arcache(awsteria_core$mmio_M_arcache),
				.mmio_M_arprot(awsteria_core$mmio_M_arprot),
				.mmio_M_arqos(awsteria_core$mmio_M_arqos),
				.mmio_M_arregion(awsteria_core$mmio_M_arregion),
				.mmio_M_rready(awsteria_core$mmio_M_rready),
				.dma_S_awready(awsteria_core$dma_S_awready),
				.dma_S_wready(awsteria_core$dma_S_wready),
				.dma_S_bvalid(awsteria_core$dma_S_bvalid),
				.dma_S_bid(awsteria_core$dma_S_bid),
				.dma_S_bresp(awsteria_core$dma_S_bresp),
				.dma_S_arready(awsteria_core$dma_S_arready),
				.dma_S_rvalid(awsteria_core$dma_S_rvalid),
				.dma_S_rid(awsteria_core$dma_S_rid),
				.dma_S_rdata(awsteria_core$dma_S_rdata),
				.dma_S_rresp(awsteria_core$dma_S_rresp),
				.dma_S_rlast(awsteria_core$dma_S_rlast),
				.RDY_ext_interrupts(),
				.RDY_fi_nmi_enq(awsteria_core$RDY_fi_nmi_enq),
				.fi_nmi_notFull(),
				.RDY_fi_nmi_notFull(),
				.fo_misc_first(awsteria_core$fo_misc_first),
				.RDY_fo_misc_first(awsteria_core$RDY_fo_misc_first),
				.RDY_fo_misc_deq(awsteria_core$RDY_fo_misc_deq),
				.fo_misc_notEmpty(),
				.RDY_fo_misc_notEmpty(),
				.RDY_fi_misc_enq(awsteria_core$RDY_fi_misc_enq),
				.fi_misc_notFull(),
				.RDY_fi_misc_notFull(),
				.fo_tv_info_first(),
				.RDY_fo_tv_info_first(),
				.RDY_fo_tv_info_deq(awsteria_core$RDY_fo_tv_info_deq),
				.fo_tv_info_notEmpty(),
				.RDY_fo_tv_info_notEmpty(),
				.RDY_se_dmi_request_enq(awsteria_core$RDY_se_dmi_request_enq),
				.se_dmi_request_notFull(),
				.RDY_se_dmi_request_notFull(),
				.se_dmi_response_first(awsteria_core$se_dmi_response_first),
				.RDY_se_dmi_response_first(awsteria_core$RDY_se_dmi_response_first),
				.RDY_se_dmi_response_deq(awsteria_core$RDY_se_dmi_response_deq),
				.se_dmi_response_notEmpty(),
				.RDY_se_dmi_response_notEmpty(),
				.RDY_cl_ndm_reset_request_first(awsteria_core$RDY_cl_ndm_reset_request_first),
				.RDY_cl_ndm_reset_request_deq(awsteria_core$RDY_cl_ndm_reset_request_deq),
				.cl_ndm_reset_request_notEmpty(),
				.RDY_cl_ndm_reset_request_notEmpty(),
				.RDY_cl_ndm_reset_response_enq(awsteria_core$RDY_cl_ndm_reset_response_enq),
				.cl_ndm_reset_response_notFull(),
				.RDY_cl_ndm_reset_response_notFull(),
				.RDY_se_control_status_request_enq(awsteria_core$RDY_se_control_status_request_enq),
				.se_control_status_request_notFull(),
				.RDY_se_control_status_request_notFull(),
				.se_control_status_response_first(awsteria_core$se_control_status_response_first),
				.RDY_se_control_status_response_first(awsteria_core$RDY_se_control_status_response_first),
				.RDY_se_control_status_response_deq(awsteria_core$RDY_se_control_status_response_deq),
				.se_control_status_response_notEmpty(),
				.RDY_se_control_status_response_notEmpty());

  // submodule axi4L_channels
  mkAXI4L_Channels axi4L_channels(.CLK(CLK),
				  .RST_N(RST_N),
				  .axi4L_S_araddr(axi4L_channels$axi4L_S_araddr),
				  .axi4L_S_arprot(axi4L_channels$axi4L_S_arprot),
				  .axi4L_S_arvalid(axi4L_channels$axi4L_S_arvalid),
				  .axi4L_S_awaddr(axi4L_channels$axi4L_S_awaddr),
				  .axi4L_S_awprot(axi4L_channels$axi4L_S_awprot),
				  .axi4L_S_awvalid(axi4L_channels$axi4L_S_awvalid),
				  .axi4L_S_bready(axi4L_channels$axi4L_S_bready),
				  .axi4L_S_rready(axi4L_channels$axi4L_S_rready),
				  .axi4L_S_wdata(axi4L_channels$axi4L_S_wdata),
				  .axi4L_S_wstrb(axi4L_channels$axi4L_S_wstrb),
				  .axi4L_S_wvalid(axi4L_channels$axi4L_S_wvalid),
				  .v_to_host_0_enq_x(axi4L_channels$v_to_host_0_enq_x),
				  .v_to_host_1_enq_x(axi4L_channels$v_to_host_1_enq_x),
				  .v_to_host_2_enq_x(axi4L_channels$v_to_host_2_enq_x),
				  .v_to_host_3_enq_x(axi4L_channels$v_to_host_3_enq_x),
				  .v_to_host_4_enq_x(axi4L_channels$v_to_host_4_enq_x),
				  .EN_v_from_host_0_deq(axi4L_channels$EN_v_from_host_0_deq),
				  .EN_v_from_host_1_deq(axi4L_channels$EN_v_from_host_1_deq),
				  .EN_v_from_host_2_deq(axi4L_channels$EN_v_from_host_2_deq),
				  .EN_v_from_host_3_deq(axi4L_channels$EN_v_from_host_3_deq),
				  .EN_v_from_host_4_deq(axi4L_channels$EN_v_from_host_4_deq),
				  .EN_v_to_host_0_enq(axi4L_channels$EN_v_to_host_0_enq),
				  .EN_v_to_host_1_enq(axi4L_channels$EN_v_to_host_1_enq),
				  .EN_v_to_host_2_enq(axi4L_channels$EN_v_to_host_2_enq),
				  .EN_v_to_host_3_enq(axi4L_channels$EN_v_to_host_3_enq),
				  .EN_v_to_host_4_enq(axi4L_channels$EN_v_to_host_4_enq),
				  .axi4L_S_awready(axi4L_channels$axi4L_S_awready),
				  .axi4L_S_wready(axi4L_channels$axi4L_S_wready),
				  .axi4L_S_bvalid(axi4L_channels$axi4L_S_bvalid),
				  .axi4L_S_bresp(axi4L_channels$axi4L_S_bresp),
				  .axi4L_S_arready(axi4L_channels$axi4L_S_arready),
				  .axi4L_S_rvalid(axi4L_channels$axi4L_S_rvalid),
				  .axi4L_S_rresp(axi4L_channels$axi4L_S_rresp),
				  .axi4L_S_rdata(axi4L_channels$axi4L_S_rdata),
				  .v_from_host_0_first(axi4L_channels$v_from_host_0_first),
				  .RDY_v_from_host_0_first(axi4L_channels$RDY_v_from_host_0_first),
				  .RDY_v_from_host_0_deq(axi4L_channels$RDY_v_from_host_0_deq),
				  .v_from_host_0_notEmpty(),
				  .RDY_v_from_host_0_notEmpty(),
				  .v_from_host_1_first(axi4L_channels$v_from_host_1_first),
				  .RDY_v_from_host_1_first(axi4L_channels$RDY_v_from_host_1_first),
				  .RDY_v_from_host_1_deq(axi4L_channels$RDY_v_from_host_1_deq),
				  .v_from_host_1_notEmpty(),
				  .RDY_v_from_host_1_notEmpty(),
				  .v_from_host_2_first(axi4L_channels$v_from_host_2_first),
				  .RDY_v_from_host_2_first(axi4L_channels$RDY_v_from_host_2_first),
				  .RDY_v_from_host_2_deq(axi4L_channels$RDY_v_from_host_2_deq),
				  .v_from_host_2_notEmpty(),
				  .RDY_v_from_host_2_notEmpty(),
				  .v_from_host_3_first(axi4L_channels$v_from_host_3_first),
				  .RDY_v_from_host_3_first(axi4L_channels$RDY_v_from_host_3_first),
				  .RDY_v_from_host_3_deq(axi4L_channels$RDY_v_from_host_3_deq),
				  .v_from_host_3_notEmpty(),
				  .RDY_v_from_host_3_notEmpty(),
				  .v_from_host_4_first(axi4L_channels$v_from_host_4_first),
				  .RDY_v_from_host_4_first(axi4L_channels$RDY_v_from_host_4_first),
				  .RDY_v_from_host_4_deq(axi4L_channels$RDY_v_from_host_4_deq),
				  .v_from_host_4_notEmpty(),
				  .RDY_v_from_host_4_notEmpty(),
				  .RDY_v_to_host_0_enq(axi4L_channels$RDY_v_to_host_0_enq),
				  .v_to_host_0_notFull(),
				  .RDY_v_to_host_0_notFull(),
				  .RDY_v_to_host_1_enq(axi4L_channels$RDY_v_to_host_1_enq),
				  .v_to_host_1_notFull(),
				  .RDY_v_to_host_1_notFull(),
				  .RDY_v_to_host_2_enq(axi4L_channels$RDY_v_to_host_2_enq),
				  .v_to_host_2_notFull(),
				  .RDY_v_to_host_2_notFull(),
				  .RDY_v_to_host_3_enq(axi4L_channels$RDY_v_to_host_3_enq),
				  .v_to_host_3_notFull(),
				  .RDY_v_to_host_3_notFull(),
				  .RDY_v_to_host_4_enq(axi4L_channels$RDY_v_to_host_4_enq),
				  .v_to_host_4_notFull(),
				  .RDY_v_to_host_4_notFull());

  // submodule axi4_downsizer_ff_len
  FIFO2 #(.width(32'd11), .guarded(1'd1)) axi4_downsizer_ff_len(.RST(RST_N),
								.CLK(CLK),
								.D_IN(axi4_downsizer_ff_len$D_IN),
								.ENQ(axi4_downsizer_ff_len$ENQ),
								.DEQ(axi4_downsizer_ff_len$DEQ),
								.CLR(axi4_downsizer_ff_len$CLR),
								.D_OUT(axi4_downsizer_ff_len$D_OUT),
								.FULL_N(axi4_downsizer_ff_len$FULL_N),
								.EMPTY_N(axi4_downsizer_ff_len$EMPTY_N));

  // submodule axi4_downsizer_ff_wrRsp
  SizedFIFO #(.p1width(32'd2),
	      .p2depth(32'd16),
	      .p3cntr_width(32'd4),
	      .guarded(1'd1)) axi4_downsizer_ff_wrRsp(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(axi4_downsizer_ff_wrRsp$D_IN),
						      .ENQ(axi4_downsizer_ff_wrRsp$ENQ),
						      .DEQ(axi4_downsizer_ff_wrRsp$DEQ),
						      .CLR(axi4_downsizer_ff_wrRsp$CLR),
						      .D_OUT(axi4_downsizer_ff_wrRsp$D_OUT),
						      .FULL_N(axi4_downsizer_ff_wrRsp$FULL_N),
						      .EMPTY_N(axi4_downsizer_ff_wrRsp$EMPTY_N));

  // submodule axi4_downsizer_xactor_from_master_f_rd_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_downsizer_xactor_from_master_f_rd_addr(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(axi4_downsizer_xactor_from_master_f_rd_addr$D_IN),
								      .ENQ(axi4_downsizer_xactor_from_master_f_rd_addr$ENQ),
								      .DEQ(axi4_downsizer_xactor_from_master_f_rd_addr$DEQ),
								      .CLR(axi4_downsizer_xactor_from_master_f_rd_addr$CLR),
								      .D_OUT(axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT),
								      .FULL_N(axi4_downsizer_xactor_from_master_f_rd_addr$FULL_N),
								      .EMPTY_N(axi4_downsizer_xactor_from_master_f_rd_addr$EMPTY_N));

  // submodule axi4_downsizer_xactor_from_master_f_rd_data
  FIFO2 #(.width(32'd531),
	  .guarded(1'd1)) axi4_downsizer_xactor_from_master_f_rd_data(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(axi4_downsizer_xactor_from_master_f_rd_data$D_IN),
								      .ENQ(axi4_downsizer_xactor_from_master_f_rd_data$ENQ),
								      .DEQ(axi4_downsizer_xactor_from_master_f_rd_data$DEQ),
								      .CLR(axi4_downsizer_xactor_from_master_f_rd_data$CLR),
								      .D_OUT(axi4_downsizer_xactor_from_master_f_rd_data$D_OUT),
								      .FULL_N(axi4_downsizer_xactor_from_master_f_rd_data$FULL_N),
								      .EMPTY_N(axi4_downsizer_xactor_from_master_f_rd_data$EMPTY_N));

  // submodule axi4_downsizer_xactor_from_master_f_wr_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_downsizer_xactor_from_master_f_wr_addr(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(axi4_downsizer_xactor_from_master_f_wr_addr$D_IN),
								      .ENQ(axi4_downsizer_xactor_from_master_f_wr_addr$ENQ),
								      .DEQ(axi4_downsizer_xactor_from_master_f_wr_addr$DEQ),
								      .CLR(axi4_downsizer_xactor_from_master_f_wr_addr$CLR),
								      .D_OUT(axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT),
								      .FULL_N(axi4_downsizer_xactor_from_master_f_wr_addr$FULL_N),
								      .EMPTY_N(axi4_downsizer_xactor_from_master_f_wr_addr$EMPTY_N));

  // submodule axi4_downsizer_xactor_from_master_f_wr_data
  FIFO2 #(.width(32'd577),
	  .guarded(1'd1)) axi4_downsizer_xactor_from_master_f_wr_data(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(axi4_downsizer_xactor_from_master_f_wr_data$D_IN),
								      .ENQ(axi4_downsizer_xactor_from_master_f_wr_data$ENQ),
								      .DEQ(axi4_downsizer_xactor_from_master_f_wr_data$DEQ),
								      .CLR(axi4_downsizer_xactor_from_master_f_wr_data$CLR),
								      .D_OUT(axi4_downsizer_xactor_from_master_f_wr_data$D_OUT),
								      .FULL_N(axi4_downsizer_xactor_from_master_f_wr_data$FULL_N),
								      .EMPTY_N(axi4_downsizer_xactor_from_master_f_wr_data$EMPTY_N));

  // submodule axi4_downsizer_xactor_from_master_f_wr_resp
  FIFO2 #(.width(32'd18),
	  .guarded(1'd1)) axi4_downsizer_xactor_from_master_f_wr_resp(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(axi4_downsizer_xactor_from_master_f_wr_resp$D_IN),
								      .ENQ(axi4_downsizer_xactor_from_master_f_wr_resp$ENQ),
								      .DEQ(axi4_downsizer_xactor_from_master_f_wr_resp$DEQ),
								      .CLR(axi4_downsizer_xactor_from_master_f_wr_resp$CLR),
								      .D_OUT(axi4_downsizer_xactor_from_master_f_wr_resp$D_OUT),
								      .FULL_N(axi4_downsizer_xactor_from_master_f_wr_resp$FULL_N),
								      .EMPTY_N(axi4_downsizer_xactor_from_master_f_wr_resp$EMPTY_N));

  // submodule axi4_downsizer_xactor_to_slave_f_rd_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_downsizer_xactor_to_slave_f_rd_addr(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(axi4_downsizer_xactor_to_slave_f_rd_addr$D_IN),
								   .ENQ(axi4_downsizer_xactor_to_slave_f_rd_addr$ENQ),
								   .DEQ(axi4_downsizer_xactor_to_slave_f_rd_addr$DEQ),
								   .CLR(axi4_downsizer_xactor_to_slave_f_rd_addr$CLR),
								   .D_OUT(axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT),
								   .FULL_N(axi4_downsizer_xactor_to_slave_f_rd_addr$FULL_N),
								   .EMPTY_N(axi4_downsizer_xactor_to_slave_f_rd_addr$EMPTY_N));

  // submodule axi4_downsizer_xactor_to_slave_f_rd_data
  FIFO2 #(.width(32'd83),
	  .guarded(1'd1)) axi4_downsizer_xactor_to_slave_f_rd_data(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(axi4_downsizer_xactor_to_slave_f_rd_data$D_IN),
								   .ENQ(axi4_downsizer_xactor_to_slave_f_rd_data$ENQ),
								   .DEQ(axi4_downsizer_xactor_to_slave_f_rd_data$DEQ),
								   .CLR(axi4_downsizer_xactor_to_slave_f_rd_data$CLR),
								   .D_OUT(axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT),
								   .FULL_N(axi4_downsizer_xactor_to_slave_f_rd_data$FULL_N),
								   .EMPTY_N(axi4_downsizer_xactor_to_slave_f_rd_data$EMPTY_N));

  // submodule axi4_downsizer_xactor_to_slave_f_wr_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_downsizer_xactor_to_slave_f_wr_addr(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(axi4_downsizer_xactor_to_slave_f_wr_addr$D_IN),
								   .ENQ(axi4_downsizer_xactor_to_slave_f_wr_addr$ENQ),
								   .DEQ(axi4_downsizer_xactor_to_slave_f_wr_addr$DEQ),
								   .CLR(axi4_downsizer_xactor_to_slave_f_wr_addr$CLR),
								   .D_OUT(axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT),
								   .FULL_N(axi4_downsizer_xactor_to_slave_f_wr_addr$FULL_N),
								   .EMPTY_N(axi4_downsizer_xactor_to_slave_f_wr_addr$EMPTY_N));

  // submodule axi4_downsizer_xactor_to_slave_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(1'd1)) axi4_downsizer_xactor_to_slave_f_wr_data(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(axi4_downsizer_xactor_to_slave_f_wr_data$D_IN),
								   .ENQ(axi4_downsizer_xactor_to_slave_f_wr_data$ENQ),
								   .DEQ(axi4_downsizer_xactor_to_slave_f_wr_data$DEQ),
								   .CLR(axi4_downsizer_xactor_to_slave_f_wr_data$CLR),
								   .D_OUT(axi4_downsizer_xactor_to_slave_f_wr_data$D_OUT),
								   .FULL_N(axi4_downsizer_xactor_to_slave_f_wr_data$FULL_N),
								   .EMPTY_N(axi4_downsizer_xactor_to_slave_f_wr_data$EMPTY_N));

  // submodule axi4_downsizer_xactor_to_slave_f_wr_resp
  FIFO2 #(.width(32'd18),
	  .guarded(1'd1)) axi4_downsizer_xactor_to_slave_f_wr_resp(.RST(RST_N),
								   .CLK(CLK),
								   .D_IN(axi4_downsizer_xactor_to_slave_f_wr_resp$D_IN),
								   .ENQ(axi4_downsizer_xactor_to_slave_f_wr_resp$ENQ),
								   .DEQ(axi4_downsizer_xactor_to_slave_f_wr_resp$DEQ),
								   .CLR(axi4_downsizer_xactor_to_slave_f_wr_resp$CLR),
								   .D_OUT(axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT),
								   .FULL_N(axi4_downsizer_xactor_to_slave_f_wr_resp$FULL_N),
								   .EMPTY_N(axi4_downsizer_xactor_to_slave_f_wr_resp$EMPTY_N));

  // submodule axi4_widener_f_araddrs
  SizedFIFO #(.p1width(32'd64),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) axi4_widener_f_araddrs(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(axi4_widener_f_araddrs$D_IN),
						     .ENQ(axi4_widener_f_araddrs$ENQ),
						     .DEQ(axi4_widener_f_araddrs$DEQ),
						     .CLR(axi4_widener_f_araddrs$CLR),
						     .D_OUT(axi4_widener_f_araddrs$D_OUT),
						     .FULL_N(axi4_widener_f_araddrs$FULL_N),
						     .EMPTY_N(axi4_widener_f_araddrs$EMPTY_N));

  // submodule axi4_widener_xactor_from_master_f_rd_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_widener_xactor_from_master_f_rd_addr(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(axi4_widener_xactor_from_master_f_rd_addr$D_IN),
								    .ENQ(axi4_widener_xactor_from_master_f_rd_addr$ENQ),
								    .DEQ(axi4_widener_xactor_from_master_f_rd_addr$DEQ),
								    .CLR(axi4_widener_xactor_from_master_f_rd_addr$CLR),
								    .D_OUT(axi4_widener_xactor_from_master_f_rd_addr$D_OUT),
								    .FULL_N(axi4_widener_xactor_from_master_f_rd_addr$FULL_N),
								    .EMPTY_N(axi4_widener_xactor_from_master_f_rd_addr$EMPTY_N));

  // submodule axi4_widener_xactor_from_master_f_rd_data
  FIFO2 #(.width(32'd83),
	  .guarded(1'd1)) axi4_widener_xactor_from_master_f_rd_data(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(axi4_widener_xactor_from_master_f_rd_data$D_IN),
								    .ENQ(axi4_widener_xactor_from_master_f_rd_data$ENQ),
								    .DEQ(axi4_widener_xactor_from_master_f_rd_data$DEQ),
								    .CLR(axi4_widener_xactor_from_master_f_rd_data$CLR),
								    .D_OUT(axi4_widener_xactor_from_master_f_rd_data$D_OUT),
								    .FULL_N(axi4_widener_xactor_from_master_f_rd_data$FULL_N),
								    .EMPTY_N(axi4_widener_xactor_from_master_f_rd_data$EMPTY_N));

  // submodule axi4_widener_xactor_from_master_f_wr_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_widener_xactor_from_master_f_wr_addr(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(axi4_widener_xactor_from_master_f_wr_addr$D_IN),
								    .ENQ(axi4_widener_xactor_from_master_f_wr_addr$ENQ),
								    .DEQ(axi4_widener_xactor_from_master_f_wr_addr$DEQ),
								    .CLR(axi4_widener_xactor_from_master_f_wr_addr$CLR),
								    .D_OUT(axi4_widener_xactor_from_master_f_wr_addr$D_OUT),
								    .FULL_N(axi4_widener_xactor_from_master_f_wr_addr$FULL_N),
								    .EMPTY_N(axi4_widener_xactor_from_master_f_wr_addr$EMPTY_N));

  // submodule axi4_widener_xactor_from_master_f_wr_data
  FIFO2 #(.width(32'd73),
	  .guarded(1'd1)) axi4_widener_xactor_from_master_f_wr_data(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(axi4_widener_xactor_from_master_f_wr_data$D_IN),
								    .ENQ(axi4_widener_xactor_from_master_f_wr_data$ENQ),
								    .DEQ(axi4_widener_xactor_from_master_f_wr_data$DEQ),
								    .CLR(axi4_widener_xactor_from_master_f_wr_data$CLR),
								    .D_OUT(axi4_widener_xactor_from_master_f_wr_data$D_OUT),
								    .FULL_N(axi4_widener_xactor_from_master_f_wr_data$FULL_N),
								    .EMPTY_N(axi4_widener_xactor_from_master_f_wr_data$EMPTY_N));

  // submodule axi4_widener_xactor_from_master_f_wr_resp
  FIFO2 #(.width(32'd18),
	  .guarded(1'd1)) axi4_widener_xactor_from_master_f_wr_resp(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(axi4_widener_xactor_from_master_f_wr_resp$D_IN),
								    .ENQ(axi4_widener_xactor_from_master_f_wr_resp$ENQ),
								    .DEQ(axi4_widener_xactor_from_master_f_wr_resp$DEQ),
								    .CLR(axi4_widener_xactor_from_master_f_wr_resp$CLR),
								    .D_OUT(axi4_widener_xactor_from_master_f_wr_resp$D_OUT),
								    .FULL_N(axi4_widener_xactor_from_master_f_wr_resp$FULL_N),
								    .EMPTY_N(axi4_widener_xactor_from_master_f_wr_resp$EMPTY_N));

  // submodule axi4_widener_xactor_to_slave_f_rd_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_widener_xactor_to_slave_f_rd_addr(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(axi4_widener_xactor_to_slave_f_rd_addr$D_IN),
								 .ENQ(axi4_widener_xactor_to_slave_f_rd_addr$ENQ),
								 .DEQ(axi4_widener_xactor_to_slave_f_rd_addr$DEQ),
								 .CLR(axi4_widener_xactor_to_slave_f_rd_addr$CLR),
								 .D_OUT(axi4_widener_xactor_to_slave_f_rd_addr$D_OUT),
								 .FULL_N(axi4_widener_xactor_to_slave_f_rd_addr$FULL_N),
								 .EMPTY_N(axi4_widener_xactor_to_slave_f_rd_addr$EMPTY_N));

  // submodule axi4_widener_xactor_to_slave_f_rd_data
  FIFO2 #(.width(32'd531),
	  .guarded(1'd1)) axi4_widener_xactor_to_slave_f_rd_data(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(axi4_widener_xactor_to_slave_f_rd_data$D_IN),
								 .ENQ(axi4_widener_xactor_to_slave_f_rd_data$ENQ),
								 .DEQ(axi4_widener_xactor_to_slave_f_rd_data$DEQ),
								 .CLR(axi4_widener_xactor_to_slave_f_rd_data$CLR),
								 .D_OUT(axi4_widener_xactor_to_slave_f_rd_data$D_OUT),
								 .FULL_N(axi4_widener_xactor_to_slave_f_rd_data$FULL_N),
								 .EMPTY_N(axi4_widener_xactor_to_slave_f_rd_data$EMPTY_N));

  // submodule axi4_widener_xactor_to_slave_f_wr_addr
  FIFO2 #(.width(32'd109),
	  .guarded(1'd1)) axi4_widener_xactor_to_slave_f_wr_addr(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(axi4_widener_xactor_to_slave_f_wr_addr$D_IN),
								 .ENQ(axi4_widener_xactor_to_slave_f_wr_addr$ENQ),
								 .DEQ(axi4_widener_xactor_to_slave_f_wr_addr$DEQ),
								 .CLR(axi4_widener_xactor_to_slave_f_wr_addr$CLR),
								 .D_OUT(axi4_widener_xactor_to_slave_f_wr_addr$D_OUT),
								 .FULL_N(axi4_widener_xactor_to_slave_f_wr_addr$FULL_N),
								 .EMPTY_N(axi4_widener_xactor_to_slave_f_wr_addr$EMPTY_N));

  // submodule axi4_widener_xactor_to_slave_f_wr_data
  FIFO2 #(.width(32'd577),
	  .guarded(1'd1)) axi4_widener_xactor_to_slave_f_wr_data(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(axi4_widener_xactor_to_slave_f_wr_data$D_IN),
								 .ENQ(axi4_widener_xactor_to_slave_f_wr_data$ENQ),
								 .DEQ(axi4_widener_xactor_to_slave_f_wr_data$DEQ),
								 .CLR(axi4_widener_xactor_to_slave_f_wr_data$CLR),
								 .D_OUT(axi4_widener_xactor_to_slave_f_wr_data$D_OUT),
								 .FULL_N(axi4_widener_xactor_to_slave_f_wr_data$FULL_N),
								 .EMPTY_N(axi4_widener_xactor_to_slave_f_wr_data$EMPTY_N));

  // submodule axi4_widener_xactor_to_slave_f_wr_resp
  FIFO2 #(.width(32'd18),
	  .guarded(1'd1)) axi4_widener_xactor_to_slave_f_wr_resp(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(axi4_widener_xactor_to_slave_f_wr_resp$D_IN),
								 .ENQ(axi4_widener_xactor_to_slave_f_wr_resp$ENQ),
								 .DEQ(axi4_widener_xactor_to_slave_f_wr_resp$DEQ),
								 .CLR(axi4_widener_xactor_to_slave_f_wr_resp$CLR),
								 .D_OUT(axi4_widener_xactor_to_slave_f_wr_resp$D_OUT),
								 .FULL_N(axi4_widener_xactor_to_slave_f_wr_resp$FULL_N),
								 .EMPTY_N(axi4_widener_xactor_to_slave_f_wr_resp$EMPTY_N));

  // submodule ddr_fabric
  mkDDR_Fabric ddr_fabric(.CLK(CLK),
			  .RST_N(RST_N),
			  .set_verbosity_verbosity(ddr_fabric$set_verbosity_verbosity),
			  .v_from_masters_0_araddr(ddr_fabric$v_from_masters_0_araddr),
			  .v_from_masters_0_arburst(ddr_fabric$v_from_masters_0_arburst),
			  .v_from_masters_0_arcache(ddr_fabric$v_from_masters_0_arcache),
			  .v_from_masters_0_arid(ddr_fabric$v_from_masters_0_arid),
			  .v_from_masters_0_arlen(ddr_fabric$v_from_masters_0_arlen),
			  .v_from_masters_0_arlock(ddr_fabric$v_from_masters_0_arlock),
			  .v_from_masters_0_arprot(ddr_fabric$v_from_masters_0_arprot),
			  .v_from_masters_0_arqos(ddr_fabric$v_from_masters_0_arqos),
			  .v_from_masters_0_arregion(ddr_fabric$v_from_masters_0_arregion),
			  .v_from_masters_0_arsize(ddr_fabric$v_from_masters_0_arsize),
			  .v_from_masters_0_arvalid(ddr_fabric$v_from_masters_0_arvalid),
			  .v_from_masters_0_awaddr(ddr_fabric$v_from_masters_0_awaddr),
			  .v_from_masters_0_awburst(ddr_fabric$v_from_masters_0_awburst),
			  .v_from_masters_0_awcache(ddr_fabric$v_from_masters_0_awcache),
			  .v_from_masters_0_awid(ddr_fabric$v_from_masters_0_awid),
			  .v_from_masters_0_awlen(ddr_fabric$v_from_masters_0_awlen),
			  .v_from_masters_0_awlock(ddr_fabric$v_from_masters_0_awlock),
			  .v_from_masters_0_awprot(ddr_fabric$v_from_masters_0_awprot),
			  .v_from_masters_0_awqos(ddr_fabric$v_from_masters_0_awqos),
			  .v_from_masters_0_awregion(ddr_fabric$v_from_masters_0_awregion),
			  .v_from_masters_0_awsize(ddr_fabric$v_from_masters_0_awsize),
			  .v_from_masters_0_awvalid(ddr_fabric$v_from_masters_0_awvalid),
			  .v_from_masters_0_bready(ddr_fabric$v_from_masters_0_bready),
			  .v_from_masters_0_rready(ddr_fabric$v_from_masters_0_rready),
			  .v_from_masters_0_wdata(ddr_fabric$v_from_masters_0_wdata),
			  .v_from_masters_0_wlast(ddr_fabric$v_from_masters_0_wlast),
			  .v_from_masters_0_wstrb(ddr_fabric$v_from_masters_0_wstrb),
			  .v_from_masters_0_wvalid(ddr_fabric$v_from_masters_0_wvalid),
			  .v_from_masters_1_araddr(ddr_fabric$v_from_masters_1_araddr),
			  .v_from_masters_1_arburst(ddr_fabric$v_from_masters_1_arburst),
			  .v_from_masters_1_arcache(ddr_fabric$v_from_masters_1_arcache),
			  .v_from_masters_1_arid(ddr_fabric$v_from_masters_1_arid),
			  .v_from_masters_1_arlen(ddr_fabric$v_from_masters_1_arlen),
			  .v_from_masters_1_arlock(ddr_fabric$v_from_masters_1_arlock),
			  .v_from_masters_1_arprot(ddr_fabric$v_from_masters_1_arprot),
			  .v_from_masters_1_arqos(ddr_fabric$v_from_masters_1_arqos),
			  .v_from_masters_1_arregion(ddr_fabric$v_from_masters_1_arregion),
			  .v_from_masters_1_arsize(ddr_fabric$v_from_masters_1_arsize),
			  .v_from_masters_1_arvalid(ddr_fabric$v_from_masters_1_arvalid),
			  .v_from_masters_1_awaddr(ddr_fabric$v_from_masters_1_awaddr),
			  .v_from_masters_1_awburst(ddr_fabric$v_from_masters_1_awburst),
			  .v_from_masters_1_awcache(ddr_fabric$v_from_masters_1_awcache),
			  .v_from_masters_1_awid(ddr_fabric$v_from_masters_1_awid),
			  .v_from_masters_1_awlen(ddr_fabric$v_from_masters_1_awlen),
			  .v_from_masters_1_awlock(ddr_fabric$v_from_masters_1_awlock),
			  .v_from_masters_1_awprot(ddr_fabric$v_from_masters_1_awprot),
			  .v_from_masters_1_awqos(ddr_fabric$v_from_masters_1_awqos),
			  .v_from_masters_1_awregion(ddr_fabric$v_from_masters_1_awregion),
			  .v_from_masters_1_awsize(ddr_fabric$v_from_masters_1_awsize),
			  .v_from_masters_1_awvalid(ddr_fabric$v_from_masters_1_awvalid),
			  .v_from_masters_1_bready(ddr_fabric$v_from_masters_1_bready),
			  .v_from_masters_1_rready(ddr_fabric$v_from_masters_1_rready),
			  .v_from_masters_1_wdata(ddr_fabric$v_from_masters_1_wdata),
			  .v_from_masters_1_wlast(ddr_fabric$v_from_masters_1_wlast),
			  .v_from_masters_1_wstrb(ddr_fabric$v_from_masters_1_wstrb),
			  .v_from_masters_1_wvalid(ddr_fabric$v_from_masters_1_wvalid),
			  .v_from_masters_2_araddr(ddr_fabric$v_from_masters_2_araddr),
			  .v_from_masters_2_arburst(ddr_fabric$v_from_masters_2_arburst),
			  .v_from_masters_2_arcache(ddr_fabric$v_from_masters_2_arcache),
			  .v_from_masters_2_arid(ddr_fabric$v_from_masters_2_arid),
			  .v_from_masters_2_arlen(ddr_fabric$v_from_masters_2_arlen),
			  .v_from_masters_2_arlock(ddr_fabric$v_from_masters_2_arlock),
			  .v_from_masters_2_arprot(ddr_fabric$v_from_masters_2_arprot),
			  .v_from_masters_2_arqos(ddr_fabric$v_from_masters_2_arqos),
			  .v_from_masters_2_arregion(ddr_fabric$v_from_masters_2_arregion),
			  .v_from_masters_2_arsize(ddr_fabric$v_from_masters_2_arsize),
			  .v_from_masters_2_arvalid(ddr_fabric$v_from_masters_2_arvalid),
			  .v_from_masters_2_awaddr(ddr_fabric$v_from_masters_2_awaddr),
			  .v_from_masters_2_awburst(ddr_fabric$v_from_masters_2_awburst),
			  .v_from_masters_2_awcache(ddr_fabric$v_from_masters_2_awcache),
			  .v_from_masters_2_awid(ddr_fabric$v_from_masters_2_awid),
			  .v_from_masters_2_awlen(ddr_fabric$v_from_masters_2_awlen),
			  .v_from_masters_2_awlock(ddr_fabric$v_from_masters_2_awlock),
			  .v_from_masters_2_awprot(ddr_fabric$v_from_masters_2_awprot),
			  .v_from_masters_2_awqos(ddr_fabric$v_from_masters_2_awqos),
			  .v_from_masters_2_awregion(ddr_fabric$v_from_masters_2_awregion),
			  .v_from_masters_2_awsize(ddr_fabric$v_from_masters_2_awsize),
			  .v_from_masters_2_awvalid(ddr_fabric$v_from_masters_2_awvalid),
			  .v_from_masters_2_bready(ddr_fabric$v_from_masters_2_bready),
			  .v_from_masters_2_rready(ddr_fabric$v_from_masters_2_rready),
			  .v_from_masters_2_wdata(ddr_fabric$v_from_masters_2_wdata),
			  .v_from_masters_2_wlast(ddr_fabric$v_from_masters_2_wlast),
			  .v_from_masters_2_wstrb(ddr_fabric$v_from_masters_2_wstrb),
			  .v_from_masters_2_wvalid(ddr_fabric$v_from_masters_2_wvalid),
			  .v_to_slaves_0_arready(ddr_fabric$v_to_slaves_0_arready),
			  .v_to_slaves_0_awready(ddr_fabric$v_to_slaves_0_awready),
			  .v_to_slaves_0_bid(ddr_fabric$v_to_slaves_0_bid),
			  .v_to_slaves_0_bresp(ddr_fabric$v_to_slaves_0_bresp),
			  .v_to_slaves_0_bvalid(ddr_fabric$v_to_slaves_0_bvalid),
			  .v_to_slaves_0_rdata(ddr_fabric$v_to_slaves_0_rdata),
			  .v_to_slaves_0_rid(ddr_fabric$v_to_slaves_0_rid),
			  .v_to_slaves_0_rlast(ddr_fabric$v_to_slaves_0_rlast),
			  .v_to_slaves_0_rresp(ddr_fabric$v_to_slaves_0_rresp),
			  .v_to_slaves_0_rvalid(ddr_fabric$v_to_slaves_0_rvalid),
			  .v_to_slaves_0_wready(ddr_fabric$v_to_slaves_0_wready),
			  .v_to_slaves_1_arready(ddr_fabric$v_to_slaves_1_arready),
			  .v_to_slaves_1_awready(ddr_fabric$v_to_slaves_1_awready),
			  .v_to_slaves_1_bid(ddr_fabric$v_to_slaves_1_bid),
			  .v_to_slaves_1_bresp(ddr_fabric$v_to_slaves_1_bresp),
			  .v_to_slaves_1_bvalid(ddr_fabric$v_to_slaves_1_bvalid),
			  .v_to_slaves_1_rdata(ddr_fabric$v_to_slaves_1_rdata),
			  .v_to_slaves_1_rid(ddr_fabric$v_to_slaves_1_rid),
			  .v_to_slaves_1_rlast(ddr_fabric$v_to_slaves_1_rlast),
			  .v_to_slaves_1_rresp(ddr_fabric$v_to_slaves_1_rresp),
			  .v_to_slaves_1_rvalid(ddr_fabric$v_to_slaves_1_rvalid),
			  .v_to_slaves_1_wready(ddr_fabric$v_to_slaves_1_wready),
			  .v_to_slaves_2_arready(ddr_fabric$v_to_slaves_2_arready),
			  .v_to_slaves_2_awready(ddr_fabric$v_to_slaves_2_awready),
			  .v_to_slaves_2_bid(ddr_fabric$v_to_slaves_2_bid),
			  .v_to_slaves_2_bresp(ddr_fabric$v_to_slaves_2_bresp),
			  .v_to_slaves_2_bvalid(ddr_fabric$v_to_slaves_2_bvalid),
			  .v_to_slaves_2_rdata(ddr_fabric$v_to_slaves_2_rdata),
			  .v_to_slaves_2_rid(ddr_fabric$v_to_slaves_2_rid),
			  .v_to_slaves_2_rlast(ddr_fabric$v_to_slaves_2_rlast),
			  .v_to_slaves_2_rresp(ddr_fabric$v_to_slaves_2_rresp),
			  .v_to_slaves_2_rvalid(ddr_fabric$v_to_slaves_2_rvalid),
			  .v_to_slaves_2_wready(ddr_fabric$v_to_slaves_2_wready),
			  .v_to_slaves_3_arready(ddr_fabric$v_to_slaves_3_arready),
			  .v_to_slaves_3_awready(ddr_fabric$v_to_slaves_3_awready),
			  .v_to_slaves_3_bid(ddr_fabric$v_to_slaves_3_bid),
			  .v_to_slaves_3_bresp(ddr_fabric$v_to_slaves_3_bresp),
			  .v_to_slaves_3_bvalid(ddr_fabric$v_to_slaves_3_bvalid),
			  .v_to_slaves_3_rdata(ddr_fabric$v_to_slaves_3_rdata),
			  .v_to_slaves_3_rid(ddr_fabric$v_to_slaves_3_rid),
			  .v_to_slaves_3_rlast(ddr_fabric$v_to_slaves_3_rlast),
			  .v_to_slaves_3_rresp(ddr_fabric$v_to_slaves_3_rresp),
			  .v_to_slaves_3_rvalid(ddr_fabric$v_to_slaves_3_rvalid),
			  .v_to_slaves_3_wready(ddr_fabric$v_to_slaves_3_wready),
			  .EN_reset(ddr_fabric$EN_reset),
			  .EN_set_verbosity(ddr_fabric$EN_set_verbosity),
			  .RDY_reset(),
			  .RDY_set_verbosity(),
			  .v_from_masters_0_awready(ddr_fabric$v_from_masters_0_awready),
			  .v_from_masters_0_wready(ddr_fabric$v_from_masters_0_wready),
			  .v_from_masters_0_bvalid(ddr_fabric$v_from_masters_0_bvalid),
			  .v_from_masters_0_bid(ddr_fabric$v_from_masters_0_bid),
			  .v_from_masters_0_bresp(ddr_fabric$v_from_masters_0_bresp),
			  .v_from_masters_0_arready(ddr_fabric$v_from_masters_0_arready),
			  .v_from_masters_0_rvalid(ddr_fabric$v_from_masters_0_rvalid),
			  .v_from_masters_0_rid(ddr_fabric$v_from_masters_0_rid),
			  .v_from_masters_0_rdata(ddr_fabric$v_from_masters_0_rdata),
			  .v_from_masters_0_rresp(ddr_fabric$v_from_masters_0_rresp),
			  .v_from_masters_0_rlast(ddr_fabric$v_from_masters_0_rlast),
			  .v_from_masters_1_awready(ddr_fabric$v_from_masters_1_awready),
			  .v_from_masters_1_wready(ddr_fabric$v_from_masters_1_wready),
			  .v_from_masters_1_bvalid(ddr_fabric$v_from_masters_1_bvalid),
			  .v_from_masters_1_bid(ddr_fabric$v_from_masters_1_bid),
			  .v_from_masters_1_bresp(ddr_fabric$v_from_masters_1_bresp),
			  .v_from_masters_1_arready(ddr_fabric$v_from_masters_1_arready),
			  .v_from_masters_1_rvalid(ddr_fabric$v_from_masters_1_rvalid),
			  .v_from_masters_1_rid(ddr_fabric$v_from_masters_1_rid),
			  .v_from_masters_1_rdata(ddr_fabric$v_from_masters_1_rdata),
			  .v_from_masters_1_rresp(ddr_fabric$v_from_masters_1_rresp),
			  .v_from_masters_1_rlast(ddr_fabric$v_from_masters_1_rlast),
			  .v_from_masters_2_awready(ddr_fabric$v_from_masters_2_awready),
			  .v_from_masters_2_wready(ddr_fabric$v_from_masters_2_wready),
			  .v_from_masters_2_bvalid(ddr_fabric$v_from_masters_2_bvalid),
			  .v_from_masters_2_bid(ddr_fabric$v_from_masters_2_bid),
			  .v_from_masters_2_bresp(ddr_fabric$v_from_masters_2_bresp),
			  .v_from_masters_2_arready(ddr_fabric$v_from_masters_2_arready),
			  .v_from_masters_2_rvalid(ddr_fabric$v_from_masters_2_rvalid),
			  .v_from_masters_2_rid(ddr_fabric$v_from_masters_2_rid),
			  .v_from_masters_2_rdata(ddr_fabric$v_from_masters_2_rdata),
			  .v_from_masters_2_rresp(ddr_fabric$v_from_masters_2_rresp),
			  .v_from_masters_2_rlast(ddr_fabric$v_from_masters_2_rlast),
			  .v_to_slaves_0_awvalid(ddr_fabric$v_to_slaves_0_awvalid),
			  .v_to_slaves_0_awid(ddr_fabric$v_to_slaves_0_awid),
			  .v_to_slaves_0_awaddr(ddr_fabric$v_to_slaves_0_awaddr),
			  .v_to_slaves_0_awlen(ddr_fabric$v_to_slaves_0_awlen),
			  .v_to_slaves_0_awsize(ddr_fabric$v_to_slaves_0_awsize),
			  .v_to_slaves_0_awburst(ddr_fabric$v_to_slaves_0_awburst),
			  .v_to_slaves_0_awlock(ddr_fabric$v_to_slaves_0_awlock),
			  .v_to_slaves_0_awcache(ddr_fabric$v_to_slaves_0_awcache),
			  .v_to_slaves_0_awprot(ddr_fabric$v_to_slaves_0_awprot),
			  .v_to_slaves_0_awqos(ddr_fabric$v_to_slaves_0_awqos),
			  .v_to_slaves_0_awregion(ddr_fabric$v_to_slaves_0_awregion),
			  .v_to_slaves_0_wvalid(ddr_fabric$v_to_slaves_0_wvalid),
			  .v_to_slaves_0_wdata(ddr_fabric$v_to_slaves_0_wdata),
			  .v_to_slaves_0_wstrb(ddr_fabric$v_to_slaves_0_wstrb),
			  .v_to_slaves_0_wlast(ddr_fabric$v_to_slaves_0_wlast),
			  .v_to_slaves_0_bready(ddr_fabric$v_to_slaves_0_bready),
			  .v_to_slaves_0_arvalid(ddr_fabric$v_to_slaves_0_arvalid),
			  .v_to_slaves_0_arid(ddr_fabric$v_to_slaves_0_arid),
			  .v_to_slaves_0_araddr(ddr_fabric$v_to_slaves_0_araddr),
			  .v_to_slaves_0_arlen(ddr_fabric$v_to_slaves_0_arlen),
			  .v_to_slaves_0_arsize(ddr_fabric$v_to_slaves_0_arsize),
			  .v_to_slaves_0_arburst(ddr_fabric$v_to_slaves_0_arburst),
			  .v_to_slaves_0_arlock(ddr_fabric$v_to_slaves_0_arlock),
			  .v_to_slaves_0_arcache(ddr_fabric$v_to_slaves_0_arcache),
			  .v_to_slaves_0_arprot(ddr_fabric$v_to_slaves_0_arprot),
			  .v_to_slaves_0_arqos(ddr_fabric$v_to_slaves_0_arqos),
			  .v_to_slaves_0_arregion(ddr_fabric$v_to_slaves_0_arregion),
			  .v_to_slaves_0_rready(ddr_fabric$v_to_slaves_0_rready),
			  .v_to_slaves_1_awvalid(ddr_fabric$v_to_slaves_1_awvalid),
			  .v_to_slaves_1_awid(ddr_fabric$v_to_slaves_1_awid),
			  .v_to_slaves_1_awaddr(ddr_fabric$v_to_slaves_1_awaddr),
			  .v_to_slaves_1_awlen(ddr_fabric$v_to_slaves_1_awlen),
			  .v_to_slaves_1_awsize(ddr_fabric$v_to_slaves_1_awsize),
			  .v_to_slaves_1_awburst(ddr_fabric$v_to_slaves_1_awburst),
			  .v_to_slaves_1_awlock(ddr_fabric$v_to_slaves_1_awlock),
			  .v_to_slaves_1_awcache(ddr_fabric$v_to_slaves_1_awcache),
			  .v_to_slaves_1_awprot(ddr_fabric$v_to_slaves_1_awprot),
			  .v_to_slaves_1_awqos(ddr_fabric$v_to_slaves_1_awqos),
			  .v_to_slaves_1_awregion(ddr_fabric$v_to_slaves_1_awregion),
			  .v_to_slaves_1_wvalid(ddr_fabric$v_to_slaves_1_wvalid),
			  .v_to_slaves_1_wdata(ddr_fabric$v_to_slaves_1_wdata),
			  .v_to_slaves_1_wstrb(ddr_fabric$v_to_slaves_1_wstrb),
			  .v_to_slaves_1_wlast(ddr_fabric$v_to_slaves_1_wlast),
			  .v_to_slaves_1_bready(ddr_fabric$v_to_slaves_1_bready),
			  .v_to_slaves_1_arvalid(ddr_fabric$v_to_slaves_1_arvalid),
			  .v_to_slaves_1_arid(ddr_fabric$v_to_slaves_1_arid),
			  .v_to_slaves_1_araddr(ddr_fabric$v_to_slaves_1_araddr),
			  .v_to_slaves_1_arlen(ddr_fabric$v_to_slaves_1_arlen),
			  .v_to_slaves_1_arsize(ddr_fabric$v_to_slaves_1_arsize),
			  .v_to_slaves_1_arburst(ddr_fabric$v_to_slaves_1_arburst),
			  .v_to_slaves_1_arlock(ddr_fabric$v_to_slaves_1_arlock),
			  .v_to_slaves_1_arcache(ddr_fabric$v_to_slaves_1_arcache),
			  .v_to_slaves_1_arprot(ddr_fabric$v_to_slaves_1_arprot),
			  .v_to_slaves_1_arqos(ddr_fabric$v_to_slaves_1_arqos),
			  .v_to_slaves_1_arregion(ddr_fabric$v_to_slaves_1_arregion),
			  .v_to_slaves_1_rready(ddr_fabric$v_to_slaves_1_rready),
			  .v_to_slaves_2_awvalid(ddr_fabric$v_to_slaves_2_awvalid),
			  .v_to_slaves_2_awid(ddr_fabric$v_to_slaves_2_awid),
			  .v_to_slaves_2_awaddr(ddr_fabric$v_to_slaves_2_awaddr),
			  .v_to_slaves_2_awlen(ddr_fabric$v_to_slaves_2_awlen),
			  .v_to_slaves_2_awsize(ddr_fabric$v_to_slaves_2_awsize),
			  .v_to_slaves_2_awburst(ddr_fabric$v_to_slaves_2_awburst),
			  .v_to_slaves_2_awlock(ddr_fabric$v_to_slaves_2_awlock),
			  .v_to_slaves_2_awcache(ddr_fabric$v_to_slaves_2_awcache),
			  .v_to_slaves_2_awprot(ddr_fabric$v_to_slaves_2_awprot),
			  .v_to_slaves_2_awqos(ddr_fabric$v_to_slaves_2_awqos),
			  .v_to_slaves_2_awregion(ddr_fabric$v_to_slaves_2_awregion),
			  .v_to_slaves_2_wvalid(ddr_fabric$v_to_slaves_2_wvalid),
			  .v_to_slaves_2_wdata(ddr_fabric$v_to_slaves_2_wdata),
			  .v_to_slaves_2_wstrb(ddr_fabric$v_to_slaves_2_wstrb),
			  .v_to_slaves_2_wlast(ddr_fabric$v_to_slaves_2_wlast),
			  .v_to_slaves_2_bready(ddr_fabric$v_to_slaves_2_bready),
			  .v_to_slaves_2_arvalid(ddr_fabric$v_to_slaves_2_arvalid),
			  .v_to_slaves_2_arid(ddr_fabric$v_to_slaves_2_arid),
			  .v_to_slaves_2_araddr(ddr_fabric$v_to_slaves_2_araddr),
			  .v_to_slaves_2_arlen(ddr_fabric$v_to_slaves_2_arlen),
			  .v_to_slaves_2_arsize(ddr_fabric$v_to_slaves_2_arsize),
			  .v_to_slaves_2_arburst(ddr_fabric$v_to_slaves_2_arburst),
			  .v_to_slaves_2_arlock(ddr_fabric$v_to_slaves_2_arlock),
			  .v_to_slaves_2_arcache(ddr_fabric$v_to_slaves_2_arcache),
			  .v_to_slaves_2_arprot(ddr_fabric$v_to_slaves_2_arprot),
			  .v_to_slaves_2_arqos(ddr_fabric$v_to_slaves_2_arqos),
			  .v_to_slaves_2_arregion(ddr_fabric$v_to_slaves_2_arregion),
			  .v_to_slaves_2_rready(ddr_fabric$v_to_slaves_2_rready),
			  .v_to_slaves_3_awvalid(ddr_fabric$v_to_slaves_3_awvalid),
			  .v_to_slaves_3_awid(ddr_fabric$v_to_slaves_3_awid),
			  .v_to_slaves_3_awaddr(ddr_fabric$v_to_slaves_3_awaddr),
			  .v_to_slaves_3_awlen(ddr_fabric$v_to_slaves_3_awlen),
			  .v_to_slaves_3_awsize(ddr_fabric$v_to_slaves_3_awsize),
			  .v_to_slaves_3_awburst(ddr_fabric$v_to_slaves_3_awburst),
			  .v_to_slaves_3_awlock(ddr_fabric$v_to_slaves_3_awlock),
			  .v_to_slaves_3_awcache(ddr_fabric$v_to_slaves_3_awcache),
			  .v_to_slaves_3_awprot(ddr_fabric$v_to_slaves_3_awprot),
			  .v_to_slaves_3_awqos(ddr_fabric$v_to_slaves_3_awqos),
			  .v_to_slaves_3_awregion(ddr_fabric$v_to_slaves_3_awregion),
			  .v_to_slaves_3_wvalid(ddr_fabric$v_to_slaves_3_wvalid),
			  .v_to_slaves_3_wdata(ddr_fabric$v_to_slaves_3_wdata),
			  .v_to_slaves_3_wstrb(ddr_fabric$v_to_slaves_3_wstrb),
			  .v_to_slaves_3_wlast(ddr_fabric$v_to_slaves_3_wlast),
			  .v_to_slaves_3_bready(ddr_fabric$v_to_slaves_3_bready),
			  .v_to_slaves_3_arvalid(ddr_fabric$v_to_slaves_3_arvalid),
			  .v_to_slaves_3_arid(ddr_fabric$v_to_slaves_3_arid),
			  .v_to_slaves_3_araddr(ddr_fabric$v_to_slaves_3_araddr),
			  .v_to_slaves_3_arlen(ddr_fabric$v_to_slaves_3_arlen),
			  .v_to_slaves_3_arsize(ddr_fabric$v_to_slaves_3_arsize),
			  .v_to_slaves_3_arburst(ddr_fabric$v_to_slaves_3_arburst),
			  .v_to_slaves_3_arlock(ddr_fabric$v_to_slaves_3_arlock),
			  .v_to_slaves_3_arcache(ddr_fabric$v_to_slaves_3_arcache),
			  .v_to_slaves_3_arprot(ddr_fabric$v_to_slaves_3_arprot),
			  .v_to_slaves_3_arqos(ddr_fabric$v_to_slaves_3_arqos),
			  .v_to_slaves_3_arregion(ddr_fabric$v_to_slaves_3_arregion),
			  .v_to_slaves_3_rready(ddr_fabric$v_to_slaves_3_rready));

  // submodule f_uart_to_console
  SizedFIFO #(.p1width(32'd32),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) f_uart_to_console(.RST(RST_N),
						.CLK(CLK),
						.D_IN(f_uart_to_console$D_IN),
						.ENQ(f_uart_to_console$ENQ),
						.DEQ(f_uart_to_console$DEQ),
						.CLR(f_uart_to_console$CLR),
						.D_OUT(),
						.FULL_N(),
						.EMPTY_N());

  // submodule host_fabric
  mkHost_Fabric host_fabric(.CLK(CLK),
			    .RST_N(RST_N),
			    .set_verbosity_verbosity(host_fabric$set_verbosity_verbosity),
			    .v_from_masters_0_araddr(host_fabric$v_from_masters_0_araddr),
			    .v_from_masters_0_arburst(host_fabric$v_from_masters_0_arburst),
			    .v_from_masters_0_arcache(host_fabric$v_from_masters_0_arcache),
			    .v_from_masters_0_arid(host_fabric$v_from_masters_0_arid),
			    .v_from_masters_0_arlen(host_fabric$v_from_masters_0_arlen),
			    .v_from_masters_0_arlock(host_fabric$v_from_masters_0_arlock),
			    .v_from_masters_0_arprot(host_fabric$v_from_masters_0_arprot),
			    .v_from_masters_0_arqos(host_fabric$v_from_masters_0_arqos),
			    .v_from_masters_0_arregion(host_fabric$v_from_masters_0_arregion),
			    .v_from_masters_0_arsize(host_fabric$v_from_masters_0_arsize),
			    .v_from_masters_0_arvalid(host_fabric$v_from_masters_0_arvalid),
			    .v_from_masters_0_awaddr(host_fabric$v_from_masters_0_awaddr),
			    .v_from_masters_0_awburst(host_fabric$v_from_masters_0_awburst),
			    .v_from_masters_0_awcache(host_fabric$v_from_masters_0_awcache),
			    .v_from_masters_0_awid(host_fabric$v_from_masters_0_awid),
			    .v_from_masters_0_awlen(host_fabric$v_from_masters_0_awlen),
			    .v_from_masters_0_awlock(host_fabric$v_from_masters_0_awlock),
			    .v_from_masters_0_awprot(host_fabric$v_from_masters_0_awprot),
			    .v_from_masters_0_awqos(host_fabric$v_from_masters_0_awqos),
			    .v_from_masters_0_awregion(host_fabric$v_from_masters_0_awregion),
			    .v_from_masters_0_awsize(host_fabric$v_from_masters_0_awsize),
			    .v_from_masters_0_awvalid(host_fabric$v_from_masters_0_awvalid),
			    .v_from_masters_0_bready(host_fabric$v_from_masters_0_bready),
			    .v_from_masters_0_rready(host_fabric$v_from_masters_0_rready),
			    .v_from_masters_0_wdata(host_fabric$v_from_masters_0_wdata),
			    .v_from_masters_0_wlast(host_fabric$v_from_masters_0_wlast),
			    .v_from_masters_0_wstrb(host_fabric$v_from_masters_0_wstrb),
			    .v_from_masters_0_wvalid(host_fabric$v_from_masters_0_wvalid),
			    .v_to_slaves_0_arready(host_fabric$v_to_slaves_0_arready),
			    .v_to_slaves_0_awready(host_fabric$v_to_slaves_0_awready),
			    .v_to_slaves_0_bid(host_fabric$v_to_slaves_0_bid),
			    .v_to_slaves_0_bresp(host_fabric$v_to_slaves_0_bresp),
			    .v_to_slaves_0_bvalid(host_fabric$v_to_slaves_0_bvalid),
			    .v_to_slaves_0_rdata(host_fabric$v_to_slaves_0_rdata),
			    .v_to_slaves_0_rid(host_fabric$v_to_slaves_0_rid),
			    .v_to_slaves_0_rlast(host_fabric$v_to_slaves_0_rlast),
			    .v_to_slaves_0_rresp(host_fabric$v_to_slaves_0_rresp),
			    .v_to_slaves_0_rvalid(host_fabric$v_to_slaves_0_rvalid),
			    .v_to_slaves_0_wready(host_fabric$v_to_slaves_0_wready),
			    .v_to_slaves_1_arready(host_fabric$v_to_slaves_1_arready),
			    .v_to_slaves_1_awready(host_fabric$v_to_slaves_1_awready),
			    .v_to_slaves_1_bid(host_fabric$v_to_slaves_1_bid),
			    .v_to_slaves_1_bresp(host_fabric$v_to_slaves_1_bresp),
			    .v_to_slaves_1_bvalid(host_fabric$v_to_slaves_1_bvalid),
			    .v_to_slaves_1_rdata(host_fabric$v_to_slaves_1_rdata),
			    .v_to_slaves_1_rid(host_fabric$v_to_slaves_1_rid),
			    .v_to_slaves_1_rlast(host_fabric$v_to_slaves_1_rlast),
			    .v_to_slaves_1_rresp(host_fabric$v_to_slaves_1_rresp),
			    .v_to_slaves_1_rvalid(host_fabric$v_to_slaves_1_rvalid),
			    .v_to_slaves_1_wready(host_fabric$v_to_slaves_1_wready),
			    .v_to_slaves_2_arready(host_fabric$v_to_slaves_2_arready),
			    .v_to_slaves_2_awready(host_fabric$v_to_slaves_2_awready),
			    .v_to_slaves_2_bid(host_fabric$v_to_slaves_2_bid),
			    .v_to_slaves_2_bresp(host_fabric$v_to_slaves_2_bresp),
			    .v_to_slaves_2_bvalid(host_fabric$v_to_slaves_2_bvalid),
			    .v_to_slaves_2_rdata(host_fabric$v_to_slaves_2_rdata),
			    .v_to_slaves_2_rid(host_fabric$v_to_slaves_2_rid),
			    .v_to_slaves_2_rlast(host_fabric$v_to_slaves_2_rlast),
			    .v_to_slaves_2_rresp(host_fabric$v_to_slaves_2_rresp),
			    .v_to_slaves_2_rvalid(host_fabric$v_to_slaves_2_rvalid),
			    .v_to_slaves_2_wready(host_fabric$v_to_slaves_2_wready),
			    .EN_reset(host_fabric$EN_reset),
			    .EN_set_verbosity(host_fabric$EN_set_verbosity),
			    .RDY_reset(),
			    .RDY_set_verbosity(),
			    .v_from_masters_0_awready(host_fabric$v_from_masters_0_awready),
			    .v_from_masters_0_wready(host_fabric$v_from_masters_0_wready),
			    .v_from_masters_0_bvalid(host_fabric$v_from_masters_0_bvalid),
			    .v_from_masters_0_bid(host_fabric$v_from_masters_0_bid),
			    .v_from_masters_0_bresp(host_fabric$v_from_masters_0_bresp),
			    .v_from_masters_0_arready(host_fabric$v_from_masters_0_arready),
			    .v_from_masters_0_rvalid(host_fabric$v_from_masters_0_rvalid),
			    .v_from_masters_0_rid(host_fabric$v_from_masters_0_rid),
			    .v_from_masters_0_rdata(host_fabric$v_from_masters_0_rdata),
			    .v_from_masters_0_rresp(host_fabric$v_from_masters_0_rresp),
			    .v_from_masters_0_rlast(host_fabric$v_from_masters_0_rlast),
			    .v_to_slaves_0_awvalid(host_fabric$v_to_slaves_0_awvalid),
			    .v_to_slaves_0_awid(host_fabric$v_to_slaves_0_awid),
			    .v_to_slaves_0_awaddr(host_fabric$v_to_slaves_0_awaddr),
			    .v_to_slaves_0_awlen(host_fabric$v_to_slaves_0_awlen),
			    .v_to_slaves_0_awsize(host_fabric$v_to_slaves_0_awsize),
			    .v_to_slaves_0_awburst(host_fabric$v_to_slaves_0_awburst),
			    .v_to_slaves_0_awlock(host_fabric$v_to_slaves_0_awlock),
			    .v_to_slaves_0_awcache(host_fabric$v_to_slaves_0_awcache),
			    .v_to_slaves_0_awprot(host_fabric$v_to_slaves_0_awprot),
			    .v_to_slaves_0_awqos(host_fabric$v_to_slaves_0_awqos),
			    .v_to_slaves_0_awregion(host_fabric$v_to_slaves_0_awregion),
			    .v_to_slaves_0_wvalid(host_fabric$v_to_slaves_0_wvalid),
			    .v_to_slaves_0_wdata(host_fabric$v_to_slaves_0_wdata),
			    .v_to_slaves_0_wstrb(host_fabric$v_to_slaves_0_wstrb),
			    .v_to_slaves_0_wlast(host_fabric$v_to_slaves_0_wlast),
			    .v_to_slaves_0_bready(host_fabric$v_to_slaves_0_bready),
			    .v_to_slaves_0_arvalid(host_fabric$v_to_slaves_0_arvalid),
			    .v_to_slaves_0_arid(host_fabric$v_to_slaves_0_arid),
			    .v_to_slaves_0_araddr(host_fabric$v_to_slaves_0_araddr),
			    .v_to_slaves_0_arlen(host_fabric$v_to_slaves_0_arlen),
			    .v_to_slaves_0_arsize(host_fabric$v_to_slaves_0_arsize),
			    .v_to_slaves_0_arburst(host_fabric$v_to_slaves_0_arburst),
			    .v_to_slaves_0_arlock(host_fabric$v_to_slaves_0_arlock),
			    .v_to_slaves_0_arcache(host_fabric$v_to_slaves_0_arcache),
			    .v_to_slaves_0_arprot(host_fabric$v_to_slaves_0_arprot),
			    .v_to_slaves_0_arqos(host_fabric$v_to_slaves_0_arqos),
			    .v_to_slaves_0_arregion(host_fabric$v_to_slaves_0_arregion),
			    .v_to_slaves_0_rready(host_fabric$v_to_slaves_0_rready),
			    .v_to_slaves_1_awvalid(host_fabric$v_to_slaves_1_awvalid),
			    .v_to_slaves_1_awid(host_fabric$v_to_slaves_1_awid),
			    .v_to_slaves_1_awaddr(host_fabric$v_to_slaves_1_awaddr),
			    .v_to_slaves_1_awlen(host_fabric$v_to_slaves_1_awlen),
			    .v_to_slaves_1_awsize(host_fabric$v_to_slaves_1_awsize),
			    .v_to_slaves_1_awburst(host_fabric$v_to_slaves_1_awburst),
			    .v_to_slaves_1_awlock(host_fabric$v_to_slaves_1_awlock),
			    .v_to_slaves_1_awcache(host_fabric$v_to_slaves_1_awcache),
			    .v_to_slaves_1_awprot(host_fabric$v_to_slaves_1_awprot),
			    .v_to_slaves_1_awqos(host_fabric$v_to_slaves_1_awqos),
			    .v_to_slaves_1_awregion(host_fabric$v_to_slaves_1_awregion),
			    .v_to_slaves_1_wvalid(host_fabric$v_to_slaves_1_wvalid),
			    .v_to_slaves_1_wdata(host_fabric$v_to_slaves_1_wdata),
			    .v_to_slaves_1_wstrb(host_fabric$v_to_slaves_1_wstrb),
			    .v_to_slaves_1_wlast(host_fabric$v_to_slaves_1_wlast),
			    .v_to_slaves_1_bready(host_fabric$v_to_slaves_1_bready),
			    .v_to_slaves_1_arvalid(host_fabric$v_to_slaves_1_arvalid),
			    .v_to_slaves_1_arid(host_fabric$v_to_slaves_1_arid),
			    .v_to_slaves_1_araddr(host_fabric$v_to_slaves_1_araddr),
			    .v_to_slaves_1_arlen(host_fabric$v_to_slaves_1_arlen),
			    .v_to_slaves_1_arsize(host_fabric$v_to_slaves_1_arsize),
			    .v_to_slaves_1_arburst(host_fabric$v_to_slaves_1_arburst),
			    .v_to_slaves_1_arlock(host_fabric$v_to_slaves_1_arlock),
			    .v_to_slaves_1_arcache(host_fabric$v_to_slaves_1_arcache),
			    .v_to_slaves_1_arprot(host_fabric$v_to_slaves_1_arprot),
			    .v_to_slaves_1_arqos(host_fabric$v_to_slaves_1_arqos),
			    .v_to_slaves_1_arregion(host_fabric$v_to_slaves_1_arregion),
			    .v_to_slaves_1_rready(host_fabric$v_to_slaves_1_rready),
			    .v_to_slaves_2_awvalid(host_fabric$v_to_slaves_2_awvalid),
			    .v_to_slaves_2_awid(host_fabric$v_to_slaves_2_awid),
			    .v_to_slaves_2_awaddr(host_fabric$v_to_slaves_2_awaddr),
			    .v_to_slaves_2_awlen(host_fabric$v_to_slaves_2_awlen),
			    .v_to_slaves_2_awsize(host_fabric$v_to_slaves_2_awsize),
			    .v_to_slaves_2_awburst(host_fabric$v_to_slaves_2_awburst),
			    .v_to_slaves_2_awlock(host_fabric$v_to_slaves_2_awlock),
			    .v_to_slaves_2_awcache(host_fabric$v_to_slaves_2_awcache),
			    .v_to_slaves_2_awprot(host_fabric$v_to_slaves_2_awprot),
			    .v_to_slaves_2_awqos(host_fabric$v_to_slaves_2_awqos),
			    .v_to_slaves_2_awregion(host_fabric$v_to_slaves_2_awregion),
			    .v_to_slaves_2_wvalid(host_fabric$v_to_slaves_2_wvalid),
			    .v_to_slaves_2_wdata(host_fabric$v_to_slaves_2_wdata),
			    .v_to_slaves_2_wstrb(host_fabric$v_to_slaves_2_wstrb),
			    .v_to_slaves_2_wlast(host_fabric$v_to_slaves_2_wlast),
			    .v_to_slaves_2_bready(host_fabric$v_to_slaves_2_bready),
			    .v_to_slaves_2_arvalid(host_fabric$v_to_slaves_2_arvalid),
			    .v_to_slaves_2_arid(host_fabric$v_to_slaves_2_arid),
			    .v_to_slaves_2_araddr(host_fabric$v_to_slaves_2_araddr),
			    .v_to_slaves_2_arlen(host_fabric$v_to_slaves_2_arlen),
			    .v_to_slaves_2_arsize(host_fabric$v_to_slaves_2_arsize),
			    .v_to_slaves_2_arburst(host_fabric$v_to_slaves_2_arburst),
			    .v_to_slaves_2_arlock(host_fabric$v_to_slaves_2_arlock),
			    .v_to_slaves_2_arcache(host_fabric$v_to_slaves_2_arcache),
			    .v_to_slaves_2_arprot(host_fabric$v_to_slaves_2_arprot),
			    .v_to_slaves_2_arqos(host_fabric$v_to_slaves_2_arqos),
			    .v_to_slaves_2_arregion(host_fabric$v_to_slaves_2_arregion),
			    .v_to_slaves_2_rready(host_fabric$v_to_slaves_2_rready));

  // submodule mmio_axi4_deburster
  mkAXI4_Deburster_B mmio_axi4_deburster(.CLK(CLK),
					 .RST_N(RST_N),
					 .from_master_araddr(mmio_axi4_deburster$from_master_araddr),
					 .from_master_arburst(mmio_axi4_deburster$from_master_arburst),
					 .from_master_arcache(mmio_axi4_deburster$from_master_arcache),
					 .from_master_arid(mmio_axi4_deburster$from_master_arid),
					 .from_master_arlen(mmio_axi4_deburster$from_master_arlen),
					 .from_master_arlock(mmio_axi4_deburster$from_master_arlock),
					 .from_master_arprot(mmio_axi4_deburster$from_master_arprot),
					 .from_master_arqos(mmio_axi4_deburster$from_master_arqos),
					 .from_master_arregion(mmio_axi4_deburster$from_master_arregion),
					 .from_master_arsize(mmio_axi4_deburster$from_master_arsize),
					 .from_master_arvalid(mmio_axi4_deburster$from_master_arvalid),
					 .from_master_awaddr(mmio_axi4_deburster$from_master_awaddr),
					 .from_master_awburst(mmio_axi4_deburster$from_master_awburst),
					 .from_master_awcache(mmio_axi4_deburster$from_master_awcache),
					 .from_master_awid(mmio_axi4_deburster$from_master_awid),
					 .from_master_awlen(mmio_axi4_deburster$from_master_awlen),
					 .from_master_awlock(mmio_axi4_deburster$from_master_awlock),
					 .from_master_awprot(mmio_axi4_deburster$from_master_awprot),
					 .from_master_awqos(mmio_axi4_deburster$from_master_awqos),
					 .from_master_awregion(mmio_axi4_deburster$from_master_awregion),
					 .from_master_awsize(mmio_axi4_deburster$from_master_awsize),
					 .from_master_awvalid(mmio_axi4_deburster$from_master_awvalid),
					 .from_master_bready(mmio_axi4_deburster$from_master_bready),
					 .from_master_rready(mmio_axi4_deburster$from_master_rready),
					 .from_master_wdata(mmio_axi4_deburster$from_master_wdata),
					 .from_master_wlast(mmio_axi4_deburster$from_master_wlast),
					 .from_master_wstrb(mmio_axi4_deburster$from_master_wstrb),
					 .from_master_wvalid(mmio_axi4_deburster$from_master_wvalid),
					 .to_slave_arready(mmio_axi4_deburster$to_slave_arready),
					 .to_slave_awready(mmio_axi4_deburster$to_slave_awready),
					 .to_slave_bid(mmio_axi4_deburster$to_slave_bid),
					 .to_slave_bresp(mmio_axi4_deburster$to_slave_bresp),
					 .to_slave_bvalid(mmio_axi4_deburster$to_slave_bvalid),
					 .to_slave_rdata(mmio_axi4_deburster$to_slave_rdata),
					 .to_slave_rid(mmio_axi4_deburster$to_slave_rid),
					 .to_slave_rlast(mmio_axi4_deburster$to_slave_rlast),
					 .to_slave_rresp(mmio_axi4_deburster$to_slave_rresp),
					 .to_slave_rvalid(mmio_axi4_deburster$to_slave_rvalid),
					 .to_slave_wready(mmio_axi4_deburster$to_slave_wready),
					 .EN_reset(mmio_axi4_deburster$EN_reset),
					 .RDY_reset(),
					 .from_master_awready(mmio_axi4_deburster$from_master_awready),
					 .from_master_wready(mmio_axi4_deburster$from_master_wready),
					 .from_master_bvalid(mmio_axi4_deburster$from_master_bvalid),
					 .from_master_bid(mmio_axi4_deburster$from_master_bid),
					 .from_master_bresp(mmio_axi4_deburster$from_master_bresp),
					 .from_master_arready(mmio_axi4_deburster$from_master_arready),
					 .from_master_rvalid(mmio_axi4_deburster$from_master_rvalid),
					 .from_master_rid(mmio_axi4_deburster$from_master_rid),
					 .from_master_rdata(mmio_axi4_deburster$from_master_rdata),
					 .from_master_rresp(mmio_axi4_deburster$from_master_rresp),
					 .from_master_rlast(mmio_axi4_deburster$from_master_rlast),
					 .to_slave_awvalid(mmio_axi4_deburster$to_slave_awvalid),
					 .to_slave_awid(mmio_axi4_deburster$to_slave_awid),
					 .to_slave_awaddr(mmio_axi4_deburster$to_slave_awaddr),
					 .to_slave_awlen(mmio_axi4_deburster$to_slave_awlen),
					 .to_slave_awsize(mmio_axi4_deburster$to_slave_awsize),
					 .to_slave_awburst(mmio_axi4_deburster$to_slave_awburst),
					 .to_slave_awlock(mmio_axi4_deburster$to_slave_awlock),
					 .to_slave_awcache(mmio_axi4_deburster$to_slave_awcache),
					 .to_slave_awprot(mmio_axi4_deburster$to_slave_awprot),
					 .to_slave_awqos(mmio_axi4_deburster$to_slave_awqos),
					 .to_slave_awregion(mmio_axi4_deburster$to_slave_awregion),
					 .to_slave_wvalid(mmio_axi4_deburster$to_slave_wvalid),
					 .to_slave_wdata(mmio_axi4_deburster$to_slave_wdata),
					 .to_slave_wstrb(mmio_axi4_deburster$to_slave_wstrb),
					 .to_slave_wlast(mmio_axi4_deburster$to_slave_wlast),
					 .to_slave_bready(mmio_axi4_deburster$to_slave_bready),
					 .to_slave_arvalid(mmio_axi4_deburster$to_slave_arvalid),
					 .to_slave_arid(mmio_axi4_deburster$to_slave_arid),
					 .to_slave_araddr(mmio_axi4_deburster$to_slave_araddr),
					 .to_slave_arlen(mmio_axi4_deburster$to_slave_arlen),
					 .to_slave_arsize(mmio_axi4_deburster$to_slave_arsize),
					 .to_slave_arburst(mmio_axi4_deburster$to_slave_arburst),
					 .to_slave_arlock(mmio_axi4_deburster$to_slave_arlock),
					 .to_slave_arcache(mmio_axi4_deburster$to_slave_arcache),
					 .to_slave_arprot(mmio_axi4_deburster$to_slave_arprot),
					 .to_slave_arqos(mmio_axi4_deburster$to_slave_arqos),
					 .to_slave_arregion(mmio_axi4_deburster$to_slave_arregion),
					 .to_slave_rready(mmio_axi4_deburster$to_slave_rready));

  // submodule mmio_fabric
  mkMMIO_Fabric mmio_fabric(.CLK(CLK),
			    .RST_N(RST_N),
			    .set_verbosity_verbosity(mmio_fabric$set_verbosity_verbosity),
			    .v_from_masters_0_araddr(mmio_fabric$v_from_masters_0_araddr),
			    .v_from_masters_0_arburst(mmio_fabric$v_from_masters_0_arburst),
			    .v_from_masters_0_arcache(mmio_fabric$v_from_masters_0_arcache),
			    .v_from_masters_0_arid(mmio_fabric$v_from_masters_0_arid),
			    .v_from_masters_0_arlen(mmio_fabric$v_from_masters_0_arlen),
			    .v_from_masters_0_arlock(mmio_fabric$v_from_masters_0_arlock),
			    .v_from_masters_0_arprot(mmio_fabric$v_from_masters_0_arprot),
			    .v_from_masters_0_arqos(mmio_fabric$v_from_masters_0_arqos),
			    .v_from_masters_0_arregion(mmio_fabric$v_from_masters_0_arregion),
			    .v_from_masters_0_arsize(mmio_fabric$v_from_masters_0_arsize),
			    .v_from_masters_0_arvalid(mmio_fabric$v_from_masters_0_arvalid),
			    .v_from_masters_0_awaddr(mmio_fabric$v_from_masters_0_awaddr),
			    .v_from_masters_0_awburst(mmio_fabric$v_from_masters_0_awburst),
			    .v_from_masters_0_awcache(mmio_fabric$v_from_masters_0_awcache),
			    .v_from_masters_0_awid(mmio_fabric$v_from_masters_0_awid),
			    .v_from_masters_0_awlen(mmio_fabric$v_from_masters_0_awlen),
			    .v_from_masters_0_awlock(mmio_fabric$v_from_masters_0_awlock),
			    .v_from_masters_0_awprot(mmio_fabric$v_from_masters_0_awprot),
			    .v_from_masters_0_awqos(mmio_fabric$v_from_masters_0_awqos),
			    .v_from_masters_0_awregion(mmio_fabric$v_from_masters_0_awregion),
			    .v_from_masters_0_awsize(mmio_fabric$v_from_masters_0_awsize),
			    .v_from_masters_0_awvalid(mmio_fabric$v_from_masters_0_awvalid),
			    .v_from_masters_0_bready(mmio_fabric$v_from_masters_0_bready),
			    .v_from_masters_0_rready(mmio_fabric$v_from_masters_0_rready),
			    .v_from_masters_0_wdata(mmio_fabric$v_from_masters_0_wdata),
			    .v_from_masters_0_wlast(mmio_fabric$v_from_masters_0_wlast),
			    .v_from_masters_0_wstrb(mmio_fabric$v_from_masters_0_wstrb),
			    .v_from_masters_0_wvalid(mmio_fabric$v_from_masters_0_wvalid),
			    .v_from_masters_1_araddr(mmio_fabric$v_from_masters_1_araddr),
			    .v_from_masters_1_arburst(mmio_fabric$v_from_masters_1_arburst),
			    .v_from_masters_1_arcache(mmio_fabric$v_from_masters_1_arcache),
			    .v_from_masters_1_arid(mmio_fabric$v_from_masters_1_arid),
			    .v_from_masters_1_arlen(mmio_fabric$v_from_masters_1_arlen),
			    .v_from_masters_1_arlock(mmio_fabric$v_from_masters_1_arlock),
			    .v_from_masters_1_arprot(mmio_fabric$v_from_masters_1_arprot),
			    .v_from_masters_1_arqos(mmio_fabric$v_from_masters_1_arqos),
			    .v_from_masters_1_arregion(mmio_fabric$v_from_masters_1_arregion),
			    .v_from_masters_1_arsize(mmio_fabric$v_from_masters_1_arsize),
			    .v_from_masters_1_arvalid(mmio_fabric$v_from_masters_1_arvalid),
			    .v_from_masters_1_awaddr(mmio_fabric$v_from_masters_1_awaddr),
			    .v_from_masters_1_awburst(mmio_fabric$v_from_masters_1_awburst),
			    .v_from_masters_1_awcache(mmio_fabric$v_from_masters_1_awcache),
			    .v_from_masters_1_awid(mmio_fabric$v_from_masters_1_awid),
			    .v_from_masters_1_awlen(mmio_fabric$v_from_masters_1_awlen),
			    .v_from_masters_1_awlock(mmio_fabric$v_from_masters_1_awlock),
			    .v_from_masters_1_awprot(mmio_fabric$v_from_masters_1_awprot),
			    .v_from_masters_1_awqos(mmio_fabric$v_from_masters_1_awqos),
			    .v_from_masters_1_awregion(mmio_fabric$v_from_masters_1_awregion),
			    .v_from_masters_1_awsize(mmio_fabric$v_from_masters_1_awsize),
			    .v_from_masters_1_awvalid(mmio_fabric$v_from_masters_1_awvalid),
			    .v_from_masters_1_bready(mmio_fabric$v_from_masters_1_bready),
			    .v_from_masters_1_rready(mmio_fabric$v_from_masters_1_rready),
			    .v_from_masters_1_wdata(mmio_fabric$v_from_masters_1_wdata),
			    .v_from_masters_1_wlast(mmio_fabric$v_from_masters_1_wlast),
			    .v_from_masters_1_wstrb(mmio_fabric$v_from_masters_1_wstrb),
			    .v_from_masters_1_wvalid(mmio_fabric$v_from_masters_1_wvalid),
			    .v_to_slaves_0_arready(mmio_fabric$v_to_slaves_0_arready),
			    .v_to_slaves_0_awready(mmio_fabric$v_to_slaves_0_awready),
			    .v_to_slaves_0_bid(mmio_fabric$v_to_slaves_0_bid),
			    .v_to_slaves_0_bresp(mmio_fabric$v_to_slaves_0_bresp),
			    .v_to_slaves_0_bvalid(mmio_fabric$v_to_slaves_0_bvalid),
			    .v_to_slaves_0_rdata(mmio_fabric$v_to_slaves_0_rdata),
			    .v_to_slaves_0_rid(mmio_fabric$v_to_slaves_0_rid),
			    .v_to_slaves_0_rlast(mmio_fabric$v_to_slaves_0_rlast),
			    .v_to_slaves_0_rresp(mmio_fabric$v_to_slaves_0_rresp),
			    .v_to_slaves_0_rvalid(mmio_fabric$v_to_slaves_0_rvalid),
			    .v_to_slaves_0_wready(mmio_fabric$v_to_slaves_0_wready),
			    .v_to_slaves_1_arready(mmio_fabric$v_to_slaves_1_arready),
			    .v_to_slaves_1_awready(mmio_fabric$v_to_slaves_1_awready),
			    .v_to_slaves_1_bid(mmio_fabric$v_to_slaves_1_bid),
			    .v_to_slaves_1_bresp(mmio_fabric$v_to_slaves_1_bresp),
			    .v_to_slaves_1_bvalid(mmio_fabric$v_to_slaves_1_bvalid),
			    .v_to_slaves_1_rdata(mmio_fabric$v_to_slaves_1_rdata),
			    .v_to_slaves_1_rid(mmio_fabric$v_to_slaves_1_rid),
			    .v_to_slaves_1_rlast(mmio_fabric$v_to_slaves_1_rlast),
			    .v_to_slaves_1_rresp(mmio_fabric$v_to_slaves_1_rresp),
			    .v_to_slaves_1_rvalid(mmio_fabric$v_to_slaves_1_rvalid),
			    .v_to_slaves_1_wready(mmio_fabric$v_to_slaves_1_wready),
			    .v_to_slaves_2_arready(mmio_fabric$v_to_slaves_2_arready),
			    .v_to_slaves_2_awready(mmio_fabric$v_to_slaves_2_awready),
			    .v_to_slaves_2_bid(mmio_fabric$v_to_slaves_2_bid),
			    .v_to_slaves_2_bresp(mmio_fabric$v_to_slaves_2_bresp),
			    .v_to_slaves_2_bvalid(mmio_fabric$v_to_slaves_2_bvalid),
			    .v_to_slaves_2_rdata(mmio_fabric$v_to_slaves_2_rdata),
			    .v_to_slaves_2_rid(mmio_fabric$v_to_slaves_2_rid),
			    .v_to_slaves_2_rlast(mmio_fabric$v_to_slaves_2_rlast),
			    .v_to_slaves_2_rresp(mmio_fabric$v_to_slaves_2_rresp),
			    .v_to_slaves_2_rvalid(mmio_fabric$v_to_slaves_2_rvalid),
			    .v_to_slaves_2_wready(mmio_fabric$v_to_slaves_2_wready),
			    .v_to_slaves_3_arready(mmio_fabric$v_to_slaves_3_arready),
			    .v_to_slaves_3_awready(mmio_fabric$v_to_slaves_3_awready),
			    .v_to_slaves_3_bid(mmio_fabric$v_to_slaves_3_bid),
			    .v_to_slaves_3_bresp(mmio_fabric$v_to_slaves_3_bresp),
			    .v_to_slaves_3_bvalid(mmio_fabric$v_to_slaves_3_bvalid),
			    .v_to_slaves_3_rdata(mmio_fabric$v_to_slaves_3_rdata),
			    .v_to_slaves_3_rid(mmio_fabric$v_to_slaves_3_rid),
			    .v_to_slaves_3_rlast(mmio_fabric$v_to_slaves_3_rlast),
			    .v_to_slaves_3_rresp(mmio_fabric$v_to_slaves_3_rresp),
			    .v_to_slaves_3_rvalid(mmio_fabric$v_to_slaves_3_rvalid),
			    .v_to_slaves_3_wready(mmio_fabric$v_to_slaves_3_wready),
			    .EN_reset(mmio_fabric$EN_reset),
			    .EN_set_verbosity(mmio_fabric$EN_set_verbosity),
			    .RDY_reset(mmio_fabric$RDY_reset),
			    .RDY_set_verbosity(),
			    .v_from_masters_0_awready(mmio_fabric$v_from_masters_0_awready),
			    .v_from_masters_0_wready(mmio_fabric$v_from_masters_0_wready),
			    .v_from_masters_0_bvalid(mmio_fabric$v_from_masters_0_bvalid),
			    .v_from_masters_0_bid(mmio_fabric$v_from_masters_0_bid),
			    .v_from_masters_0_bresp(mmio_fabric$v_from_masters_0_bresp),
			    .v_from_masters_0_arready(mmio_fabric$v_from_masters_0_arready),
			    .v_from_masters_0_rvalid(mmio_fabric$v_from_masters_0_rvalid),
			    .v_from_masters_0_rid(mmio_fabric$v_from_masters_0_rid),
			    .v_from_masters_0_rdata(mmio_fabric$v_from_masters_0_rdata),
			    .v_from_masters_0_rresp(mmio_fabric$v_from_masters_0_rresp),
			    .v_from_masters_0_rlast(mmio_fabric$v_from_masters_0_rlast),
			    .v_from_masters_1_awready(mmio_fabric$v_from_masters_1_awready),
			    .v_from_masters_1_wready(mmio_fabric$v_from_masters_1_wready),
			    .v_from_masters_1_bvalid(mmio_fabric$v_from_masters_1_bvalid),
			    .v_from_masters_1_bid(mmio_fabric$v_from_masters_1_bid),
			    .v_from_masters_1_bresp(mmio_fabric$v_from_masters_1_bresp),
			    .v_from_masters_1_arready(mmio_fabric$v_from_masters_1_arready),
			    .v_from_masters_1_rvalid(mmio_fabric$v_from_masters_1_rvalid),
			    .v_from_masters_1_rid(mmio_fabric$v_from_masters_1_rid),
			    .v_from_masters_1_rdata(mmio_fabric$v_from_masters_1_rdata),
			    .v_from_masters_1_rresp(mmio_fabric$v_from_masters_1_rresp),
			    .v_from_masters_1_rlast(mmio_fabric$v_from_masters_1_rlast),
			    .v_to_slaves_0_awvalid(mmio_fabric$v_to_slaves_0_awvalid),
			    .v_to_slaves_0_awid(mmio_fabric$v_to_slaves_0_awid),
			    .v_to_slaves_0_awaddr(mmio_fabric$v_to_slaves_0_awaddr),
			    .v_to_slaves_0_awlen(mmio_fabric$v_to_slaves_0_awlen),
			    .v_to_slaves_0_awsize(mmio_fabric$v_to_slaves_0_awsize),
			    .v_to_slaves_0_awburst(mmio_fabric$v_to_slaves_0_awburst),
			    .v_to_slaves_0_awlock(mmio_fabric$v_to_slaves_0_awlock),
			    .v_to_slaves_0_awcache(mmio_fabric$v_to_slaves_0_awcache),
			    .v_to_slaves_0_awprot(mmio_fabric$v_to_slaves_0_awprot),
			    .v_to_slaves_0_awqos(mmio_fabric$v_to_slaves_0_awqos),
			    .v_to_slaves_0_awregion(mmio_fabric$v_to_slaves_0_awregion),
			    .v_to_slaves_0_wvalid(mmio_fabric$v_to_slaves_0_wvalid),
			    .v_to_slaves_0_wdata(mmio_fabric$v_to_slaves_0_wdata),
			    .v_to_slaves_0_wstrb(mmio_fabric$v_to_slaves_0_wstrb),
			    .v_to_slaves_0_wlast(mmio_fabric$v_to_slaves_0_wlast),
			    .v_to_slaves_0_bready(mmio_fabric$v_to_slaves_0_bready),
			    .v_to_slaves_0_arvalid(mmio_fabric$v_to_slaves_0_arvalid),
			    .v_to_slaves_0_arid(mmio_fabric$v_to_slaves_0_arid),
			    .v_to_slaves_0_araddr(mmio_fabric$v_to_slaves_0_araddr),
			    .v_to_slaves_0_arlen(mmio_fabric$v_to_slaves_0_arlen),
			    .v_to_slaves_0_arsize(mmio_fabric$v_to_slaves_0_arsize),
			    .v_to_slaves_0_arburst(mmio_fabric$v_to_slaves_0_arburst),
			    .v_to_slaves_0_arlock(mmio_fabric$v_to_slaves_0_arlock),
			    .v_to_slaves_0_arcache(mmio_fabric$v_to_slaves_0_arcache),
			    .v_to_slaves_0_arprot(mmio_fabric$v_to_slaves_0_arprot),
			    .v_to_slaves_0_arqos(mmio_fabric$v_to_slaves_0_arqos),
			    .v_to_slaves_0_arregion(mmio_fabric$v_to_slaves_0_arregion),
			    .v_to_slaves_0_rready(mmio_fabric$v_to_slaves_0_rready),
			    .v_to_slaves_1_awvalid(mmio_fabric$v_to_slaves_1_awvalid),
			    .v_to_slaves_1_awid(mmio_fabric$v_to_slaves_1_awid),
			    .v_to_slaves_1_awaddr(mmio_fabric$v_to_slaves_1_awaddr),
			    .v_to_slaves_1_awlen(mmio_fabric$v_to_slaves_1_awlen),
			    .v_to_slaves_1_awsize(mmio_fabric$v_to_slaves_1_awsize),
			    .v_to_slaves_1_awburst(mmio_fabric$v_to_slaves_1_awburst),
			    .v_to_slaves_1_awlock(mmio_fabric$v_to_slaves_1_awlock),
			    .v_to_slaves_1_awcache(mmio_fabric$v_to_slaves_1_awcache),
			    .v_to_slaves_1_awprot(mmio_fabric$v_to_slaves_1_awprot),
			    .v_to_slaves_1_awqos(mmio_fabric$v_to_slaves_1_awqos),
			    .v_to_slaves_1_awregion(mmio_fabric$v_to_slaves_1_awregion),
			    .v_to_slaves_1_wvalid(mmio_fabric$v_to_slaves_1_wvalid),
			    .v_to_slaves_1_wdata(mmio_fabric$v_to_slaves_1_wdata),
			    .v_to_slaves_1_wstrb(mmio_fabric$v_to_slaves_1_wstrb),
			    .v_to_slaves_1_wlast(mmio_fabric$v_to_slaves_1_wlast),
			    .v_to_slaves_1_bready(mmio_fabric$v_to_slaves_1_bready),
			    .v_to_slaves_1_arvalid(mmio_fabric$v_to_slaves_1_arvalid),
			    .v_to_slaves_1_arid(mmio_fabric$v_to_slaves_1_arid),
			    .v_to_slaves_1_araddr(mmio_fabric$v_to_slaves_1_araddr),
			    .v_to_slaves_1_arlen(mmio_fabric$v_to_slaves_1_arlen),
			    .v_to_slaves_1_arsize(mmio_fabric$v_to_slaves_1_arsize),
			    .v_to_slaves_1_arburst(mmio_fabric$v_to_slaves_1_arburst),
			    .v_to_slaves_1_arlock(mmio_fabric$v_to_slaves_1_arlock),
			    .v_to_slaves_1_arcache(mmio_fabric$v_to_slaves_1_arcache),
			    .v_to_slaves_1_arprot(mmio_fabric$v_to_slaves_1_arprot),
			    .v_to_slaves_1_arqos(mmio_fabric$v_to_slaves_1_arqos),
			    .v_to_slaves_1_arregion(mmio_fabric$v_to_slaves_1_arregion),
			    .v_to_slaves_1_rready(mmio_fabric$v_to_slaves_1_rready),
			    .v_to_slaves_2_awvalid(mmio_fabric$v_to_slaves_2_awvalid),
			    .v_to_slaves_2_awid(mmio_fabric$v_to_slaves_2_awid),
			    .v_to_slaves_2_awaddr(mmio_fabric$v_to_slaves_2_awaddr),
			    .v_to_slaves_2_awlen(mmio_fabric$v_to_slaves_2_awlen),
			    .v_to_slaves_2_awsize(mmio_fabric$v_to_slaves_2_awsize),
			    .v_to_slaves_2_awburst(mmio_fabric$v_to_slaves_2_awburst),
			    .v_to_slaves_2_awlock(mmio_fabric$v_to_slaves_2_awlock),
			    .v_to_slaves_2_awcache(mmio_fabric$v_to_slaves_2_awcache),
			    .v_to_slaves_2_awprot(mmio_fabric$v_to_slaves_2_awprot),
			    .v_to_slaves_2_awqos(mmio_fabric$v_to_slaves_2_awqos),
			    .v_to_slaves_2_awregion(mmio_fabric$v_to_slaves_2_awregion),
			    .v_to_slaves_2_wvalid(mmio_fabric$v_to_slaves_2_wvalid),
			    .v_to_slaves_2_wdata(mmio_fabric$v_to_slaves_2_wdata),
			    .v_to_slaves_2_wstrb(mmio_fabric$v_to_slaves_2_wstrb),
			    .v_to_slaves_2_wlast(mmio_fabric$v_to_slaves_2_wlast),
			    .v_to_slaves_2_bready(mmio_fabric$v_to_slaves_2_bready),
			    .v_to_slaves_2_arvalid(mmio_fabric$v_to_slaves_2_arvalid),
			    .v_to_slaves_2_arid(mmio_fabric$v_to_slaves_2_arid),
			    .v_to_slaves_2_araddr(mmio_fabric$v_to_slaves_2_araddr),
			    .v_to_slaves_2_arlen(mmio_fabric$v_to_slaves_2_arlen),
			    .v_to_slaves_2_arsize(mmio_fabric$v_to_slaves_2_arsize),
			    .v_to_slaves_2_arburst(mmio_fabric$v_to_slaves_2_arburst),
			    .v_to_slaves_2_arlock(mmio_fabric$v_to_slaves_2_arlock),
			    .v_to_slaves_2_arcache(mmio_fabric$v_to_slaves_2_arcache),
			    .v_to_slaves_2_arprot(mmio_fabric$v_to_slaves_2_arprot),
			    .v_to_slaves_2_arqos(mmio_fabric$v_to_slaves_2_arqos),
			    .v_to_slaves_2_arregion(mmio_fabric$v_to_slaves_2_arregion),
			    .v_to_slaves_2_rready(mmio_fabric$v_to_slaves_2_rready),
			    .v_to_slaves_3_awvalid(mmio_fabric$v_to_slaves_3_awvalid),
			    .v_to_slaves_3_awid(mmio_fabric$v_to_slaves_3_awid),
			    .v_to_slaves_3_awaddr(mmio_fabric$v_to_slaves_3_awaddr),
			    .v_to_slaves_3_awlen(mmio_fabric$v_to_slaves_3_awlen),
			    .v_to_slaves_3_awsize(mmio_fabric$v_to_slaves_3_awsize),
			    .v_to_slaves_3_awburst(mmio_fabric$v_to_slaves_3_awburst),
			    .v_to_slaves_3_awlock(mmio_fabric$v_to_slaves_3_awlock),
			    .v_to_slaves_3_awcache(mmio_fabric$v_to_slaves_3_awcache),
			    .v_to_slaves_3_awprot(mmio_fabric$v_to_slaves_3_awprot),
			    .v_to_slaves_3_awqos(mmio_fabric$v_to_slaves_3_awqos),
			    .v_to_slaves_3_awregion(mmio_fabric$v_to_slaves_3_awregion),
			    .v_to_slaves_3_wvalid(mmio_fabric$v_to_slaves_3_wvalid),
			    .v_to_slaves_3_wdata(mmio_fabric$v_to_slaves_3_wdata),
			    .v_to_slaves_3_wstrb(mmio_fabric$v_to_slaves_3_wstrb),
			    .v_to_slaves_3_wlast(mmio_fabric$v_to_slaves_3_wlast),
			    .v_to_slaves_3_bready(mmio_fabric$v_to_slaves_3_bready),
			    .v_to_slaves_3_arvalid(mmio_fabric$v_to_slaves_3_arvalid),
			    .v_to_slaves_3_arid(mmio_fabric$v_to_slaves_3_arid),
			    .v_to_slaves_3_araddr(mmio_fabric$v_to_slaves_3_araddr),
			    .v_to_slaves_3_arlen(mmio_fabric$v_to_slaves_3_arlen),
			    .v_to_slaves_3_arsize(mmio_fabric$v_to_slaves_3_arsize),
			    .v_to_slaves_3_arburst(mmio_fabric$v_to_slaves_3_arburst),
			    .v_to_slaves_3_arlock(mmio_fabric$v_to_slaves_3_arlock),
			    .v_to_slaves_3_arcache(mmio_fabric$v_to_slaves_3_arcache),
			    .v_to_slaves_3_arprot(mmio_fabric$v_to_slaves_3_arprot),
			    .v_to_slaves_3_arqos(mmio_fabric$v_to_slaves_3_arqos),
			    .v_to_slaves_3_arregion(mmio_fabric$v_to_slaves_3_arregion),
			    .v_to_slaves_3_rready(mmio_fabric$v_to_slaves_3_rready));

  // submodule mmio_to_host
  mkMMIO_to_Host mmio_to_host(.CLK(CLK),
			      .RST_N(RST_N),
			      .axi4_S_araddr(mmio_to_host$axi4_S_araddr),
			      .axi4_S_arburst(mmio_to_host$axi4_S_arburst),
			      .axi4_S_arcache(mmio_to_host$axi4_S_arcache),
			      .axi4_S_arid(mmio_to_host$axi4_S_arid),
			      .axi4_S_arlen(mmio_to_host$axi4_S_arlen),
			      .axi4_S_arlock(mmio_to_host$axi4_S_arlock),
			      .axi4_S_arprot(mmio_to_host$axi4_S_arprot),
			      .axi4_S_arqos(mmio_to_host$axi4_S_arqos),
			      .axi4_S_arregion(mmio_to_host$axi4_S_arregion),
			      .axi4_S_arsize(mmio_to_host$axi4_S_arsize),
			      .axi4_S_arvalid(mmio_to_host$axi4_S_arvalid),
			      .axi4_S_awaddr(mmio_to_host$axi4_S_awaddr),
			      .axi4_S_awburst(mmio_to_host$axi4_S_awburst),
			      .axi4_S_awcache(mmio_to_host$axi4_S_awcache),
			      .axi4_S_awid(mmio_to_host$axi4_S_awid),
			      .axi4_S_awlen(mmio_to_host$axi4_S_awlen),
			      .axi4_S_awlock(mmio_to_host$axi4_S_awlock),
			      .axi4_S_awprot(mmio_to_host$axi4_S_awprot),
			      .axi4_S_awqos(mmio_to_host$axi4_S_awqos),
			      .axi4_S_awregion(mmio_to_host$axi4_S_awregion),
			      .axi4_S_awsize(mmio_to_host$axi4_S_awsize),
			      .axi4_S_awvalid(mmio_to_host$axi4_S_awvalid),
			      .axi4_S_bready(mmio_to_host$axi4_S_bready),
			      .axi4_S_rready(mmio_to_host$axi4_S_rready),
			      .axi4_S_wdata(mmio_to_host$axi4_S_wdata),
			      .axi4_S_wlast(mmio_to_host$axi4_S_wlast),
			      .axi4_S_wstrb(mmio_to_host$axi4_S_wstrb),
			      .axi4_S_wvalid(mmio_to_host$axi4_S_wvalid),
			      .from_host_put(mmio_to_host$from_host_put),
			      .EN_to_host_get(mmio_to_host$EN_to_host_get),
			      .EN_from_host_put(mmio_to_host$EN_from_host_put),
			      .axi4_S_awready(mmio_to_host$axi4_S_awready),
			      .axi4_S_wready(mmio_to_host$axi4_S_wready),
			      .axi4_S_bvalid(mmio_to_host$axi4_S_bvalid),
			      .axi4_S_bid(mmio_to_host$axi4_S_bid),
			      .axi4_S_bresp(mmio_to_host$axi4_S_bresp),
			      .axi4_S_arready(mmio_to_host$axi4_S_arready),
			      .axi4_S_rvalid(mmio_to_host$axi4_S_rvalid),
			      .axi4_S_rid(mmio_to_host$axi4_S_rid),
			      .axi4_S_rdata(mmio_to_host$axi4_S_rdata),
			      .axi4_S_rresp(mmio_to_host$axi4_S_rresp),
			      .axi4_S_rlast(mmio_to_host$axi4_S_rlast),
			      .to_host_get(mmio_to_host$to_host_get),
			      .RDY_to_host_get(mmio_to_host$RDY_to_host_get),
			      .RDY_from_host_put(mmio_to_host$RDY_from_host_put));

  // submodule msi
  mkMSI msi(.CLK(CLK),
	    .RST_N(RST_N),
	    .set_addr_map_addr_base(msi$set_addr_map_addr_base),
	    .set_addr_map_addr_lim(msi$set_addr_map_addr_lim),
	    .slave_araddr(msi$slave_araddr),
	    .slave_arburst(msi$slave_arburst),
	    .slave_arcache(msi$slave_arcache),
	    .slave_arid(msi$slave_arid),
	    .slave_arlen(msi$slave_arlen),
	    .slave_arlock(msi$slave_arlock),
	    .slave_arprot(msi$slave_arprot),
	    .slave_arqos(msi$slave_arqos),
	    .slave_arregion(msi$slave_arregion),
	    .slave_arsize(msi$slave_arsize),
	    .slave_arvalid(msi$slave_arvalid),
	    .slave_awaddr(msi$slave_awaddr),
	    .slave_awburst(msi$slave_awburst),
	    .slave_awcache(msi$slave_awcache),
	    .slave_awid(msi$slave_awid),
	    .slave_awlen(msi$slave_awlen),
	    .slave_awlock(msi$slave_awlock),
	    .slave_awprot(msi$slave_awprot),
	    .slave_awqos(msi$slave_awqos),
	    .slave_awregion(msi$slave_awregion),
	    .slave_awsize(msi$slave_awsize),
	    .slave_awvalid(msi$slave_awvalid),
	    .slave_bready(msi$slave_bready),
	    .slave_rready(msi$slave_rready),
	    .slave_wdata(msi$slave_wdata),
	    .slave_wlast(msi$slave_wlast),
	    .slave_wstrb(msi$slave_wstrb),
	    .slave_wvalid(msi$slave_wvalid),
	    .EN_set_addr_map(msi$EN_set_addr_map),
	    .RDY_set_addr_map(),
	    .slave_awready(msi$slave_awready),
	    .slave_wready(msi$slave_wready),
	    .slave_bvalid(msi$slave_bvalid),
	    .slave_bid(msi$slave_bid),
	    .slave_bresp(msi$slave_bresp),
	    .slave_arready(msi$slave_arready),
	    .slave_rvalid(msi$slave_rvalid),
	    .slave_rid(msi$slave_rid),
	    .slave_rdata(msi$slave_rdata),
	    .slave_rresp(msi$slave_rresp),
	    .slave_rlast(msi$slave_rlast),
	    .interruptLevels(msi$interruptLevels));

  // submodule uart0
  mkUART uart0(.CLK(CLK),
	       .RST_N(RST_N),
	       .put_from_console_put(uart0$put_from_console_put),
	       .set_addr_map_addr_base(uart0$set_addr_map_addr_base),
	       .set_addr_map_addr_lim(uart0$set_addr_map_addr_lim),
	       .slave_araddr(uart0$slave_araddr),
	       .slave_arburst(uart0$slave_arburst),
	       .slave_arcache(uart0$slave_arcache),
	       .slave_arid(uart0$slave_arid),
	       .slave_arlen(uart0$slave_arlen),
	       .slave_arlock(uart0$slave_arlock),
	       .slave_arprot(uart0$slave_arprot),
	       .slave_arqos(uart0$slave_arqos),
	       .slave_arregion(uart0$slave_arregion),
	       .slave_arsize(uart0$slave_arsize),
	       .slave_arvalid(uart0$slave_arvalid),
	       .slave_awaddr(uart0$slave_awaddr),
	       .slave_awburst(uart0$slave_awburst),
	       .slave_awcache(uart0$slave_awcache),
	       .slave_awid(uart0$slave_awid),
	       .slave_awlen(uart0$slave_awlen),
	       .slave_awlock(uart0$slave_awlock),
	       .slave_awprot(uart0$slave_awprot),
	       .slave_awqos(uart0$slave_awqos),
	       .slave_awregion(uart0$slave_awregion),
	       .slave_awsize(uart0$slave_awsize),
	       .slave_awvalid(uart0$slave_awvalid),
	       .slave_bready(uart0$slave_bready),
	       .slave_rready(uart0$slave_rready),
	       .slave_wdata(uart0$slave_wdata),
	       .slave_wlast(uart0$slave_wlast),
	       .slave_wstrb(uart0$slave_wstrb),
	       .slave_wvalid(uart0$slave_wvalid),
	       .EN_server_reset_request_put(uart0$EN_server_reset_request_put),
	       .EN_server_reset_response_get(uart0$EN_server_reset_response_get),
	       .EN_set_addr_map(uart0$EN_set_addr_map),
	       .EN_get_to_console_get(uart0$EN_get_to_console_get),
	       .EN_put_from_console_put(uart0$EN_put_from_console_put),
	       .RDY_server_reset_request_put(uart0$RDY_server_reset_request_put),
	       .RDY_server_reset_response_get(uart0$RDY_server_reset_response_get),
	       .RDY_set_addr_map(),
	       .slave_awready(uart0$slave_awready),
	       .slave_wready(uart0$slave_wready),
	       .slave_bvalid(uart0$slave_bvalid),
	       .slave_bid(uart0$slave_bid),
	       .slave_bresp(uart0$slave_bresp),
	       .slave_arready(uart0$slave_arready),
	       .slave_rvalid(uart0$slave_rvalid),
	       .slave_rid(uart0$slave_rid),
	       .slave_rdata(uart0$slave_rdata),
	       .slave_rresp(uart0$slave_rresp),
	       .slave_rlast(uart0$slave_rlast),
	       .get_to_console_get(uart0$get_to_console_get),
	       .RDY_get_to_console_get(uart0$RDY_get_to_console_get),
	       .RDY_put_from_console_put(uart0$RDY_put_from_console_put),
	       .intr(uart0$intr));

  // rule RL_rl_wr_addr_channel
  assign CAN_FIRE_RL_rl_wr_addr_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel = 1'd1 ;

  // rule RL_rl_wr_data_channel
  assign CAN_FIRE_RL_rl_wr_data_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel = 1'd1 ;

  // rule RL_rl_wr_response_channel
  assign CAN_FIRE_RL_rl_wr_response_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel = 1'd1 ;

  // rule RL_rl_rd_addr_channel
  assign CAN_FIRE_RL_rl_rd_addr_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel = 1'd1 ;

  // rule RL_rl_rd_data_channel
  assign CAN_FIRE_RL_rl_rd_data_channel = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel = 1'd1 ;

  // rule RL_rl_wr_addr_channel_1
  assign CAN_FIRE_RL_rl_wr_addr_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_1 = 1'd1 ;

  // rule RL_rl_wr_data_channel_1
  assign CAN_FIRE_RL_rl_wr_data_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_1 = 1'd1 ;

  // rule RL_rl_wr_response_channel_1
  assign CAN_FIRE_RL_rl_wr_response_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_1 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_1
  assign CAN_FIRE_RL_rl_rd_addr_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_1 = 1'd1 ;

  // rule RL_rl_rd_data_channel_1
  assign CAN_FIRE_RL_rl_rd_data_channel_1 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_1 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_2
  assign CAN_FIRE_RL_rl_wr_addr_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_2 = 1'd1 ;

  // rule RL_rl_wr_data_channel_2
  assign CAN_FIRE_RL_rl_wr_data_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_2 = 1'd1 ;

  // rule RL_rl_wr_response_channel_2
  assign CAN_FIRE_RL_rl_wr_response_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_2 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_2
  assign CAN_FIRE_RL_rl_rd_addr_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_2 = 1'd1 ;

  // rule RL_rl_rd_data_channel_2
  assign CAN_FIRE_RL_rl_rd_data_channel_2 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_2 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_3
  assign CAN_FIRE_RL_rl_wr_addr_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_3 = 1'd1 ;

  // rule RL_rl_wr_data_channel_3
  assign CAN_FIRE_RL_rl_wr_data_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_3 = 1'd1 ;

  // rule RL_rl_wr_response_channel_3
  assign CAN_FIRE_RL_rl_wr_response_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_3 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_3
  assign CAN_FIRE_RL_rl_rd_addr_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_3 = 1'd1 ;

  // rule RL_rl_rd_data_channel_3
  assign CAN_FIRE_RL_rl_rd_data_channel_3 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_3 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_4
  assign CAN_FIRE_RL_rl_wr_addr_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_4 = 1'd1 ;

  // rule RL_rl_wr_data_channel_4
  assign CAN_FIRE_RL_rl_wr_data_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_4 = 1'd1 ;

  // rule RL_rl_wr_response_channel_4
  assign CAN_FIRE_RL_rl_wr_response_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_4 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_4
  assign CAN_FIRE_RL_rl_rd_addr_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_4 = 1'd1 ;

  // rule RL_rl_rd_data_channel_4
  assign CAN_FIRE_RL_rl_rd_data_channel_4 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_4 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_5
  assign CAN_FIRE_RL_rl_wr_addr_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_5 = 1'd1 ;

  // rule RL_rl_wr_data_channel_5
  assign CAN_FIRE_RL_rl_wr_data_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_5 = 1'd1 ;

  // rule RL_rl_wr_response_channel_5
  assign CAN_FIRE_RL_rl_wr_response_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_5 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_5
  assign CAN_FIRE_RL_rl_rd_addr_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_5 = 1'd1 ;

  // rule RL_rl_rd_data_channel_5
  assign CAN_FIRE_RL_rl_rd_data_channel_5 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_5 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_6
  assign CAN_FIRE_RL_rl_wr_addr_channel_6 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_6 = 1'd1 ;

  // rule RL_rl_wr_data_channel_6
  assign CAN_FIRE_RL_rl_wr_data_channel_6 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_6 = 1'd1 ;

  // rule RL_rl_wr_response_channel_6
  assign CAN_FIRE_RL_rl_wr_response_channel_6 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_6 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_6
  assign CAN_FIRE_RL_rl_rd_addr_channel_6 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_6 = 1'd1 ;

  // rule RL_rl_rd_data_channel_6
  assign CAN_FIRE_RL_rl_rd_data_channel_6 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_6 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_7
  assign CAN_FIRE_RL_rl_wr_addr_channel_7 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_7 = 1'd1 ;

  // rule RL_rl_wr_data_channel_7
  assign CAN_FIRE_RL_rl_wr_data_channel_7 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_7 = 1'd1 ;

  // rule RL_rl_wr_response_channel_7
  assign CAN_FIRE_RL_rl_wr_response_channel_7 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_7 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_7
  assign CAN_FIRE_RL_rl_rd_addr_channel_7 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_7 = 1'd1 ;

  // rule RL_rl_rd_data_channel_7
  assign CAN_FIRE_RL_rl_rd_data_channel_7 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_7 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_8
  assign CAN_FIRE_RL_rl_wr_addr_channel_8 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_8 = 1'd1 ;

  // rule RL_rl_wr_data_channel_8
  assign CAN_FIRE_RL_rl_wr_data_channel_8 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_8 = 1'd1 ;

  // rule RL_rl_wr_response_channel_8
  assign CAN_FIRE_RL_rl_wr_response_channel_8 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_8 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_8
  assign CAN_FIRE_RL_rl_rd_addr_channel_8 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_8 = 1'd1 ;

  // rule RL_rl_rd_data_channel_8
  assign CAN_FIRE_RL_rl_rd_data_channel_8 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_8 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_9
  assign CAN_FIRE_RL_rl_wr_addr_channel_9 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_9 = 1'd1 ;

  // rule RL_rl_wr_data_channel_9
  assign CAN_FIRE_RL_rl_wr_data_channel_9 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_9 = 1'd1 ;

  // rule RL_rl_wr_response_channel_9
  assign CAN_FIRE_RL_rl_wr_response_channel_9 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_9 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_9
  assign CAN_FIRE_RL_rl_rd_addr_channel_9 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_9 = 1'd1 ;

  // rule RL_rl_rd_data_channel_9
  assign CAN_FIRE_RL_rl_rd_data_channel_9 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_9 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_10
  assign CAN_FIRE_RL_rl_wr_addr_channel_10 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_10 = 1'd1 ;

  // rule RL_rl_wr_data_channel_10
  assign CAN_FIRE_RL_rl_wr_data_channel_10 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_10 = 1'd1 ;

  // rule RL_rl_wr_response_channel_10
  assign CAN_FIRE_RL_rl_wr_response_channel_10 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_10 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_10
  assign CAN_FIRE_RL_rl_rd_addr_channel_10 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_10 = 1'd1 ;

  // rule RL_rl_rd_data_channel_10
  assign CAN_FIRE_RL_rl_rd_data_channel_10 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_10 = 1'd1 ;

  // rule RL_rl_wr_addr_channel_11
  assign CAN_FIRE_RL_rl_wr_addr_channel_11 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_addr_channel_11 = 1'd1 ;

  // rule RL_rl_wr_data_channel_11
  assign CAN_FIRE_RL_rl_wr_data_channel_11 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_data_channel_11 = 1'd1 ;

  // rule RL_rl_wr_response_channel_11
  assign CAN_FIRE_RL_rl_wr_response_channel_11 = 1'd1 ;
  assign WILL_FIRE_RL_rl_wr_response_channel_11 = 1'd1 ;

  // rule RL_rl_rd_addr_channel_11
  assign CAN_FIRE_RL_rl_rd_addr_channel_11 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_addr_channel_11 = 1'd1 ;

  // rule RL_rl_rd_data_channel_11
  assign CAN_FIRE_RL_rl_rd_data_channel_11 = 1'd1 ;
  assign WILL_FIRE_RL_rl_rd_data_channel_11 = 1'd1 ;

  // rule RL_rl_connect
  assign CAN_FIRE_RL_rl_connect =
	     axi4L_channels$RDY_v_from_host_0_deq &&
	     axi4L_channels$RDY_v_from_host_0_first &&
	     awsteria_core$RDY_se_control_status_request_enq ;
  assign WILL_FIRE_RL_rl_connect = CAN_FIRE_RL_rl_connect ;

  // rule RL_rl_connect_1
  assign CAN_FIRE_RL_rl_connect_1 =
	     axi4L_channels$RDY_v_to_host_0_enq &&
	     awsteria_core$RDY_se_control_status_response_deq &&
	     awsteria_core$RDY_se_control_status_response_first ;
  assign WILL_FIRE_RL_rl_connect_1 = CAN_FIRE_RL_rl_connect_1 ;

  // rule RL_rl_console_to_UART
  assign CAN_FIRE_RL_rl_console_to_UART =
	     axi4L_channels$RDY_v_from_host_1_deq &&
	     axi4L_channels$RDY_v_from_host_1_first &&
	     uart0$RDY_put_from_console_put ;
  assign WILL_FIRE_RL_rl_console_to_UART = CAN_FIRE_RL_rl_console_to_UART ;

  // rule RL_rl_UART_to_console
  assign CAN_FIRE_RL_rl_UART_to_console =
	     uart0$RDY_get_to_console_get &&
	     (!rg_uart_buf[31] || axi4L_channels$RDY_v_to_host_1_enq) ;
  assign WILL_FIRE_RL_rl_UART_to_console = CAN_FIRE_RL_rl_UART_to_console ;

  // rule RL_rl_UART_to_console_flush
  assign CAN_FIRE_RL_rl_UART_to_console_flush =
	     (rg_uart_timeout != 16'd0 ||
	      axi4L_channels$RDY_v_to_host_1_enq) &&
	     rg_uart_buf != 32'd0 ;
  assign WILL_FIRE_RL_rl_UART_to_console_flush =
	     CAN_FIRE_RL_rl_UART_to_console_flush &&
	     !WILL_FIRE_RL_rl_UART_to_console ;

  // rule RL_rl_hw_to_host_mem_req
  assign CAN_FIRE_RL_rl_hw_to_host_mem_req =
	     axi4L_channels$RDY_v_to_host_2_enq &&
	     mmio_to_host$RDY_to_host_get ;
  assign WILL_FIRE_RL_rl_hw_to_host_mem_req =
	     CAN_FIRE_RL_rl_hw_to_host_mem_req ;

  // rule RL_rl_host_to_hw_mem_rsp
  assign CAN_FIRE_RL_rl_host_to_hw_mem_rsp =
	     axi4L_channels$RDY_v_from_host_2_deq &&
	     axi4L_channels$RDY_v_from_host_2_first &&
	     mmio_to_host$RDY_from_host_put ;
  assign WILL_FIRE_RL_rl_host_to_hw_mem_rsp =
	     CAN_FIRE_RL_rl_host_to_hw_mem_rsp ;

  // rule RL_rl_control_to_DM_idle
  assign CAN_FIRE_RL_rl_control_to_DM_idle =
	     axi4L_channels$RDY_v_from_host_3_deq &&
	     axi4L_channels$RDY_v_from_host_3_first &&
	     (axi4L_channels$v_from_host_3_first[31:24] != 8'd0 ||
	      awsteria_core$RDY_se_dmi_request_enq) &&
	     rg_state_dm == 2'd0 ;
  assign WILL_FIRE_RL_rl_control_to_DM_idle =
	     CAN_FIRE_RL_rl_control_to_DM_idle ;

  // rule RL_rl_control_to_DM_wr_req
  assign CAN_FIRE_RL_rl_control_to_DM_wr_req =
	     axi4L_channels$RDY_v_from_host_3_deq &&
	     axi4L_channels$RDY_v_from_host_3_first &&
	     awsteria_core$RDY_se_dmi_request_enq &&
	     rg_state_dm == 2'd2 ;
  assign WILL_FIRE_RL_rl_control_to_DM_wr_req =
	     CAN_FIRE_RL_rl_control_to_DM_wr_req ;

  // rule RL_rl_DM_rd_rsp
  assign CAN_FIRE_RL_rl_DM_rd_rsp =
	     axi4L_channels$RDY_v_to_host_3_enq &&
	     awsteria_core$RDY_se_dmi_response_deq &&
	     awsteria_core$RDY_se_dmi_response_first &&
	     rg_state_dm == 2'd1 ;
  assign WILL_FIRE_RL_rl_DM_rd_rsp = CAN_FIRE_RL_rl_DM_rd_rsp ;

  // rule RL_rl_hw_to_host_misc
  assign CAN_FIRE_RL_rl_hw_to_host_misc =
	     axi4L_channels$RDY_v_to_host_4_enq &&
	     awsteria_core$RDY_fo_misc_deq &&
	     awsteria_core$RDY_fo_misc_first ;
  assign WILL_FIRE_RL_rl_hw_to_host_misc = CAN_FIRE_RL_rl_hw_to_host_misc ;

  // rule RL_rl_host_to_hw_misc
  assign CAN_FIRE_RL_rl_host_to_hw_misc =
	     axi4L_channels$RDY_v_from_host_4_deq &&
	     axi4L_channels$RDY_v_from_host_4_first &&
	     awsteria_core$RDY_fi_misc_enq ;
  assign WILL_FIRE_RL_rl_host_to_hw_misc = CAN_FIRE_RL_rl_host_to_hw_misc ;

  // rule RL_rl_interrupts
  assign CAN_FIRE_RL_rl_interrupts = 1'd1 ;
  assign WILL_FIRE_RL_rl_interrupts = 1'd1 ;

  // rule RL_rl_tv_vb_out
  assign CAN_FIRE_RL_rl_tv_vb_out = awsteria_core$RDY_fo_tv_info_deq ;
  assign WILL_FIRE_RL_rl_tv_vb_out = awsteria_core$RDY_fo_tv_info_deq ;

  // rule RL_rl_ndm_reset
  assign CAN_FIRE_RL_rl_ndm_reset =
	     awsteria_core$RDY_cl_ndm_reset_response_enq &&
	     awsteria_core$RDY_cl_ndm_reset_request_deq &&
	     awsteria_core$RDY_cl_ndm_reset_request_first ;
  assign WILL_FIRE_RL_rl_ndm_reset = CAN_FIRE_RL_rl_ndm_reset ;

  // rule RL_rl_nmi_to_core
  assign CAN_FIRE_RL_rl_nmi_to_core = awsteria_core$RDY_fi_nmi_enq ;
  assign WILL_FIRE_RL_rl_nmi_to_core = awsteria_core$RDY_fi_nmi_enq ;

  // rule RL_rl_initialize
  assign CAN_FIRE_RL_rl_initialize =
	     mmio_fabric$RDY_reset && uart0$RDY_server_reset_request_put &&
	     rg_init_state == 2'd0 ;
  assign WILL_FIRE_RL_rl_initialize = CAN_FIRE_RL_rl_initialize ;

  // rule RL_rl_init_complete
  assign CAN_FIRE_RL_rl_init_complete =
	     uart0$RDY_server_reset_response_get && rg_init_state == 2'd1 ;
  assign WILL_FIRE_RL_rl_init_complete = CAN_FIRE_RL_rl_init_complete ;

  // rule RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small
  assign CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small =
	     axi4_downsizer_xactor_from_master_f_wr_addr$EMPTY_N &&
	     axi4_downsizer_xactor_from_master_f_wr_data$EMPTY_N &&
	     axi4_downsizer_xactor_to_slave_f_wr_addr$FULL_N &&
	     axi4_downsizer_xactor_to_slave_f_wr_data$FULL_N &&
	     axi4_downsizer_ff_wrRsp$FULL_N &&
	     axi4_downsizer_rg_req_beat_0_EQ_0_1_AND_axi4_d_ETC___d25 ;
  assign WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small ;

  // rule RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big
  assign CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big =
	     axi4_downsizer_ff_wrRsp$FULL_N &&
	     axi4_downsizer_xactor_from_master_f_wr_addr$EMPTY_N &&
	     NOT_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THE_ETC___d68 &&
	     axi4_downsizer_rg_req_beat_0_EQ_0_1_AND_axi4_d_ETC___d75 ;
  assign WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // rule RL_axi4_downsizer_rl_rd_req
  assign CAN_FIRE_RL_axi4_downsizer_rl_rd_req =
	     axi4_downsizer_xactor_from_master_f_rd_addr$EMPTY_N &&
	     axi4_downsizer_xactor_to_slave_f_rd_addr$FULL_N &&
	     (axi4_downsizer_rg_req_beat != 4'd0 ||
	      axi4_downsizer_rg_req_burst != 8'd255 ||
	      axi4_downsizer_ff_len$FULL_N) &&
	     axi4_downsizer_rg_wr_state == 2'd0 ;
  assign WILL_FIRE_RL_axi4_downsizer_rl_rd_req =
	     CAN_FIRE_RL_axi4_downsizer_rl_rd_req &&
	     !WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // rule RL_axi4_downsizer_rl_wr_resp_slave_to_master
  assign CAN_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master =
	     axi4_downsizer_ff_wrRsp$EMPTY_N &&
	     (!axi4_downsizer_ff_wrRsp$D_OUT[0] ||
	      axi4_downsizer_xactor_to_slave_f_wr_resp$EMPTY_N) &&
	     (!axi4_downsizer_ff_wrRsp$D_OUT[0] ||
	      axi4_downsizer_rg_wrr[1:0] != 2'b0 ||
	      axi4_downsizer_xactor_to_slave_f_wr_resp$EMPTY_N) &&
	     (!axi4_downsizer_ff_wrRsp$D_OUT[1] ||
	      axi4_downsizer_xactor_from_master_f_wr_resp$FULL_N) ;
  assign WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master ;

  // rule RL_axi4_downsizer_rl_rd_rsp
  assign CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp =
	     axi4_downsizer_xactor_to_slave_f_rd_data$EMPTY_N &&
	     (axi4_downsizer_rg_tot_beats != 12'd0 ||
	      axi4_downsizer_ff_len$EMPTY_N) &&
	     (x1_avValue_snd_snd_fst__h8825 != 4'd7 ||
	      axi4_downsizer_xactor_from_master_f_rd_data$FULL_N) ;
  assign WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp =
	     CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp ;

  // rule RL_axi4_widener_rl_wr_xaction_master_to_slave
  assign CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave =
	     axi4_widener_xactor_from_master_f_wr_addr$EMPTY_N &&
	     axi4_widener_xactor_from_master_f_wr_data$EMPTY_N &&
	     axi4_widener_xactor_to_slave_f_wr_addr$FULL_N &&
	     axi4_widener_xactor_to_slave_f_wr_data$FULL_N ;
  assign WILL_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave =
	     CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave ;

  // rule RL_axi4_widener_rl_wr_resp_slave_to_master
  assign CAN_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master =
	     axi4_widener_xactor_to_slave_f_wr_resp$EMPTY_N &&
	     axi4_widener_xactor_from_master_f_wr_resp$FULL_N ;
  assign WILL_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master =
	     CAN_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master ;

  // rule RL_axi4_widener_rl_rd_xaction_master_to_slave
  assign CAN_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave =
	     axi4_widener_xactor_from_master_f_rd_addr$EMPTY_N &&
	     axi4_widener_xactor_to_slave_f_rd_addr$FULL_N &&
	     axi4_widener_f_araddrs$FULL_N ;
  assign WILL_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave =
	     CAN_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave ;

  // rule RL_axi4_widener_rl_rd_resp_slave_to_master
  assign CAN_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master =
	     axi4_widener_xactor_to_slave_f_rd_data$EMPTY_N &&
	     axi4_widener_f_araddrs$EMPTY_N &&
	     axi4_widener_xactor_from_master_f_rd_data$FULL_N ;
  assign WILL_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master =
	     CAN_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master ;

  // inputs to muxes for submodule ports
  assign MUX_awsteria_core$se_dmi_request_enq_1__SEL_1 =
	     WILL_FIRE_RL_rl_control_to_DM_idle &&
	     axi4L_channels$v_from_host_3_first[31:24] == 8'd0 ;
  assign MUX_axi4L_channels$v_to_host_1_enq_1__SEL_2 =
	     WILL_FIRE_RL_rl_UART_to_console_flush &&
	     rg_uart_timeout == 16'd0 ;
  assign MUX_axi4_downsizer_rg_wr_state$write_1__SEL_1 =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	     axi4_downsizer_ff_wrRsp$D_OUT[1] ;
  assign MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__SEL_1 =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	     stb__h6331[7:0] != 8'd0 ;
  assign MUX_rg_uart_timeout$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_UART_to_console_flush &&
	     rg_uart_timeout != 16'd0 ;
  assign MUX_awsteria_core$se_dmi_request_enq_1__VAL_1 =
	     { 1'd1, axi4L_channels$v_from_host_3_first[6:0], 32'hAAAAAAAA } ;
  assign MUX_awsteria_core$se_dmi_request_enq_1__VAL_2 =
	     { 1'd0, rg_dm_addr, axi4L_channels$v_from_host_3_first } ;
  assign MUX_axi4_downsizer_ff_wrRsp$enq_1__VAL_1 =
	     { stb__h6331[63:8] == 56'd0 &&
	       IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d91,
	       stb__h6331[7:0] != 8'd0 } ;
  assign MUX_axi4_downsizer_rg_wr_state$write_1__VAL_2 =
	     (stb__h6331[63:8] == 56'd0) ?
	       (IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d91 ?
		  2'd3 :
		  2'd1) :
	       2'd2 ;
  assign MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__VAL_1 =
	     { axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[108:93],
	       addr__h6319,
	       11'd3,
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[17:0] } ;
  assign MUX_axi4_downsizer_xactor_to_slave_f_wr_data$enq_1__VAL_1 =
	     { dta__h6329[63:0], stb__h6331[7:0], 1'd1 } ;
  assign MUX_axi4_downsizer_xactor_to_slave_f_wr_data$enq_1__VAL_2 =
	     { x__h5968[63:0], x__h6030[7:0], 1'd1 } ;
  assign MUX_rg_state_dm$write_1__VAL_1 =
	     (axi4L_channels$v_from_host_3_first[31:24] == 8'd0) ?
	       2'd1 :
	       2'd2 ;
  assign MUX_rg_uart_buf$write_1__VAL_2 =
	     { IF_rg_uart_buf_BIT_31_THEN_0_ELSE_rg_uart_buf__q2[23:0],
	       1'd1,
	       uart0$get_to_console_get[6:0] } ;
  assign MUX_rg_uart_timeout$write_1__VAL_1 = rg_uart_timeout - 16'd1 ;

  // register axi4_downsizer_rg_addr
  assign axi4_downsizer_rg_addr$D_IN = addr__h6319 + 64'd8 ;
  assign axi4_downsizer_rg_addr$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // register axi4_downsizer_rg_buffer
  assign axi4_downsizer_rg_buffer$D_IN = m_rdd___1_rdata__h8873 ;
  assign axi4_downsizer_rg_buffer$EN = CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp ;

  // register axi4_downsizer_rg_last
  assign axi4_downsizer_rg_last$D_IN =
	     IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d91 ;
  assign axi4_downsizer_rg_last$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // register axi4_downsizer_rg_rd_rsp_state
  assign axi4_downsizer_rg_rd_rsp_state$D_IN = 2'h0 ;
  assign axi4_downsizer_rg_rd_rsp_state$EN = 1'b0 ;

  // register axi4_downsizer_rg_req_addr
  assign axi4_downsizer_rg_req_addr$D_IN = v__h7978 + 64'd8 ;
  assign axi4_downsizer_rg_req_addr$EN =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_req ;

  // register axi4_downsizer_rg_req_beat
  assign axi4_downsizer_rg_req_beat$D_IN =
	     (axi4_downsizer_rg_req_beat == 4'd7) ?
	       4'd0 :
	       axi4_downsizer_rg_req_beat + 4'd1 ;
  assign axi4_downsizer_rg_req_beat$EN =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_req ;

  // register axi4_downsizer_rg_req_burst
  assign axi4_downsizer_rg_req_burst$D_IN =
	     IF_axi4_downsizer_rg_req_beat_0_EQ_7_66_THEN_a_ETC___d169 ?
	       8'd255 :
	       req_burst__h8231 ;
  assign axi4_downsizer_rg_req_burst$EN =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_req ;

  // register axi4_downsizer_rg_resp
  assign axi4_downsizer_rg_resp$D_IN = _theResult_____2__h8807 ;
  assign axi4_downsizer_rg_resp$EN = CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp ;

  // register axi4_downsizer_rg_rsp_beat
  assign axi4_downsizer_rg_rsp_beat$D_IN =
	     (x1_avValue_snd_snd_fst__h8825 == 4'd7) ?
	       4'd0 :
	       rsp_beat__h8808 ;
  assign axi4_downsizer_rg_rsp_beat$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp ;

  // register axi4_downsizer_rg_tot_beats
  assign axi4_downsizer_rg_tot_beats$D_IN =
	     x1_avValue_snd_snd_snd__h8826 - 12'd1 ;
  assign axi4_downsizer_rg_tot_beats$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp ;

  // register axi4_downsizer_rg_wr_state
  assign axi4_downsizer_rg_wr_state$D_IN =
	     MUX_axi4_downsizer_rg_wr_state$write_1__SEL_1 ?
	       2'd0 :
	       MUX_axi4_downsizer_rg_wr_state$write_1__VAL_2 ;
  assign axi4_downsizer_rg_wr_state$EN =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	     axi4_downsizer_ff_wrRsp$D_OUT[1] ||
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // register axi4_downsizer_rg_wrr
  assign axi4_downsizer_rg_wrr$D_IN =
	     { IF_axi4_downsizer_ff_wrRsp_first__13_BIT_0_14__ETC___d138,
	       axi4_downsizer_ff_wrRsp$D_OUT[1] ?
		 2'b0 :
		 x1_avValue_fst_bresp__h7714 } ;
  assign axi4_downsizer_rg_wrr$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master ;

  // register axi4_downsizer_wrBuffer
  assign axi4_downsizer_wrBuffer$D_IN = dta__h6329[511:64] ;
  assign axi4_downsizer_wrBuffer$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // register axi4_downsizer_wrLen
  assign axi4_downsizer_wrLen$D_IN = 8'h0 ;
  assign axi4_downsizer_wrLen$EN = 1'b0 ;

  // register axi4_downsizer_wrStbBuff
  assign axi4_downsizer_wrStbBuff$D_IN = stb__h6331[63:8] ;
  assign axi4_downsizer_wrStbBuff$EN =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ;

  // register rg_dm_addr
  assign rg_dm_addr$D_IN = axi4L_channels$v_from_host_3_first[6:0] ;
  assign rg_dm_addr$EN =
	     WILL_FIRE_RL_rl_control_to_DM_idle &&
	     axi4L_channels$v_from_host_3_first[31:24] != 8'd0 ;

  // register rg_env_ready
  assign rg_env_ready$D_IN = m_env_ready_env_ready ;
  assign rg_env_ready$EN = 1'd1 ;

  // register rg_init_state
  assign rg_init_state$D_IN = WILL_FIRE_RL_rl_initialize ? 2'd1 : 2'd2 ;
  assign rg_init_state$EN =
	     WILL_FIRE_RL_rl_initialize || WILL_FIRE_RL_rl_init_complete ;

  // register rg_state_dm
  assign rg_state_dm$D_IN =
	     WILL_FIRE_RL_rl_control_to_DM_idle ?
	       MUX_rg_state_dm$write_1__VAL_1 :
	       2'd0 ;
  assign rg_state_dm$EN =
	     WILL_FIRE_RL_rl_control_to_DM_idle ||
	     WILL_FIRE_RL_rl_DM_rd_rsp ||
	     WILL_FIRE_RL_rl_control_to_DM_wr_req ;

  // register rg_uart_buf
  assign rg_uart_buf$D_IN =
	     MUX_axi4L_channels$v_to_host_1_enq_1__SEL_2 ?
	       32'd0 :
	       MUX_rg_uart_buf$write_1__VAL_2 ;
  assign rg_uart_buf$EN =
	     WILL_FIRE_RL_rl_UART_to_console_flush &&
	     rg_uart_timeout == 16'd0 ||
	     WILL_FIRE_RL_rl_UART_to_console ;

  // register rg_uart_timeout
  assign rg_uart_timeout$D_IN =
	     MUX_rg_uart_timeout$write_1__SEL_1 ?
	       MUX_rg_uart_timeout$write_1__VAL_1 :
	       16'h2000 ;
  assign rg_uart_timeout$EN =
	     WILL_FIRE_RL_rl_UART_to_console_flush &&
	     rg_uart_timeout != 16'd0 ||
	     WILL_FIRE_RL_rl_UART_to_console ;

  // submodule awsteria_core
  assign awsteria_core$dma_S_araddr =
	     { 28'd0, host_fabric$v_to_slaves_0_araddr[35:0] } ;
  assign awsteria_core$dma_S_arburst = host_fabric$v_to_slaves_0_arburst ;
  assign awsteria_core$dma_S_arcache = host_fabric$v_to_slaves_0_arcache ;
  assign awsteria_core$dma_S_arid = host_fabric$v_to_slaves_0_arid ;
  assign awsteria_core$dma_S_arlen = host_fabric$v_to_slaves_0_arlen ;
  assign awsteria_core$dma_S_arlock = host_fabric$v_to_slaves_0_arlock ;
  assign awsteria_core$dma_S_arprot = host_fabric$v_to_slaves_0_arprot ;
  assign awsteria_core$dma_S_arqos = host_fabric$v_to_slaves_0_arqos ;
  assign awsteria_core$dma_S_arregion = host_fabric$v_to_slaves_0_arregion ;
  assign awsteria_core$dma_S_arsize = host_fabric$v_to_slaves_0_arsize ;
  assign awsteria_core$dma_S_arvalid = host_fabric$v_to_slaves_0_arvalid ;
  assign awsteria_core$dma_S_awaddr =
	     { 28'd0, host_fabric$v_to_slaves_0_awaddr[35:0] } ;
  assign awsteria_core$dma_S_awburst = host_fabric$v_to_slaves_0_awburst ;
  assign awsteria_core$dma_S_awcache = host_fabric$v_to_slaves_0_awcache ;
  assign awsteria_core$dma_S_awid = host_fabric$v_to_slaves_0_awid ;
  assign awsteria_core$dma_S_awlen = host_fabric$v_to_slaves_0_awlen ;
  assign awsteria_core$dma_S_awlock = host_fabric$v_to_slaves_0_awlock ;
  assign awsteria_core$dma_S_awprot = host_fabric$v_to_slaves_0_awprot ;
  assign awsteria_core$dma_S_awqos = host_fabric$v_to_slaves_0_awqos ;
  assign awsteria_core$dma_S_awregion = host_fabric$v_to_slaves_0_awregion ;
  assign awsteria_core$dma_S_awsize = host_fabric$v_to_slaves_0_awsize ;
  assign awsteria_core$dma_S_awvalid = host_fabric$v_to_slaves_0_awvalid ;
  assign awsteria_core$dma_S_bready = host_fabric$v_to_slaves_0_bready ;
  assign awsteria_core$dma_S_rready = host_fabric$v_to_slaves_0_rready ;
  assign awsteria_core$dma_S_wdata = host_fabric$v_to_slaves_0_wdata ;
  assign awsteria_core$dma_S_wlast = host_fabric$v_to_slaves_0_wlast ;
  assign awsteria_core$dma_S_wstrb = host_fabric$v_to_slaves_0_wstrb ;
  assign awsteria_core$dma_S_wvalid = host_fabric$v_to_slaves_0_wvalid ;
  assign awsteria_core$ext_interrupts_x =
	     { msi$interruptLevels[4:1], uart0$intr } ;
  assign awsteria_core$fi_misc_enq_x = axi4L_channels$v_from_host_4_first ;
  assign awsteria_core$fi_nmi_enq_x = 1'd0 ;
  assign awsteria_core$mem_M_arready = ddr_fabric$v_from_masters_0_arready ;
  assign awsteria_core$mem_M_awready = ddr_fabric$v_from_masters_0_awready ;
  assign awsteria_core$mem_M_bid = ddr_fabric$v_from_masters_0_bid ;
  assign awsteria_core$mem_M_bresp = ddr_fabric$v_from_masters_0_bresp ;
  assign awsteria_core$mem_M_bvalid = ddr_fabric$v_from_masters_0_bvalid ;
  assign awsteria_core$mem_M_rdata = ddr_fabric$v_from_masters_0_rdata ;
  assign awsteria_core$mem_M_rid = ddr_fabric$v_from_masters_0_rid ;
  assign awsteria_core$mem_M_rlast = ddr_fabric$v_from_masters_0_rlast ;
  assign awsteria_core$mem_M_rresp = ddr_fabric$v_from_masters_0_rresp ;
  assign awsteria_core$mem_M_rvalid = ddr_fabric$v_from_masters_0_rvalid ;
  assign awsteria_core$mem_M_wready = ddr_fabric$v_from_masters_0_wready ;
  assign awsteria_core$mmio_M_arready =
	     mmio_axi4_deburster$from_master_arready ;
  assign awsteria_core$mmio_M_awready =
	     mmio_axi4_deburster$from_master_awready ;
  assign awsteria_core$mmio_M_bid = mmio_axi4_deburster$from_master_bid ;
  assign awsteria_core$mmio_M_bresp = mmio_axi4_deburster$from_master_bresp ;
  assign awsteria_core$mmio_M_bvalid =
	     mmio_axi4_deburster$from_master_bvalid ;
  assign awsteria_core$mmio_M_rdata = mmio_axi4_deburster$from_master_rdata ;
  assign awsteria_core$mmio_M_rid = mmio_axi4_deburster$from_master_rid ;
  assign awsteria_core$mmio_M_rlast = mmio_axi4_deburster$from_master_rlast ;
  assign awsteria_core$mmio_M_rresp = mmio_axi4_deburster$from_master_rresp ;
  assign awsteria_core$mmio_M_rvalid =
	     mmio_axi4_deburster$from_master_rvalid ;
  assign awsteria_core$mmio_M_wready =
	     mmio_axi4_deburster$from_master_wready ;
  assign awsteria_core$se_control_status_request_enq_x =
	     axi4L_channels$v_from_host_0_first ;
  assign awsteria_core$se_dmi_request_enq_x =
	     MUX_awsteria_core$se_dmi_request_enq_1__SEL_1 ?
	       MUX_awsteria_core$se_dmi_request_enq_1__VAL_1 :
	       MUX_awsteria_core$se_dmi_request_enq_1__VAL_2 ;
  assign awsteria_core$EN_ext_interrupts = 1'd1 ;
  assign awsteria_core$EN_fi_nmi_enq = awsteria_core$RDY_fi_nmi_enq ;
  assign awsteria_core$EN_fo_misc_deq = CAN_FIRE_RL_rl_hw_to_host_misc ;
  assign awsteria_core$EN_fi_misc_enq = CAN_FIRE_RL_rl_host_to_hw_misc ;
  assign awsteria_core$EN_fo_tv_info_deq = awsteria_core$RDY_fo_tv_info_deq ;
  assign awsteria_core$EN_se_dmi_request_enq =
	     WILL_FIRE_RL_rl_control_to_DM_idle &&
	     axi4L_channels$v_from_host_3_first[31:24] == 8'd0 ||
	     WILL_FIRE_RL_rl_control_to_DM_wr_req ;
  assign awsteria_core$EN_se_dmi_response_deq = CAN_FIRE_RL_rl_DM_rd_rsp ;
  assign awsteria_core$EN_cl_ndm_reset_request_deq =
	     CAN_FIRE_RL_rl_ndm_reset ;
  assign awsteria_core$EN_cl_ndm_reset_response_enq =
	     CAN_FIRE_RL_rl_ndm_reset ;
  assign awsteria_core$EN_se_control_status_request_enq =
	     CAN_FIRE_RL_rl_connect ;
  assign awsteria_core$EN_se_control_status_response_deq =
	     CAN_FIRE_RL_rl_connect_1 ;

  // submodule axi4L_channels
  assign axi4L_channels$axi4L_S_araddr = host_AXI4L_S_araddr ;
  assign axi4L_channels$axi4L_S_arprot = host_AXI4L_S_arprot ;
  assign axi4L_channels$axi4L_S_arvalid = host_AXI4L_S_arvalid ;
  assign axi4L_channels$axi4L_S_awaddr = host_AXI4L_S_awaddr ;
  assign axi4L_channels$axi4L_S_awprot = host_AXI4L_S_awprot ;
  assign axi4L_channels$axi4L_S_awvalid = host_AXI4L_S_awvalid ;
  assign axi4L_channels$axi4L_S_bready = host_AXI4L_S_bready ;
  assign axi4L_channels$axi4L_S_rready = host_AXI4L_S_rready ;
  assign axi4L_channels$axi4L_S_wdata = host_AXI4L_S_wdata ;
  assign axi4L_channels$axi4L_S_wstrb = host_AXI4L_S_wstrb ;
  assign axi4L_channels$axi4L_S_wvalid = host_AXI4L_S_wvalid ;
  assign axi4L_channels$v_to_host_0_enq_x =
	     awsteria_core$se_control_status_response_first ;
  assign axi4L_channels$v_to_host_1_enq_x = rg_uart_buf ;
  assign axi4L_channels$v_to_host_2_enq_x = mmio_to_host$to_host_get ;
  assign axi4L_channels$v_to_host_3_enq_x =
	     awsteria_core$se_dmi_response_first ;
  assign axi4L_channels$v_to_host_4_enq_x = awsteria_core$fo_misc_first ;
  assign axi4L_channels$EN_v_from_host_0_deq = CAN_FIRE_RL_rl_connect ;
  assign axi4L_channels$EN_v_from_host_1_deq =
	     CAN_FIRE_RL_rl_console_to_UART ;
  assign axi4L_channels$EN_v_from_host_2_deq =
	     CAN_FIRE_RL_rl_host_to_hw_mem_rsp ;
  assign axi4L_channels$EN_v_from_host_3_deq =
	     WILL_FIRE_RL_rl_control_to_DM_wr_req ||
	     WILL_FIRE_RL_rl_control_to_DM_idle ;
  assign axi4L_channels$EN_v_from_host_4_deq =
	     CAN_FIRE_RL_rl_host_to_hw_misc ;
  assign axi4L_channels$EN_v_to_host_0_enq = CAN_FIRE_RL_rl_connect_1 ;
  assign axi4L_channels$EN_v_to_host_1_enq =
	     WILL_FIRE_RL_rl_UART_to_console && rg_uart_buf[31] ||
	     WILL_FIRE_RL_rl_UART_to_console_flush &&
	     rg_uart_timeout == 16'd0 ;
  assign axi4L_channels$EN_v_to_host_2_enq =
	     CAN_FIRE_RL_rl_hw_to_host_mem_req ;
  assign axi4L_channels$EN_v_to_host_3_enq = CAN_FIRE_RL_rl_DM_rd_rsp ;
  assign axi4L_channels$EN_v_to_host_4_enq = CAN_FIRE_RL_rl_hw_to_host_misc ;

  // submodule axi4_downsizer_ff_len
  assign axi4_downsizer_ff_len$D_IN =
	     { 3'd0,
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[28:21] } ;
  assign axi4_downsizer_ff_len$ENQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_req &&
	     axi4_downsizer_rg_req_beat == 4'd0 &&
	     axi4_downsizer_rg_req_burst == 8'd255 ;
  assign axi4_downsizer_ff_len$DEQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp &&
	     axi4_downsizer_rg_tot_beats == 12'd0 ;
  assign axi4_downsizer_ff_len$CLR = 1'b0 ;

  // submodule axi4_downsizer_ff_wrRsp
  assign axi4_downsizer_ff_wrRsp$D_IN =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ?
	       MUX_axi4_downsizer_ff_wrRsp$enq_1__VAL_1 :
	       2'd3 ;
  assign axi4_downsizer_ff_wrRsp$ENQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big ||
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small ;
  assign axi4_downsizer_ff_wrRsp$DEQ =
	     CAN_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master ;
  assign axi4_downsizer_ff_wrRsp$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_from_master_f_rd_addr
  assign axi4_downsizer_xactor_from_master_f_rd_addr$D_IN =
	     { host_fabric$v_to_slaves_2_arid,
	       host_fabric$v_to_slaves_2_araddr,
	       host_fabric$v_to_slaves_2_arlen,
	       host_fabric$v_to_slaves_2_arsize,
	       host_fabric$v_to_slaves_2_arburst,
	       host_fabric$v_to_slaves_2_arlock,
	       host_fabric$v_to_slaves_2_arcache,
	       host_fabric$v_to_slaves_2_arprot,
	       host_fabric$v_to_slaves_2_arqos,
	       host_fabric$v_to_slaves_2_arregion } ;
  assign axi4_downsizer_xactor_from_master_f_rd_addr$ENQ =
	     host_fabric$v_to_slaves_2_arvalid &&
	     axi4_downsizer_xactor_from_master_f_rd_addr$FULL_N ;
  assign axi4_downsizer_xactor_from_master_f_rd_addr$DEQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_req &&
	     IF_axi4_downsizer_rg_req_beat_0_EQ_7_66_THEN_a_ETC___d169 ;
  assign axi4_downsizer_xactor_from_master_f_rd_addr$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_from_master_f_rd_data
  assign axi4_downsizer_xactor_from_master_f_rd_data$D_IN =
	     { axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[82:67],
	       m_rdd___1_rdata__h8873,
	       _theResult_____2__h8807,
	       x1_avValue_snd_snd_snd__h8826 == 12'd1 } ;
  assign axi4_downsizer_xactor_from_master_f_rd_data$ENQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp &&
	     x1_avValue_snd_snd_fst__h8825 == 4'd7 ;
  assign axi4_downsizer_xactor_from_master_f_rd_data$DEQ =
	     host_fabric$v_to_slaves_2_rready &&
	     axi4_downsizer_xactor_from_master_f_rd_data$EMPTY_N ;
  assign axi4_downsizer_xactor_from_master_f_rd_data$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_from_master_f_wr_addr
  assign axi4_downsizer_xactor_from_master_f_wr_addr$D_IN =
	     { host_fabric$v_to_slaves_2_awid,
	       host_fabric$v_to_slaves_2_awaddr,
	       host_fabric$v_to_slaves_2_awlen,
	       host_fabric$v_to_slaves_2_awsize,
	       host_fabric$v_to_slaves_2_awburst,
	       host_fabric$v_to_slaves_2_awlock,
	       host_fabric$v_to_slaves_2_awcache,
	       host_fabric$v_to_slaves_2_awprot,
	       host_fabric$v_to_slaves_2_awqos,
	       host_fabric$v_to_slaves_2_awregion } ;
  assign axi4_downsizer_xactor_from_master_f_wr_addr$ENQ =
	     host_fabric$v_to_slaves_2_awvalid &&
	     axi4_downsizer_xactor_from_master_f_wr_addr$FULL_N ;
  assign axi4_downsizer_xactor_from_master_f_wr_addr$DEQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	     stb__h6331[63:8] == 56'd0 &&
	     IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d91 ||
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small ;
  assign axi4_downsizer_xactor_from_master_f_wr_addr$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_from_master_f_wr_data
  assign axi4_downsizer_xactor_from_master_f_wr_data$D_IN =
	     { host_fabric$v_to_slaves_2_wdata,
	       host_fabric$v_to_slaves_2_wstrb,
	       host_fabric$v_to_slaves_2_wlast } ;
  assign axi4_downsizer_xactor_from_master_f_wr_data$ENQ =
	     host_fabric$v_to_slaves_2_wvalid &&
	     axi4_downsizer_xactor_from_master_f_wr_data$FULL_N ;
  assign axi4_downsizer_xactor_from_master_f_wr_data$DEQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	     stb__h6331[63:8] == 56'd0 ||
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small ;
  assign axi4_downsizer_xactor_from_master_f_wr_data$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_from_master_f_wr_resp
  assign axi4_downsizer_xactor_from_master_f_wr_resp$D_IN =
	     axi4_downsizer_ff_wrRsp$D_OUT[0] ?
	       ((axi4_downsizer_rg_wrr[1:0] == 2'b0) ?
		  axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT :
		  axi4_downsizer_rg_wrr) :
	       axi4_downsizer_rg_wrr ;
  assign axi4_downsizer_xactor_from_master_f_wr_resp$ENQ =
	     MUX_axi4_downsizer_rg_wr_state$write_1__SEL_1 ;
  assign axi4_downsizer_xactor_from_master_f_wr_resp$DEQ =
	     host_fabric$v_to_slaves_2_bready &&
	     axi4_downsizer_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign axi4_downsizer_xactor_from_master_f_wr_resp$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_to_slave_f_rd_addr
  assign axi4_downsizer_xactor_to_slave_f_rd_addr$D_IN =
	     { axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[108:93],
	       v__h7978,
	       11'd3,
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[17:0] } ;
  assign axi4_downsizer_xactor_to_slave_f_rd_addr$ENQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_rd_req ;
  assign axi4_downsizer_xactor_to_slave_f_rd_addr$DEQ =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$EMPTY_N &&
	     mmio_fabric$v_from_masters_1_arready ;
  assign axi4_downsizer_xactor_to_slave_f_rd_addr$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_to_slave_f_rd_data
  assign axi4_downsizer_xactor_to_slave_f_rd_data$D_IN =
	     { mmio_fabric$v_from_masters_1_rid,
	       mmio_fabric$v_from_masters_1_rdata,
	       mmio_fabric$v_from_masters_1_rresp,
	       mmio_fabric$v_from_masters_1_rlast } ;
  assign axi4_downsizer_xactor_to_slave_f_rd_data$ENQ =
	     mmio_fabric$v_from_masters_1_rvalid &&
	     axi4_downsizer_xactor_to_slave_f_rd_data$FULL_N ;
  assign axi4_downsizer_xactor_to_slave_f_rd_data$DEQ =
	     CAN_FIRE_RL_axi4_downsizer_rl_rd_rsp ;
  assign axi4_downsizer_xactor_to_slave_f_rd_data$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_to_slave_f_wr_addr
  assign axi4_downsizer_xactor_to_slave_f_wr_addr$D_IN =
	     MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__SEL_1 ?
	       MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__VAL_1 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT ;
  assign axi4_downsizer_xactor_to_slave_f_wr_addr$ENQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	     stb__h6331[7:0] != 8'd0 ||
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small ;
  assign axi4_downsizer_xactor_to_slave_f_wr_addr$DEQ =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$EMPTY_N &&
	     mmio_fabric$v_from_masters_1_awready ;
  assign axi4_downsizer_xactor_to_slave_f_wr_addr$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_to_slave_f_wr_data
  assign axi4_downsizer_xactor_to_slave_f_wr_data$D_IN =
	     MUX_axi4_downsizer_xactor_to_slave_f_wr_addr$enq_1__SEL_1 ?
	       MUX_axi4_downsizer_xactor_to_slave_f_wr_data$enq_1__VAL_1 :
	       MUX_axi4_downsizer_xactor_to_slave_f_wr_data$enq_1__VAL_2 ;
  assign axi4_downsizer_xactor_to_slave_f_wr_data$ENQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	     stb__h6331[7:0] != 8'd0 ||
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small ;
  assign axi4_downsizer_xactor_to_slave_f_wr_data$DEQ =
	     axi4_downsizer_xactor_to_slave_f_wr_data$EMPTY_N &&
	     mmio_fabric$v_from_masters_1_wready ;
  assign axi4_downsizer_xactor_to_slave_f_wr_data$CLR = 1'b0 ;

  // submodule axi4_downsizer_xactor_to_slave_f_wr_resp
  assign axi4_downsizer_xactor_to_slave_f_wr_resp$D_IN =
	     { mmio_fabric$v_from_masters_1_bid,
	       mmio_fabric$v_from_masters_1_bresp } ;
  assign axi4_downsizer_xactor_to_slave_f_wr_resp$ENQ =
	     mmio_fabric$v_from_masters_1_bvalid &&
	     axi4_downsizer_xactor_to_slave_f_wr_resp$FULL_N ;
  assign axi4_downsizer_xactor_to_slave_f_wr_resp$DEQ =
	     WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	     axi4_downsizer_ff_wrRsp$D_OUT[0] ;
  assign axi4_downsizer_xactor_to_slave_f_wr_resp$CLR = 1'b0 ;

  // submodule axi4_widener_f_araddrs
  assign axi4_widener_f_araddrs$D_IN =
	     axi4_widener_xactor_from_master_f_rd_addr$D_OUT[92:29] ;
  assign axi4_widener_f_araddrs$ENQ =
	     CAN_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave ;
  assign axi4_widener_f_araddrs$DEQ =
	     CAN_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master ;
  assign axi4_widener_f_araddrs$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_from_master_f_rd_addr
  assign axi4_widener_xactor_from_master_f_rd_addr$D_IN =
	     { mmio_fabric$v_to_slaves_0_arid,
	       mmio_fabric$v_to_slaves_0_araddr,
	       mmio_fabric$v_to_slaves_0_arlen,
	       mmio_fabric$v_to_slaves_0_arsize,
	       mmio_fabric$v_to_slaves_0_arburst,
	       mmio_fabric$v_to_slaves_0_arlock,
	       mmio_fabric$v_to_slaves_0_arcache,
	       mmio_fabric$v_to_slaves_0_arprot,
	       mmio_fabric$v_to_slaves_0_arqos,
	       mmio_fabric$v_to_slaves_0_arregion } ;
  assign axi4_widener_xactor_from_master_f_rd_addr$ENQ =
	     mmio_fabric$v_to_slaves_0_arvalid &&
	     axi4_widener_xactor_from_master_f_rd_addr$FULL_N ;
  assign axi4_widener_xactor_from_master_f_rd_addr$DEQ =
	     CAN_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave ;
  assign axi4_widener_xactor_from_master_f_rd_addr$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_from_master_f_rd_data
  assign axi4_widener_xactor_from_master_f_rd_data$D_IN =
	     { axi4_widener_xactor_to_slave_f_rd_data$D_OUT[530:515],
	       x__h11578[63:0],
	       axi4_widener_xactor_to_slave_f_rd_data$D_OUT[2:0] } ;
  assign axi4_widener_xactor_from_master_f_rd_data$ENQ =
	     CAN_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master ;
  assign axi4_widener_xactor_from_master_f_rd_data$DEQ =
	     mmio_fabric$v_to_slaves_0_rready &&
	     axi4_widener_xactor_from_master_f_rd_data$EMPTY_N ;
  assign axi4_widener_xactor_from_master_f_rd_data$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_from_master_f_wr_addr
  assign axi4_widener_xactor_from_master_f_wr_addr$D_IN =
	     { mmio_fabric$v_to_slaves_0_awid,
	       mmio_fabric$v_to_slaves_0_awaddr,
	       mmio_fabric$v_to_slaves_0_awlen,
	       mmio_fabric$v_to_slaves_0_awsize,
	       mmio_fabric$v_to_slaves_0_awburst,
	       mmio_fabric$v_to_slaves_0_awlock,
	       mmio_fabric$v_to_slaves_0_awcache,
	       mmio_fabric$v_to_slaves_0_awprot,
	       mmio_fabric$v_to_slaves_0_awqos,
	       mmio_fabric$v_to_slaves_0_awregion } ;
  assign axi4_widener_xactor_from_master_f_wr_addr$ENQ =
	     mmio_fabric$v_to_slaves_0_awvalid &&
	     axi4_widener_xactor_from_master_f_wr_addr$FULL_N ;
  assign axi4_widener_xactor_from_master_f_wr_addr$DEQ =
	     CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave ;
  assign axi4_widener_xactor_from_master_f_wr_addr$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_from_master_f_wr_data
  assign axi4_widener_xactor_from_master_f_wr_data$D_IN =
	     { mmio_fabric$v_to_slaves_0_wdata,
	       mmio_fabric$v_to_slaves_0_wstrb,
	       mmio_fabric$v_to_slaves_0_wlast } ;
  assign axi4_widener_xactor_from_master_f_wr_data$ENQ =
	     mmio_fabric$v_to_slaves_0_wvalid &&
	     axi4_widener_xactor_from_master_f_wr_data$FULL_N ;
  assign axi4_widener_xactor_from_master_f_wr_data$DEQ =
	     CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave ;
  assign axi4_widener_xactor_from_master_f_wr_data$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_from_master_f_wr_resp
  assign axi4_widener_xactor_from_master_f_wr_resp$D_IN =
	     axi4_widener_xactor_to_slave_f_wr_resp$D_OUT ;
  assign axi4_widener_xactor_from_master_f_wr_resp$ENQ =
	     CAN_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master ;
  assign axi4_widener_xactor_from_master_f_wr_resp$DEQ =
	     mmio_fabric$v_to_slaves_0_bready &&
	     axi4_widener_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign axi4_widener_xactor_from_master_f_wr_resp$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_to_slave_f_rd_addr
  assign axi4_widener_xactor_to_slave_f_rd_addr$D_IN =
	     axi4_widener_xactor_from_master_f_rd_addr$D_OUT ;
  assign axi4_widener_xactor_to_slave_f_rd_addr$ENQ =
	     CAN_FIRE_RL_axi4_widener_rl_rd_xaction_master_to_slave ;
  assign axi4_widener_xactor_to_slave_f_rd_addr$DEQ =
	     axi4_widener_xactor_to_slave_f_rd_addr$EMPTY_N &&
	     ddr_fabric$v_from_masters_2_arready ;
  assign axi4_widener_xactor_to_slave_f_rd_addr$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_to_slave_f_rd_data
  assign axi4_widener_xactor_to_slave_f_rd_data$D_IN =
	     { ddr_fabric$v_from_masters_2_rid,
	       ddr_fabric$v_from_masters_2_rdata,
	       ddr_fabric$v_from_masters_2_rresp,
	       ddr_fabric$v_from_masters_2_rlast } ;
  assign axi4_widener_xactor_to_slave_f_rd_data$ENQ =
	     ddr_fabric$v_from_masters_2_rvalid &&
	     axi4_widener_xactor_to_slave_f_rd_data$FULL_N ;
  assign axi4_widener_xactor_to_slave_f_rd_data$DEQ =
	     CAN_FIRE_RL_axi4_widener_rl_rd_resp_slave_to_master ;
  assign axi4_widener_xactor_to_slave_f_rd_data$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_to_slave_f_wr_addr
  assign axi4_widener_xactor_to_slave_f_wr_addr$D_IN =
	     axi4_widener_xactor_from_master_f_wr_addr$D_OUT ;
  assign axi4_widener_xactor_to_slave_f_wr_addr$ENQ =
	     CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave ;
  assign axi4_widener_xactor_to_slave_f_wr_addr$DEQ =
	     axi4_widener_xactor_to_slave_f_wr_addr$EMPTY_N &&
	     ddr_fabric$v_from_masters_2_awready ;
  assign axi4_widener_xactor_to_slave_f_wr_addr$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_to_slave_f_wr_data
  assign axi4_widener_xactor_to_slave_f_wr_data$D_IN =
	     { s_wrd_wdata__h11064,
	       s_wrd_wstrb__h11065,
	       axi4_widener_xactor_from_master_f_wr_data$D_OUT[0] } ;
  assign axi4_widener_xactor_to_slave_f_wr_data$ENQ =
	     CAN_FIRE_RL_axi4_widener_rl_wr_xaction_master_to_slave ;
  assign axi4_widener_xactor_to_slave_f_wr_data$DEQ =
	     axi4_widener_xactor_to_slave_f_wr_data$EMPTY_N &&
	     ddr_fabric$v_from_masters_2_wready ;
  assign axi4_widener_xactor_to_slave_f_wr_data$CLR = 1'b0 ;

  // submodule axi4_widener_xactor_to_slave_f_wr_resp
  assign axi4_widener_xactor_to_slave_f_wr_resp$D_IN =
	     { ddr_fabric$v_from_masters_2_bid,
	       ddr_fabric$v_from_masters_2_bresp } ;
  assign axi4_widener_xactor_to_slave_f_wr_resp$ENQ =
	     ddr_fabric$v_from_masters_2_bvalid &&
	     axi4_widener_xactor_to_slave_f_wr_resp$FULL_N ;
  assign axi4_widener_xactor_to_slave_f_wr_resp$DEQ =
	     CAN_FIRE_RL_axi4_widener_rl_wr_resp_slave_to_master ;
  assign axi4_widener_xactor_to_slave_f_wr_resp$CLR = 1'b0 ;

  // submodule ddr_fabric
  assign ddr_fabric$set_verbosity_verbosity = 4'h0 ;
  assign ddr_fabric$v_from_masters_0_araddr = awsteria_core$mem_M_araddr ;
  assign ddr_fabric$v_from_masters_0_arburst = awsteria_core$mem_M_arburst ;
  assign ddr_fabric$v_from_masters_0_arcache = awsteria_core$mem_M_arcache ;
  assign ddr_fabric$v_from_masters_0_arid = awsteria_core$mem_M_arid ;
  assign ddr_fabric$v_from_masters_0_arlen = awsteria_core$mem_M_arlen ;
  assign ddr_fabric$v_from_masters_0_arlock = awsteria_core$mem_M_arlock ;
  assign ddr_fabric$v_from_masters_0_arprot = awsteria_core$mem_M_arprot ;
  assign ddr_fabric$v_from_masters_0_arqos = awsteria_core$mem_M_arqos ;
  assign ddr_fabric$v_from_masters_0_arregion = awsteria_core$mem_M_arregion ;
  assign ddr_fabric$v_from_masters_0_arsize = awsteria_core$mem_M_arsize ;
  assign ddr_fabric$v_from_masters_0_arvalid = awsteria_core$mem_M_arvalid ;
  assign ddr_fabric$v_from_masters_0_awaddr = awsteria_core$mem_M_awaddr ;
  assign ddr_fabric$v_from_masters_0_awburst = awsteria_core$mem_M_awburst ;
  assign ddr_fabric$v_from_masters_0_awcache = awsteria_core$mem_M_awcache ;
  assign ddr_fabric$v_from_masters_0_awid = awsteria_core$mem_M_awid ;
  assign ddr_fabric$v_from_masters_0_awlen = awsteria_core$mem_M_awlen ;
  assign ddr_fabric$v_from_masters_0_awlock = awsteria_core$mem_M_awlock ;
  assign ddr_fabric$v_from_masters_0_awprot = awsteria_core$mem_M_awprot ;
  assign ddr_fabric$v_from_masters_0_awqos = awsteria_core$mem_M_awqos ;
  assign ddr_fabric$v_from_masters_0_awregion = awsteria_core$mem_M_awregion ;
  assign ddr_fabric$v_from_masters_0_awsize = awsteria_core$mem_M_awsize ;
  assign ddr_fabric$v_from_masters_0_awvalid = awsteria_core$mem_M_awvalid ;
  assign ddr_fabric$v_from_masters_0_bready = awsteria_core$mem_M_bready ;
  assign ddr_fabric$v_from_masters_0_rready = awsteria_core$mem_M_rready ;
  assign ddr_fabric$v_from_masters_0_wdata = awsteria_core$mem_M_wdata ;
  assign ddr_fabric$v_from_masters_0_wlast = awsteria_core$mem_M_wlast ;
  assign ddr_fabric$v_from_masters_0_wstrb = awsteria_core$mem_M_wstrb ;
  assign ddr_fabric$v_from_masters_0_wvalid = awsteria_core$mem_M_wvalid ;
  assign ddr_fabric$v_from_masters_1_araddr =
	     host_fabric$v_to_slaves_1_araddr ;
  assign ddr_fabric$v_from_masters_1_arburst =
	     host_fabric$v_to_slaves_1_arburst ;
  assign ddr_fabric$v_from_masters_1_arcache =
	     host_fabric$v_to_slaves_1_arcache ;
  assign ddr_fabric$v_from_masters_1_arid = host_fabric$v_to_slaves_1_arid ;
  assign ddr_fabric$v_from_masters_1_arlen = host_fabric$v_to_slaves_1_arlen ;
  assign ddr_fabric$v_from_masters_1_arlock =
	     host_fabric$v_to_slaves_1_arlock ;
  assign ddr_fabric$v_from_masters_1_arprot =
	     host_fabric$v_to_slaves_1_arprot ;
  assign ddr_fabric$v_from_masters_1_arqos = host_fabric$v_to_slaves_1_arqos ;
  assign ddr_fabric$v_from_masters_1_arregion =
	     host_fabric$v_to_slaves_1_arregion ;
  assign ddr_fabric$v_from_masters_1_arsize =
	     host_fabric$v_to_slaves_1_arsize ;
  assign ddr_fabric$v_from_masters_1_arvalid =
	     host_fabric$v_to_slaves_1_arvalid ;
  assign ddr_fabric$v_from_masters_1_awaddr =
	     host_fabric$v_to_slaves_1_awaddr ;
  assign ddr_fabric$v_from_masters_1_awburst =
	     host_fabric$v_to_slaves_1_awburst ;
  assign ddr_fabric$v_from_masters_1_awcache =
	     host_fabric$v_to_slaves_1_awcache ;
  assign ddr_fabric$v_from_masters_1_awid = host_fabric$v_to_slaves_1_awid ;
  assign ddr_fabric$v_from_masters_1_awlen = host_fabric$v_to_slaves_1_awlen ;
  assign ddr_fabric$v_from_masters_1_awlock =
	     host_fabric$v_to_slaves_1_awlock ;
  assign ddr_fabric$v_from_masters_1_awprot =
	     host_fabric$v_to_slaves_1_awprot ;
  assign ddr_fabric$v_from_masters_1_awqos = host_fabric$v_to_slaves_1_awqos ;
  assign ddr_fabric$v_from_masters_1_awregion =
	     host_fabric$v_to_slaves_1_awregion ;
  assign ddr_fabric$v_from_masters_1_awsize =
	     host_fabric$v_to_slaves_1_awsize ;
  assign ddr_fabric$v_from_masters_1_awvalid =
	     host_fabric$v_to_slaves_1_awvalid ;
  assign ddr_fabric$v_from_masters_1_bready =
	     host_fabric$v_to_slaves_1_bready ;
  assign ddr_fabric$v_from_masters_1_rready =
	     host_fabric$v_to_slaves_1_rready ;
  assign ddr_fabric$v_from_masters_1_wdata = host_fabric$v_to_slaves_1_wdata ;
  assign ddr_fabric$v_from_masters_1_wlast = host_fabric$v_to_slaves_1_wlast ;
  assign ddr_fabric$v_from_masters_1_wstrb = host_fabric$v_to_slaves_1_wstrb ;
  assign ddr_fabric$v_from_masters_1_wvalid =
	     host_fabric$v_to_slaves_1_wvalid ;
  assign ddr_fabric$v_from_masters_2_araddr =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[92:29] ;
  assign ddr_fabric$v_from_masters_2_arburst =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[17:16] ;
  assign ddr_fabric$v_from_masters_2_arcache =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[14:11] ;
  assign ddr_fabric$v_from_masters_2_arid =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[108:93] ;
  assign ddr_fabric$v_from_masters_2_arlen =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[28:21] ;
  assign ddr_fabric$v_from_masters_2_arlock =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[15] ;
  assign ddr_fabric$v_from_masters_2_arprot =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[10:8] ;
  assign ddr_fabric$v_from_masters_2_arqos =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[7:4] ;
  assign ddr_fabric$v_from_masters_2_arregion =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[3:0] ;
  assign ddr_fabric$v_from_masters_2_arsize =
	     axi4_widener_xactor_to_slave_f_rd_addr$D_OUT[20:18] ;
  assign ddr_fabric$v_from_masters_2_arvalid =
	     axi4_widener_xactor_to_slave_f_rd_addr$EMPTY_N ;
  assign ddr_fabric$v_from_masters_2_awaddr =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[92:29] ;
  assign ddr_fabric$v_from_masters_2_awburst =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[17:16] ;
  assign ddr_fabric$v_from_masters_2_awcache =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[14:11] ;
  assign ddr_fabric$v_from_masters_2_awid =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[108:93] ;
  assign ddr_fabric$v_from_masters_2_awlen =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[28:21] ;
  assign ddr_fabric$v_from_masters_2_awlock =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[15] ;
  assign ddr_fabric$v_from_masters_2_awprot =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[10:8] ;
  assign ddr_fabric$v_from_masters_2_awqos =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[7:4] ;
  assign ddr_fabric$v_from_masters_2_awregion =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[3:0] ;
  assign ddr_fabric$v_from_masters_2_awsize =
	     axi4_widener_xactor_to_slave_f_wr_addr$D_OUT[20:18] ;
  assign ddr_fabric$v_from_masters_2_awvalid =
	     axi4_widener_xactor_to_slave_f_wr_addr$EMPTY_N ;
  assign ddr_fabric$v_from_masters_2_bready =
	     axi4_widener_xactor_to_slave_f_wr_resp$FULL_N ;
  assign ddr_fabric$v_from_masters_2_rready =
	     axi4_widener_xactor_to_slave_f_rd_data$FULL_N ;
  assign ddr_fabric$v_from_masters_2_wdata =
	     axi4_widener_xactor_to_slave_f_wr_data$D_OUT[576:65] ;
  assign ddr_fabric$v_from_masters_2_wlast =
	     axi4_widener_xactor_to_slave_f_wr_data$D_OUT[0] ;
  assign ddr_fabric$v_from_masters_2_wstrb =
	     axi4_widener_xactor_to_slave_f_wr_data$D_OUT[64:1] ;
  assign ddr_fabric$v_from_masters_2_wvalid =
	     axi4_widener_xactor_to_slave_f_wr_data$EMPTY_N ;
  assign ddr_fabric$v_to_slaves_0_arready = ddr_A_M_arready ;
  assign ddr_fabric$v_to_slaves_0_awready = ddr_A_M_awready ;
  assign ddr_fabric$v_to_slaves_0_bid = ddr_A_M_bid ;
  assign ddr_fabric$v_to_slaves_0_bresp = ddr_A_M_bresp ;
  assign ddr_fabric$v_to_slaves_0_bvalid = ddr_A_M_bvalid ;
  assign ddr_fabric$v_to_slaves_0_rdata = ddr_A_M_rdata ;
  assign ddr_fabric$v_to_slaves_0_rid = ddr_A_M_rid ;
  assign ddr_fabric$v_to_slaves_0_rlast = ddr_A_M_rlast ;
  assign ddr_fabric$v_to_slaves_0_rresp = ddr_A_M_rresp ;
  assign ddr_fabric$v_to_slaves_0_rvalid = ddr_A_M_rvalid ;
  assign ddr_fabric$v_to_slaves_0_wready = ddr_A_M_wready ;
  assign ddr_fabric$v_to_slaves_1_arready = ddr_B_M_arready ;
  assign ddr_fabric$v_to_slaves_1_awready = ddr_B_M_awready ;
  assign ddr_fabric$v_to_slaves_1_bid = ddr_B_M_bid ;
  assign ddr_fabric$v_to_slaves_1_bresp = ddr_B_M_bresp ;
  assign ddr_fabric$v_to_slaves_1_bvalid = ddr_B_M_bvalid ;
  assign ddr_fabric$v_to_slaves_1_rdata = ddr_B_M_rdata ;
  assign ddr_fabric$v_to_slaves_1_rid = ddr_B_M_rid ;
  assign ddr_fabric$v_to_slaves_1_rlast = ddr_B_M_rlast ;
  assign ddr_fabric$v_to_slaves_1_rresp = ddr_B_M_rresp ;
  assign ddr_fabric$v_to_slaves_1_rvalid = ddr_B_M_rvalid ;
  assign ddr_fabric$v_to_slaves_1_wready = ddr_B_M_wready ;
  assign ddr_fabric$v_to_slaves_2_arready = ddr_C_M_arready ;
  assign ddr_fabric$v_to_slaves_2_awready = ddr_C_M_awready ;
  assign ddr_fabric$v_to_slaves_2_bid = ddr_C_M_bid ;
  assign ddr_fabric$v_to_slaves_2_bresp = ddr_C_M_bresp ;
  assign ddr_fabric$v_to_slaves_2_bvalid = ddr_C_M_bvalid ;
  assign ddr_fabric$v_to_slaves_2_rdata = ddr_C_M_rdata ;
  assign ddr_fabric$v_to_slaves_2_rid = ddr_C_M_rid ;
  assign ddr_fabric$v_to_slaves_2_rlast = ddr_C_M_rlast ;
  assign ddr_fabric$v_to_slaves_2_rresp = ddr_C_M_rresp ;
  assign ddr_fabric$v_to_slaves_2_rvalid = ddr_C_M_rvalid ;
  assign ddr_fabric$v_to_slaves_2_wready = ddr_C_M_wready ;
  assign ddr_fabric$v_to_slaves_3_arready = ddr_D_M_arready ;
  assign ddr_fabric$v_to_slaves_3_awready = ddr_D_M_awready ;
  assign ddr_fabric$v_to_slaves_3_bid = ddr_D_M_bid ;
  assign ddr_fabric$v_to_slaves_3_bresp = ddr_D_M_bresp ;
  assign ddr_fabric$v_to_slaves_3_bvalid = ddr_D_M_bvalid ;
  assign ddr_fabric$v_to_slaves_3_rdata = ddr_D_M_rdata ;
  assign ddr_fabric$v_to_slaves_3_rid = ddr_D_M_rid ;
  assign ddr_fabric$v_to_slaves_3_rlast = ddr_D_M_rlast ;
  assign ddr_fabric$v_to_slaves_3_rresp = ddr_D_M_rresp ;
  assign ddr_fabric$v_to_slaves_3_rvalid = ddr_D_M_rvalid ;
  assign ddr_fabric$v_to_slaves_3_wready = ddr_D_M_wready ;
  assign ddr_fabric$EN_reset = 1'b0 ;
  assign ddr_fabric$EN_set_verbosity = 1'b0 ;

  // submodule f_uart_to_console
  assign f_uart_to_console$D_IN = 32'h0 ;
  assign f_uart_to_console$ENQ = 1'b0 ;
  assign f_uart_to_console$DEQ = 1'b0 ;
  assign f_uart_to_console$CLR = 1'b0 ;

  // submodule host_fabric
  assign host_fabric$set_verbosity_verbosity = 4'h0 ;
  assign host_fabric$v_from_masters_0_araddr = host_AXI4_S_araddr ;
  assign host_fabric$v_from_masters_0_arburst = host_AXI4_S_arburst ;
  assign host_fabric$v_from_masters_0_arcache = host_AXI4_S_arcache ;
  assign host_fabric$v_from_masters_0_arid = host_AXI4_S_arid ;
  assign host_fabric$v_from_masters_0_arlen = host_AXI4_S_arlen ;
  assign host_fabric$v_from_masters_0_arlock = host_AXI4_S_arlock ;
  assign host_fabric$v_from_masters_0_arprot = host_AXI4_S_arprot ;
  assign host_fabric$v_from_masters_0_arqos = host_AXI4_S_arqos ;
  assign host_fabric$v_from_masters_0_arregion = host_AXI4_S_arregion ;
  assign host_fabric$v_from_masters_0_arsize = host_AXI4_S_arsize ;
  assign host_fabric$v_from_masters_0_arvalid = host_AXI4_S_arvalid ;
  assign host_fabric$v_from_masters_0_awaddr = host_AXI4_S_awaddr ;
  assign host_fabric$v_from_masters_0_awburst = host_AXI4_S_awburst ;
  assign host_fabric$v_from_masters_0_awcache = host_AXI4_S_awcache ;
  assign host_fabric$v_from_masters_0_awid = host_AXI4_S_awid ;
  assign host_fabric$v_from_masters_0_awlen = host_AXI4_S_awlen ;
  assign host_fabric$v_from_masters_0_awlock = host_AXI4_S_awlock ;
  assign host_fabric$v_from_masters_0_awprot = host_AXI4_S_awprot ;
  assign host_fabric$v_from_masters_0_awqos = host_AXI4_S_awqos ;
  assign host_fabric$v_from_masters_0_awregion = host_AXI4_S_awregion ;
  assign host_fabric$v_from_masters_0_awsize = host_AXI4_S_awsize ;
  assign host_fabric$v_from_masters_0_awvalid = host_AXI4_S_awvalid ;
  assign host_fabric$v_from_masters_0_bready = host_AXI4_S_bready ;
  assign host_fabric$v_from_masters_0_rready = host_AXI4_S_rready ;
  assign host_fabric$v_from_masters_0_wdata = host_AXI4_S_wdata ;
  assign host_fabric$v_from_masters_0_wlast = host_AXI4_S_wlast ;
  assign host_fabric$v_from_masters_0_wstrb = host_AXI4_S_wstrb ;
  assign host_fabric$v_from_masters_0_wvalid = host_AXI4_S_wvalid ;
  assign host_fabric$v_to_slaves_0_arready = awsteria_core$dma_S_arready ;
  assign host_fabric$v_to_slaves_0_awready = awsteria_core$dma_S_awready ;
  assign host_fabric$v_to_slaves_0_bid = awsteria_core$dma_S_bid ;
  assign host_fabric$v_to_slaves_0_bresp = awsteria_core$dma_S_bresp ;
  assign host_fabric$v_to_slaves_0_bvalid = awsteria_core$dma_S_bvalid ;
  assign host_fabric$v_to_slaves_0_rdata = awsteria_core$dma_S_rdata ;
  assign host_fabric$v_to_slaves_0_rid = awsteria_core$dma_S_rid ;
  assign host_fabric$v_to_slaves_0_rlast = awsteria_core$dma_S_rlast ;
  assign host_fabric$v_to_slaves_0_rresp = awsteria_core$dma_S_rresp ;
  assign host_fabric$v_to_slaves_0_rvalid = awsteria_core$dma_S_rvalid ;
  assign host_fabric$v_to_slaves_0_wready = awsteria_core$dma_S_wready ;
  assign host_fabric$v_to_slaves_1_arready =
	     ddr_fabric$v_from_masters_1_arready ;
  assign host_fabric$v_to_slaves_1_awready =
	     ddr_fabric$v_from_masters_1_awready ;
  assign host_fabric$v_to_slaves_1_bid = ddr_fabric$v_from_masters_1_bid ;
  assign host_fabric$v_to_slaves_1_bresp = ddr_fabric$v_from_masters_1_bresp ;
  assign host_fabric$v_to_slaves_1_bvalid =
	     ddr_fabric$v_from_masters_1_bvalid ;
  assign host_fabric$v_to_slaves_1_rdata = ddr_fabric$v_from_masters_1_rdata ;
  assign host_fabric$v_to_slaves_1_rid = ddr_fabric$v_from_masters_1_rid ;
  assign host_fabric$v_to_slaves_1_rlast = ddr_fabric$v_from_masters_1_rlast ;
  assign host_fabric$v_to_slaves_1_rresp = ddr_fabric$v_from_masters_1_rresp ;
  assign host_fabric$v_to_slaves_1_rvalid =
	     ddr_fabric$v_from_masters_1_rvalid ;
  assign host_fabric$v_to_slaves_1_wready =
	     ddr_fabric$v_from_masters_1_wready ;
  assign host_fabric$v_to_slaves_2_arready =
	     axi4_downsizer_xactor_from_master_f_rd_addr$FULL_N ;
  assign host_fabric$v_to_slaves_2_awready =
	     axi4_downsizer_xactor_from_master_f_wr_addr$FULL_N ;
  assign host_fabric$v_to_slaves_2_bid =
	     axi4_downsizer_xactor_from_master_f_wr_resp$D_OUT[17:2] ;
  assign host_fabric$v_to_slaves_2_bresp =
	     axi4_downsizer_xactor_from_master_f_wr_resp$D_OUT[1:0] ;
  assign host_fabric$v_to_slaves_2_bvalid =
	     axi4_downsizer_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign host_fabric$v_to_slaves_2_rdata =
	     axi4_downsizer_xactor_from_master_f_rd_data$D_OUT[514:3] ;
  assign host_fabric$v_to_slaves_2_rid =
	     axi4_downsizer_xactor_from_master_f_rd_data$D_OUT[530:515] ;
  assign host_fabric$v_to_slaves_2_rlast =
	     axi4_downsizer_xactor_from_master_f_rd_data$D_OUT[0] ;
  assign host_fabric$v_to_slaves_2_rresp =
	     axi4_downsizer_xactor_from_master_f_rd_data$D_OUT[2:1] ;
  assign host_fabric$v_to_slaves_2_rvalid =
	     axi4_downsizer_xactor_from_master_f_rd_data$EMPTY_N ;
  assign host_fabric$v_to_slaves_2_wready =
	     axi4_downsizer_xactor_from_master_f_wr_data$FULL_N ;
  assign host_fabric$EN_reset = 1'b0 ;
  assign host_fabric$EN_set_verbosity = 1'b0 ;

  // submodule mmio_axi4_deburster
  assign mmio_axi4_deburster$from_master_araddr =
	     awsteria_core$mmio_M_araddr ;
  assign mmio_axi4_deburster$from_master_arburst =
	     awsteria_core$mmio_M_arburst ;
  assign mmio_axi4_deburster$from_master_arcache =
	     awsteria_core$mmio_M_arcache ;
  assign mmio_axi4_deburster$from_master_arid = awsteria_core$mmio_M_arid ;
  assign mmio_axi4_deburster$from_master_arlen = awsteria_core$mmio_M_arlen ;
  assign mmio_axi4_deburster$from_master_arlock =
	     awsteria_core$mmio_M_arlock ;
  assign mmio_axi4_deburster$from_master_arprot =
	     awsteria_core$mmio_M_arprot ;
  assign mmio_axi4_deburster$from_master_arqos = awsteria_core$mmio_M_arqos ;
  assign mmio_axi4_deburster$from_master_arregion =
	     awsteria_core$mmio_M_arregion ;
  assign mmio_axi4_deburster$from_master_arsize =
	     awsteria_core$mmio_M_arsize ;
  assign mmio_axi4_deburster$from_master_arvalid =
	     awsteria_core$mmio_M_arvalid ;
  assign mmio_axi4_deburster$from_master_awaddr =
	     awsteria_core$mmio_M_awaddr ;
  assign mmio_axi4_deburster$from_master_awburst =
	     awsteria_core$mmio_M_awburst ;
  assign mmio_axi4_deburster$from_master_awcache =
	     awsteria_core$mmio_M_awcache ;
  assign mmio_axi4_deburster$from_master_awid = awsteria_core$mmio_M_awid ;
  assign mmio_axi4_deburster$from_master_awlen = awsteria_core$mmio_M_awlen ;
  assign mmio_axi4_deburster$from_master_awlock =
	     awsteria_core$mmio_M_awlock ;
  assign mmio_axi4_deburster$from_master_awprot =
	     awsteria_core$mmio_M_awprot ;
  assign mmio_axi4_deburster$from_master_awqos = awsteria_core$mmio_M_awqos ;
  assign mmio_axi4_deburster$from_master_awregion =
	     awsteria_core$mmio_M_awregion ;
  assign mmio_axi4_deburster$from_master_awsize =
	     awsteria_core$mmio_M_awsize ;
  assign mmio_axi4_deburster$from_master_awvalid =
	     awsteria_core$mmio_M_awvalid ;
  assign mmio_axi4_deburster$from_master_bready =
	     awsteria_core$mmio_M_bready ;
  assign mmio_axi4_deburster$from_master_rready =
	     awsteria_core$mmio_M_rready ;
  assign mmio_axi4_deburster$from_master_wdata = awsteria_core$mmio_M_wdata ;
  assign mmio_axi4_deburster$from_master_wlast = awsteria_core$mmio_M_wlast ;
  assign mmio_axi4_deburster$from_master_wstrb = awsteria_core$mmio_M_wstrb ;
  assign mmio_axi4_deburster$from_master_wvalid =
	     awsteria_core$mmio_M_wvalid ;
  assign mmio_axi4_deburster$to_slave_arready =
	     mmio_fabric$v_from_masters_0_arready ;
  assign mmio_axi4_deburster$to_slave_awready =
	     mmio_fabric$v_from_masters_0_awready ;
  assign mmio_axi4_deburster$to_slave_bid = mmio_fabric$v_from_masters_0_bid ;
  assign mmio_axi4_deburster$to_slave_bresp =
	     mmio_fabric$v_from_masters_0_bresp ;
  assign mmio_axi4_deburster$to_slave_bvalid =
	     mmio_fabric$v_from_masters_0_bvalid ;
  assign mmio_axi4_deburster$to_slave_rdata =
	     mmio_fabric$v_from_masters_0_rdata ;
  assign mmio_axi4_deburster$to_slave_rid = mmio_fabric$v_from_masters_0_rid ;
  assign mmio_axi4_deburster$to_slave_rlast =
	     mmio_fabric$v_from_masters_0_rlast ;
  assign mmio_axi4_deburster$to_slave_rresp =
	     mmio_fabric$v_from_masters_0_rresp ;
  assign mmio_axi4_deburster$to_slave_rvalid =
	     mmio_fabric$v_from_masters_0_rvalid ;
  assign mmio_axi4_deburster$to_slave_wready =
	     mmio_fabric$v_from_masters_0_wready ;
  assign mmio_axi4_deburster$EN_reset = 1'b0 ;

  // submodule mmio_fabric
  assign mmio_fabric$set_verbosity_verbosity = 4'h0 ;
  assign mmio_fabric$v_from_masters_0_araddr =
	     mmio_axi4_deburster$to_slave_araddr ;
  assign mmio_fabric$v_from_masters_0_arburst =
	     mmio_axi4_deburster$to_slave_arburst ;
  assign mmio_fabric$v_from_masters_0_arcache =
	     mmio_axi4_deburster$to_slave_arcache ;
  assign mmio_fabric$v_from_masters_0_arid =
	     mmio_axi4_deburster$to_slave_arid ;
  assign mmio_fabric$v_from_masters_0_arlen =
	     mmio_axi4_deburster$to_slave_arlen ;
  assign mmio_fabric$v_from_masters_0_arlock =
	     mmio_axi4_deburster$to_slave_arlock ;
  assign mmio_fabric$v_from_masters_0_arprot =
	     mmio_axi4_deburster$to_slave_arprot ;
  assign mmio_fabric$v_from_masters_0_arqos =
	     mmio_axi4_deburster$to_slave_arqos ;
  assign mmio_fabric$v_from_masters_0_arregion =
	     mmio_axi4_deburster$to_slave_arregion ;
  assign mmio_fabric$v_from_masters_0_arsize =
	     mmio_axi4_deburster$to_slave_arsize ;
  assign mmio_fabric$v_from_masters_0_arvalid =
	     mmio_axi4_deburster$to_slave_arvalid ;
  assign mmio_fabric$v_from_masters_0_awaddr =
	     mmio_axi4_deburster$to_slave_awaddr ;
  assign mmio_fabric$v_from_masters_0_awburst =
	     mmio_axi4_deburster$to_slave_awburst ;
  assign mmio_fabric$v_from_masters_0_awcache =
	     mmio_axi4_deburster$to_slave_awcache ;
  assign mmio_fabric$v_from_masters_0_awid =
	     mmio_axi4_deburster$to_slave_awid ;
  assign mmio_fabric$v_from_masters_0_awlen =
	     mmio_axi4_deburster$to_slave_awlen ;
  assign mmio_fabric$v_from_masters_0_awlock =
	     mmio_axi4_deburster$to_slave_awlock ;
  assign mmio_fabric$v_from_masters_0_awprot =
	     mmio_axi4_deburster$to_slave_awprot ;
  assign mmio_fabric$v_from_masters_0_awqos =
	     mmio_axi4_deburster$to_slave_awqos ;
  assign mmio_fabric$v_from_masters_0_awregion =
	     mmio_axi4_deburster$to_slave_awregion ;
  assign mmio_fabric$v_from_masters_0_awsize =
	     mmio_axi4_deburster$to_slave_awsize ;
  assign mmio_fabric$v_from_masters_0_awvalid =
	     mmio_axi4_deburster$to_slave_awvalid ;
  assign mmio_fabric$v_from_masters_0_bready =
	     mmio_axi4_deburster$to_slave_bready ;
  assign mmio_fabric$v_from_masters_0_rready =
	     mmio_axi4_deburster$to_slave_rready ;
  assign mmio_fabric$v_from_masters_0_wdata =
	     mmio_axi4_deburster$to_slave_wdata ;
  assign mmio_fabric$v_from_masters_0_wlast =
	     mmio_axi4_deburster$to_slave_wlast ;
  assign mmio_fabric$v_from_masters_0_wstrb =
	     mmio_axi4_deburster$to_slave_wstrb ;
  assign mmio_fabric$v_from_masters_0_wvalid =
	     mmio_axi4_deburster$to_slave_wvalid ;
  assign mmio_fabric$v_from_masters_1_araddr =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[92:29] ;
  assign mmio_fabric$v_from_masters_1_arburst =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[17:16] ;
  assign mmio_fabric$v_from_masters_1_arcache =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[14:11] ;
  assign mmio_fabric$v_from_masters_1_arid =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[108:93] ;
  assign mmio_fabric$v_from_masters_1_arlen =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[28:21] ;
  assign mmio_fabric$v_from_masters_1_arlock =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[15] ;
  assign mmio_fabric$v_from_masters_1_arprot =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[10:8] ;
  assign mmio_fabric$v_from_masters_1_arqos =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[7:4] ;
  assign mmio_fabric$v_from_masters_1_arregion =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[3:0] ;
  assign mmio_fabric$v_from_masters_1_arsize =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$D_OUT[20:18] ;
  assign mmio_fabric$v_from_masters_1_arvalid =
	     axi4_downsizer_xactor_to_slave_f_rd_addr$EMPTY_N ;
  assign mmio_fabric$v_from_masters_1_awaddr =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[92:29] ;
  assign mmio_fabric$v_from_masters_1_awburst =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[17:16] ;
  assign mmio_fabric$v_from_masters_1_awcache =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[14:11] ;
  assign mmio_fabric$v_from_masters_1_awid =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[108:93] ;
  assign mmio_fabric$v_from_masters_1_awlen =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[28:21] ;
  assign mmio_fabric$v_from_masters_1_awlock =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[15] ;
  assign mmio_fabric$v_from_masters_1_awprot =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[10:8] ;
  assign mmio_fabric$v_from_masters_1_awqos =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[7:4] ;
  assign mmio_fabric$v_from_masters_1_awregion =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[3:0] ;
  assign mmio_fabric$v_from_masters_1_awsize =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$D_OUT[20:18] ;
  assign mmio_fabric$v_from_masters_1_awvalid =
	     axi4_downsizer_xactor_to_slave_f_wr_addr$EMPTY_N ;
  assign mmio_fabric$v_from_masters_1_bready =
	     axi4_downsizer_xactor_to_slave_f_wr_resp$FULL_N ;
  assign mmio_fabric$v_from_masters_1_rready =
	     axi4_downsizer_xactor_to_slave_f_rd_data$FULL_N ;
  assign mmio_fabric$v_from_masters_1_wdata =
	     axi4_downsizer_xactor_to_slave_f_wr_data$D_OUT[72:9] ;
  assign mmio_fabric$v_from_masters_1_wlast =
	     axi4_downsizer_xactor_to_slave_f_wr_data$D_OUT[0] ;
  assign mmio_fabric$v_from_masters_1_wstrb =
	     axi4_downsizer_xactor_to_slave_f_wr_data$D_OUT[8:1] ;
  assign mmio_fabric$v_from_masters_1_wvalid =
	     axi4_downsizer_xactor_to_slave_f_wr_data$EMPTY_N ;
  assign mmio_fabric$v_to_slaves_0_arready =
	     axi4_widener_xactor_from_master_f_rd_addr$FULL_N ;
  assign mmio_fabric$v_to_slaves_0_awready =
	     axi4_widener_xactor_from_master_f_wr_addr$FULL_N ;
  assign mmio_fabric$v_to_slaves_0_bid =
	     axi4_widener_xactor_from_master_f_wr_resp$D_OUT[17:2] ;
  assign mmio_fabric$v_to_slaves_0_bresp =
	     axi4_widener_xactor_from_master_f_wr_resp$D_OUT[1:0] ;
  assign mmio_fabric$v_to_slaves_0_bvalid =
	     axi4_widener_xactor_from_master_f_wr_resp$EMPTY_N ;
  assign mmio_fabric$v_to_slaves_0_rdata =
	     axi4_widener_xactor_from_master_f_rd_data$D_OUT[66:3] ;
  assign mmio_fabric$v_to_slaves_0_rid =
	     axi4_widener_xactor_from_master_f_rd_data$D_OUT[82:67] ;
  assign mmio_fabric$v_to_slaves_0_rlast =
	     axi4_widener_xactor_from_master_f_rd_data$D_OUT[0] ;
  assign mmio_fabric$v_to_slaves_0_rresp =
	     axi4_widener_xactor_from_master_f_rd_data$D_OUT[2:1] ;
  assign mmio_fabric$v_to_slaves_0_rvalid =
	     axi4_widener_xactor_from_master_f_rd_data$EMPTY_N ;
  assign mmio_fabric$v_to_slaves_0_wready =
	     axi4_widener_xactor_from_master_f_wr_data$FULL_N ;
  assign mmio_fabric$v_to_slaves_1_arready = uart0$slave_arready ;
  assign mmio_fabric$v_to_slaves_1_awready = uart0$slave_awready ;
  assign mmio_fabric$v_to_slaves_1_bid = uart0$slave_bid ;
  assign mmio_fabric$v_to_slaves_1_bresp = uart0$slave_bresp ;
  assign mmio_fabric$v_to_slaves_1_bvalid = uart0$slave_bvalid ;
  assign mmio_fabric$v_to_slaves_1_rdata = uart0$slave_rdata ;
  assign mmio_fabric$v_to_slaves_1_rid = uart0$slave_rid ;
  assign mmio_fabric$v_to_slaves_1_rlast = uart0$slave_rlast ;
  assign mmio_fabric$v_to_slaves_1_rresp = uart0$slave_rresp ;
  assign mmio_fabric$v_to_slaves_1_rvalid = uart0$slave_rvalid ;
  assign mmio_fabric$v_to_slaves_1_wready = uart0$slave_wready ;
  assign mmio_fabric$v_to_slaves_2_arready = mmio_to_host$axi4_S_arready ;
  assign mmio_fabric$v_to_slaves_2_awready = mmio_to_host$axi4_S_awready ;
  assign mmio_fabric$v_to_slaves_2_bid = mmio_to_host$axi4_S_bid ;
  assign mmio_fabric$v_to_slaves_2_bresp = mmio_to_host$axi4_S_bresp ;
  assign mmio_fabric$v_to_slaves_2_bvalid = mmio_to_host$axi4_S_bvalid ;
  assign mmio_fabric$v_to_slaves_2_rdata = mmio_to_host$axi4_S_rdata ;
  assign mmio_fabric$v_to_slaves_2_rid = mmio_to_host$axi4_S_rid ;
  assign mmio_fabric$v_to_slaves_2_rlast = mmio_to_host$axi4_S_rlast ;
  assign mmio_fabric$v_to_slaves_2_rresp = mmio_to_host$axi4_S_rresp ;
  assign mmio_fabric$v_to_slaves_2_rvalid = mmio_to_host$axi4_S_rvalid ;
  assign mmio_fabric$v_to_slaves_2_wready = mmio_to_host$axi4_S_wready ;
  assign mmio_fabric$v_to_slaves_3_arready = msi$slave_arready ;
  assign mmio_fabric$v_to_slaves_3_awready = msi$slave_awready ;
  assign mmio_fabric$v_to_slaves_3_bid = msi$slave_bid ;
  assign mmio_fabric$v_to_slaves_3_bresp = msi$slave_bresp ;
  assign mmio_fabric$v_to_slaves_3_bvalid = msi$slave_bvalid ;
  assign mmio_fabric$v_to_slaves_3_rdata = msi$slave_rdata ;
  assign mmio_fabric$v_to_slaves_3_rid = msi$slave_rid ;
  assign mmio_fabric$v_to_slaves_3_rlast = msi$slave_rlast ;
  assign mmio_fabric$v_to_slaves_3_rresp = msi$slave_rresp ;
  assign mmio_fabric$v_to_slaves_3_rvalid = msi$slave_rvalid ;
  assign mmio_fabric$v_to_slaves_3_wready = msi$slave_wready ;
  assign mmio_fabric$EN_reset = CAN_FIRE_RL_rl_initialize ;
  assign mmio_fabric$EN_set_verbosity = 1'b0 ;

  // submodule mmio_to_host
  assign mmio_to_host$axi4_S_araddr = mmio_fabric$v_to_slaves_2_araddr ;
  assign mmio_to_host$axi4_S_arburst = mmio_fabric$v_to_slaves_2_arburst ;
  assign mmio_to_host$axi4_S_arcache = mmio_fabric$v_to_slaves_2_arcache ;
  assign mmio_to_host$axi4_S_arid = mmio_fabric$v_to_slaves_2_arid ;
  assign mmio_to_host$axi4_S_arlen = mmio_fabric$v_to_slaves_2_arlen ;
  assign mmio_to_host$axi4_S_arlock = mmio_fabric$v_to_slaves_2_arlock ;
  assign mmio_to_host$axi4_S_arprot = mmio_fabric$v_to_slaves_2_arprot ;
  assign mmio_to_host$axi4_S_arqos = mmio_fabric$v_to_slaves_2_arqos ;
  assign mmio_to_host$axi4_S_arregion = mmio_fabric$v_to_slaves_2_arregion ;
  assign mmio_to_host$axi4_S_arsize = mmio_fabric$v_to_slaves_2_arsize ;
  assign mmio_to_host$axi4_S_arvalid = mmio_fabric$v_to_slaves_2_arvalid ;
  assign mmio_to_host$axi4_S_awaddr = mmio_fabric$v_to_slaves_2_awaddr ;
  assign mmio_to_host$axi4_S_awburst = mmio_fabric$v_to_slaves_2_awburst ;
  assign mmio_to_host$axi4_S_awcache = mmio_fabric$v_to_slaves_2_awcache ;
  assign mmio_to_host$axi4_S_awid = mmio_fabric$v_to_slaves_2_awid ;
  assign mmio_to_host$axi4_S_awlen = mmio_fabric$v_to_slaves_2_awlen ;
  assign mmio_to_host$axi4_S_awlock = mmio_fabric$v_to_slaves_2_awlock ;
  assign mmio_to_host$axi4_S_awprot = mmio_fabric$v_to_slaves_2_awprot ;
  assign mmio_to_host$axi4_S_awqos = mmio_fabric$v_to_slaves_2_awqos ;
  assign mmio_to_host$axi4_S_awregion = mmio_fabric$v_to_slaves_2_awregion ;
  assign mmio_to_host$axi4_S_awsize = mmio_fabric$v_to_slaves_2_awsize ;
  assign mmio_to_host$axi4_S_awvalid = mmio_fabric$v_to_slaves_2_awvalid ;
  assign mmio_to_host$axi4_S_bready = mmio_fabric$v_to_slaves_2_bready ;
  assign mmio_to_host$axi4_S_rready = mmio_fabric$v_to_slaves_2_rready ;
  assign mmio_to_host$axi4_S_wdata = mmio_fabric$v_to_slaves_2_wdata ;
  assign mmio_to_host$axi4_S_wlast = mmio_fabric$v_to_slaves_2_wlast ;
  assign mmio_to_host$axi4_S_wstrb = mmio_fabric$v_to_slaves_2_wstrb ;
  assign mmio_to_host$axi4_S_wvalid = mmio_fabric$v_to_slaves_2_wvalid ;
  assign mmio_to_host$from_host_put = axi4L_channels$v_from_host_2_first ;
  assign mmio_to_host$EN_to_host_get = CAN_FIRE_RL_rl_hw_to_host_mem_req ;
  assign mmio_to_host$EN_from_host_put = CAN_FIRE_RL_rl_host_to_hw_mem_rsp ;

  // submodule msi
  assign msi$set_addr_map_addr_base = 64'h0000000060200000 ;
  assign msi$set_addr_map_addr_lim = 64'd1612709892 ;
  assign msi$slave_araddr = mmio_fabric$v_to_slaves_3_araddr ;
  assign msi$slave_arburst = mmio_fabric$v_to_slaves_3_arburst ;
  assign msi$slave_arcache = mmio_fabric$v_to_slaves_3_arcache ;
  assign msi$slave_arid = mmio_fabric$v_to_slaves_3_arid ;
  assign msi$slave_arlen = mmio_fabric$v_to_slaves_3_arlen ;
  assign msi$slave_arlock = mmio_fabric$v_to_slaves_3_arlock ;
  assign msi$slave_arprot = mmio_fabric$v_to_slaves_3_arprot ;
  assign msi$slave_arqos = mmio_fabric$v_to_slaves_3_arqos ;
  assign msi$slave_arregion = mmio_fabric$v_to_slaves_3_arregion ;
  assign msi$slave_arsize = mmio_fabric$v_to_slaves_3_arsize ;
  assign msi$slave_arvalid = mmio_fabric$v_to_slaves_3_arvalid ;
  assign msi$slave_awaddr = mmio_fabric$v_to_slaves_3_awaddr ;
  assign msi$slave_awburst = mmio_fabric$v_to_slaves_3_awburst ;
  assign msi$slave_awcache = mmio_fabric$v_to_slaves_3_awcache ;
  assign msi$slave_awid = mmio_fabric$v_to_slaves_3_awid ;
  assign msi$slave_awlen = mmio_fabric$v_to_slaves_3_awlen ;
  assign msi$slave_awlock = mmio_fabric$v_to_slaves_3_awlock ;
  assign msi$slave_awprot = mmio_fabric$v_to_slaves_3_awprot ;
  assign msi$slave_awqos = mmio_fabric$v_to_slaves_3_awqos ;
  assign msi$slave_awregion = mmio_fabric$v_to_slaves_3_awregion ;
  assign msi$slave_awsize = mmio_fabric$v_to_slaves_3_awsize ;
  assign msi$slave_awvalid = mmio_fabric$v_to_slaves_3_awvalid ;
  assign msi$slave_bready = mmio_fabric$v_to_slaves_3_bready ;
  assign msi$slave_rready = mmio_fabric$v_to_slaves_3_rready ;
  assign msi$slave_wdata = mmio_fabric$v_to_slaves_3_wdata ;
  assign msi$slave_wlast = mmio_fabric$v_to_slaves_3_wlast ;
  assign msi$slave_wstrb = mmio_fabric$v_to_slaves_3_wstrb ;
  assign msi$slave_wvalid = mmio_fabric$v_to_slaves_3_wvalid ;
  assign msi$EN_set_addr_map = CAN_FIRE_RL_rl_initialize ;

  // submodule uart0
  assign uart0$put_from_console_put =
	     axi4L_channels$v_from_host_1_first[7:0] ;
  assign uart0$set_addr_map_addr_base = 64'h0000000060100000 ;
  assign uart0$set_addr_map_addr_lim = 64'd1611665408 ;
  assign uart0$slave_araddr = mmio_fabric$v_to_slaves_1_araddr ;
  assign uart0$slave_arburst = mmio_fabric$v_to_slaves_1_arburst ;
  assign uart0$slave_arcache = mmio_fabric$v_to_slaves_1_arcache ;
  assign uart0$slave_arid = mmio_fabric$v_to_slaves_1_arid ;
  assign uart0$slave_arlen = mmio_fabric$v_to_slaves_1_arlen ;
  assign uart0$slave_arlock = mmio_fabric$v_to_slaves_1_arlock ;
  assign uart0$slave_arprot = mmio_fabric$v_to_slaves_1_arprot ;
  assign uart0$slave_arqos = mmio_fabric$v_to_slaves_1_arqos ;
  assign uart0$slave_arregion = mmio_fabric$v_to_slaves_1_arregion ;
  assign uart0$slave_arsize = mmio_fabric$v_to_slaves_1_arsize ;
  assign uart0$slave_arvalid = mmio_fabric$v_to_slaves_1_arvalid ;
  assign uart0$slave_awaddr = mmio_fabric$v_to_slaves_1_awaddr ;
  assign uart0$slave_awburst = mmio_fabric$v_to_slaves_1_awburst ;
  assign uart0$slave_awcache = mmio_fabric$v_to_slaves_1_awcache ;
  assign uart0$slave_awid = mmio_fabric$v_to_slaves_1_awid ;
  assign uart0$slave_awlen = mmio_fabric$v_to_slaves_1_awlen ;
  assign uart0$slave_awlock = mmio_fabric$v_to_slaves_1_awlock ;
  assign uart0$slave_awprot = mmio_fabric$v_to_slaves_1_awprot ;
  assign uart0$slave_awqos = mmio_fabric$v_to_slaves_1_awqos ;
  assign uart0$slave_awregion = mmio_fabric$v_to_slaves_1_awregion ;
  assign uart0$slave_awsize = mmio_fabric$v_to_slaves_1_awsize ;
  assign uart0$slave_awvalid = mmio_fabric$v_to_slaves_1_awvalid ;
  assign uart0$slave_bready = mmio_fabric$v_to_slaves_1_bready ;
  assign uart0$slave_rready = mmio_fabric$v_to_slaves_1_rready ;
  assign uart0$slave_wdata = mmio_fabric$v_to_slaves_1_wdata ;
  assign uart0$slave_wlast = mmio_fabric$v_to_slaves_1_wlast ;
  assign uart0$slave_wstrb = mmio_fabric$v_to_slaves_1_wstrb ;
  assign uart0$slave_wvalid = mmio_fabric$v_to_slaves_1_wvalid ;
  assign uart0$EN_server_reset_request_put = CAN_FIRE_RL_rl_initialize ;
  assign uart0$EN_server_reset_response_get = CAN_FIRE_RL_rl_init_complete ;
  assign uart0$EN_set_addr_map = CAN_FIRE_RL_rl_initialize ;
  assign uart0$EN_get_to_console_get = CAN_FIRE_RL_rl_UART_to_console ;
  assign uart0$EN_put_from_console_put = CAN_FIRE_RL_rl_console_to_UART ;

  // remaining internal signals
  assign IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d67 =
	     (stb__h6331[7:0] == 8'd0 ||
	      axi4_downsizer_xactor_to_slave_f_wr_addr$FULL_N &&
	      axi4_downsizer_xactor_to_slave_f_wr_data$FULL_N) &&
	     (stb__h6331[63:8] != 56'd0 ||
	      axi4_downsizer_xactor_from_master_f_wr_data$EMPTY_N) ;
  assign IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d91 =
	     (((axi4_downsizer_rg_wr_state == 2'd0) ?
		 2'd1 :
		 axi4_downsizer_rg_wr_state) ==
	      2'd1) ?
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[0] :
	       axi4_downsizer_rg_last ;
  assign IF_axi4_downsizer_ff_wrRsp_first__13_BIT_0_14__ETC___d138 =
	     axi4_downsizer_ff_wrRsp$D_OUT[0] ?
	       y_avValue_fst_bid__h7710 :
	       axi4_downsizer_rg_wrr[17:2] ;
  assign IF_axi4_downsizer_rg_req_beat_0_EQ_7_66_THEN_a_ETC___d169 =
	     req_burst__h8231 ==
	     axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[28:21] ;
  assign IF_rg_uart_buf_BIT_31_THEN_0_ELSE_rg_uart_buf__q2 =
	     rg_uart_buf[31] ? 32'd0 : rg_uart_buf ;
  assign NOT_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THE_ETC___d68 =
	     (((axi4_downsizer_rg_wr_state == 2'd0) ?
		 2'd1 :
		 axi4_downsizer_rg_wr_state) !=
	      2'd1 ||
	      axi4_downsizer_xactor_from_master_f_wr_data$EMPTY_N) &&
	     IF_IF_axi4_downsizer_rg_wr_state_0_EQ_0_1_THEN_ETC___d67 ;
  assign _1_PLUS_y946__q1 = 12'd1 + y__h8946 ;
  assign _theResult_____2__h8807 =
	     (axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[2:1] == 2'b0) ?
	       x1_avValue_fst__h8800 :
	       axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[2:1] ;
  assign addr___1__h6460 =
	     { axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[92:35],
	       6'd0 } ;
  assign addr__h6319 =
	     (axi4_downsizer_rg_wr_state == 2'd0) ?
	       addr___1__h6460 :
	       axi4_downsizer_rg_addr ;
  assign axi4_downsizer_rg_req_beat_0_EQ_0_1_AND_axi4_d_ETC___d25 =
	     axi4_downsizer_rg_req_beat == 4'd0 &&
	     axi4_downsizer_rg_req_burst == 8'd255 &&
	     axi4_downsizer_xactor_from_master_f_wr_addr_fi_ETC___d17 &&
	     axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[28:21] ==
	     8'd0 &&
	     axi4_downsizer_rg_wr_state != 2'd3 ;
  assign axi4_downsizer_rg_req_beat_0_EQ_0_1_AND_axi4_d_ETC___d75 =
	     axi4_downsizer_rg_req_beat == 4'd0 &&
	     axi4_downsizer_rg_req_burst == 8'd255 &&
	     (!axi4_downsizer_xactor_from_master_f_wr_addr_fi_ETC___d17 ||
	      axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[28:21] !=
	      8'd0) &&
	     axi4_downsizer_rg_wr_state != 2'd3 ;
  assign axi4_downsizer_xactor_from_master_f_wr_addr_fi_ETC___d17 =
	     axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[20:18] <=
	     3'd3 ;
  assign dta__h6315 = { 64'd0, axi4_downsizer_wrBuffer } ;
  assign dta__h6329 =
	     (((axi4_downsizer_rg_wr_state == 2'd0) ?
		 2'd1 :
		 axi4_downsizer_rg_wr_state) ==
	      2'd1) ?
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[576:65] :
	       dta__h6315 ;
  assign m_rdd___1_rdata__h8873 =
	     { axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[66:3],
	       x1_avValue_snd_fst__h8820[511:64] } ;
  assign req_burst___1__h8253 = axi4_downsizer_rg_req_burst + 8'd1 ;
  assign req_burst__h8231 =
	     (axi4_downsizer_rg_req_beat == 4'd7) ?
	       req_burst___1__h8253 :
	       axi4_downsizer_rg_req_burst ;
  assign rsp_beat__h8808 = x1_avValue_snd_snd_fst__h8825 + 4'd1 ;
  assign s_data__h11069 =
	     { 448'd0,
	       axi4_widener_xactor_from_master_f_wr_data$D_OUT[72:9] } ;
  assign s_strb__h11071 =
	     { 56'd0, axi4_widener_xactor_from_master_f_wr_data$D_OUT[8:1] } ;
  assign s_wrd_wdata__h11064 =
	     s_data__h11069 <<
	     { axi4_widener_xactor_from_master_f_wr_addr$D_OUT[34:32],
	       6'd0 } ;
  assign s_wrd_wstrb__h11065 =
	     s_strb__h11071 <<
	     { axi4_widener_xactor_from_master_f_wr_addr$D_OUT[34:32],
	       3'd0 } ;
  assign stb__h6316 = { 8'd0, axi4_downsizer_wrStbBuff } ;
  assign stb__h6331 =
	     (((axi4_downsizer_rg_wr_state == 2'd0) ?
		 2'd1 :
		 axi4_downsizer_rg_wr_state) ==
	      2'd1) ?
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[64:1] :
	       stb__h6316 ;
  assign v__h7978 =
	     (axi4_downsizer_rg_req_beat == 4'd0 &&
	      axi4_downsizer_rg_req_burst == 8'd255) ?
	       v__h7993 :
	       axi4_downsizer_rg_req_addr ;
  assign v__h7993 =
	     { axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[92:35],
	       6'd0 } ;
  assign value__h7041 = (stb__h6331[7:0] == 8'd0) ? 3'd0 : 3'b011 ;
  assign value__h7052 =
	     (stb__h6331[7:0] == 8'd0) ?
	       4'd0 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[14:11] ;
  assign value__h7056 =
	     (stb__h6331[7:0] == 8'd0) ?
	       3'd0 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[10:8] ;
  assign value__h7060 =
	     (stb__h6331[7:0] == 8'd0) ?
	       4'd0 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[7:4] ;
  assign value__h7064 =
	     (stb__h6331[7:0] == 8'd0) ?
	       4'd0 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[3:0] ;
  assign x1_avValue_fst__h8800 =
	     (axi4_downsizer_rg_tot_beats == 12'd0) ?
	       2'b0 :
	       axi4_downsizer_rg_resp ;
  assign x1_avValue_fst_awaddr__h7022 =
	     (stb__h6331[7:0] == 8'd0) ? 64'd0 : addr__h6319 ;
  assign x1_avValue_fst_awburst__h7025 =
	     (stb__h6331[7:0] == 8'd0) ?
	       2'd0 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[17:16] ;
  assign x1_avValue_fst_awid__h7021 =
	     (stb__h6331[7:0] == 8'd0) ?
	       16'd0 :
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[108:93] ;
  assign x1_avValue_fst_awlock__h7026 =
	     stb__h6331[7:0] != 8'd0 &&
	     axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[15] ;
  assign x1_avValue_fst_bresp__h7714 =
	     axi4_downsizer_ff_wrRsp$D_OUT[0] ?
	       y_avValue_fst_bresp__h7711 :
	       axi4_downsizer_rg_wrr[1:0] ;
  assign x1_avValue_snd_fst__h8820 =
	     (axi4_downsizer_rg_tot_beats == 12'd0) ?
	       512'd0 :
	       axi4_downsizer_rg_buffer ;
  assign x1_avValue_snd_fst_wdata__h7116 =
	     (stb__h6331[7:0] == 8'd0) ? 64'd0 : dta__h6329[63:0] ;
  assign x1_avValue_snd_rdata__h9165 =
	     (x1_avValue_snd_snd_fst__h8825 == 4'd7) ?
	       m_rdd___1_rdata__h8873 :
	       512'd0 ;
  assign x1_avValue_snd_rid__h9164 =
	     (x1_avValue_snd_snd_fst__h8825 == 4'd7) ?
	       axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[82:67] :
	       16'd0 ;
  assign x1_avValue_snd_rresp__h9166 =
	     (x1_avValue_snd_snd_fst__h8825 == 4'd7) ?
	       _theResult_____2__h8807 :
	       2'd0 ;
  assign x1_avValue_snd_snd_fst__h8825 =
	     (axi4_downsizer_rg_tot_beats == 12'd0) ?
	       y_avValue_snd_snd_fst__h8822 :
	       axi4_downsizer_rg_rsp_beat ;
  assign x1_avValue_snd_snd_snd__h8826 =
	     (axi4_downsizer_rg_tot_beats == 12'd0) ?
	       y_avValue_snd_snd_snd__h8823 :
	       axi4_downsizer_rg_tot_beats ;
  assign x__h11578 =
	     axi4_widener_xactor_to_slave_f_rd_data$D_OUT[514:3] >>
	     { axi4_widener_f_araddrs$D_OUT[5:3], 6'd0 } ;
  assign x__h5968 =
	     axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[576:65] >>
	     { axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[34:32],
	       6'd0 } ;
  assign x__h6030 =
	     axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[64:1] >>
	     { axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[34:32],
	       3'd0 } ;
  assign x__h8938 = { _1_PLUS_y946__q1[8:0], 3'd0 } ;
  assign y__h8939 = { 9'd0, axi4_downsizer_ff_len$D_OUT[10:8] } ;
  assign y__h8946 = { 4'd0, axi4_downsizer_ff_len$D_OUT[7:0] } ;
  assign y_avValue_fst_bid__h7710 =
	     (axi4_downsizer_rg_wrr[1:0] == 2'b0) ?
	       axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT[17:2] :
	       axi4_downsizer_rg_wrr[17:2] ;
  assign y_avValue_fst_bresp__h7711 =
	     (axi4_downsizer_rg_wrr[1:0] == 2'b0) ?
	       axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT[1:0] :
	       axi4_downsizer_rg_wrr[1:0] ;
  assign y_avValue_snd_snd_fst__h8822 =
	     { 1'd0, axi4_downsizer_ff_len$D_OUT[10:8] } ;
  assign y_avValue_snd_snd_snd__h8823 = x__h8938 - y__h8939 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        axi4_downsizer_rg_rd_rsp_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
	axi4_downsizer_rg_req_addr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	axi4_downsizer_rg_req_beat <= `BSV_ASSIGNMENT_DELAY 4'd0;
	axi4_downsizer_rg_req_burst <= `BSV_ASSIGNMENT_DELAY 8'd255;
	axi4_downsizer_rg_resp <= `BSV_ASSIGNMENT_DELAY 2'b0;
	axi4_downsizer_rg_rsp_beat <= `BSV_ASSIGNMENT_DELAY 4'd0;
	axi4_downsizer_rg_tot_beats <= `BSV_ASSIGNMENT_DELAY 12'd0;
	axi4_downsizer_rg_wr_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
	axi4_downsizer_rg_wrr <= `BSV_ASSIGNMENT_DELAY 18'd0;
	axi4_downsizer_wrLen <= `BSV_ASSIGNMENT_DELAY 8'd0;
	rg_env_ready <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_init_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
	rg_state_dm <= `BSV_ASSIGNMENT_DELAY 2'd0;
	rg_uart_buf <= `BSV_ASSIGNMENT_DELAY 32'd0;
	rg_uart_timeout <= `BSV_ASSIGNMENT_DELAY 16'd0;
      end
    else
      begin
        if (axi4_downsizer_rg_rd_rsp_state$EN)
	  axi4_downsizer_rg_rd_rsp_state <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_rd_rsp_state$D_IN;
	if (axi4_downsizer_rg_req_addr$EN)
	  axi4_downsizer_rg_req_addr <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_req_addr$D_IN;
	if (axi4_downsizer_rg_req_beat$EN)
	  axi4_downsizer_rg_req_beat <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_req_beat$D_IN;
	if (axi4_downsizer_rg_req_burst$EN)
	  axi4_downsizer_rg_req_burst <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_req_burst$D_IN;
	if (axi4_downsizer_rg_resp$EN)
	  axi4_downsizer_rg_resp <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_resp$D_IN;
	if (axi4_downsizer_rg_rsp_beat$EN)
	  axi4_downsizer_rg_rsp_beat <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_rsp_beat$D_IN;
	if (axi4_downsizer_rg_tot_beats$EN)
	  axi4_downsizer_rg_tot_beats <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_tot_beats$D_IN;
	if (axi4_downsizer_rg_wr_state$EN)
	  axi4_downsizer_rg_wr_state <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_wr_state$D_IN;
	if (axi4_downsizer_rg_wrr$EN)
	  axi4_downsizer_rg_wrr <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_rg_wrr$D_IN;
	if (axi4_downsizer_wrLen$EN)
	  axi4_downsizer_wrLen <= `BSV_ASSIGNMENT_DELAY
	      axi4_downsizer_wrLen$D_IN;
	if (rg_env_ready$EN)
	  rg_env_ready <= `BSV_ASSIGNMENT_DELAY rg_env_ready$D_IN;
	if (rg_init_state$EN)
	  rg_init_state <= `BSV_ASSIGNMENT_DELAY rg_init_state$D_IN;
	if (rg_state_dm$EN)
	  rg_state_dm <= `BSV_ASSIGNMENT_DELAY rg_state_dm$D_IN;
	if (rg_uart_buf$EN)
	  rg_uart_buf <= `BSV_ASSIGNMENT_DELAY rg_uart_buf$D_IN;
	if (rg_uart_timeout$EN)
	  rg_uart_timeout <= `BSV_ASSIGNMENT_DELAY rg_uart_timeout$D_IN;
      end
    if (axi4_downsizer_rg_addr$EN)
      axi4_downsizer_rg_addr <= `BSV_ASSIGNMENT_DELAY
	  axi4_downsizer_rg_addr$D_IN;
    if (axi4_downsizer_rg_buffer$EN)
      axi4_downsizer_rg_buffer <= `BSV_ASSIGNMENT_DELAY
	  axi4_downsizer_rg_buffer$D_IN;
    if (axi4_downsizer_rg_last$EN)
      axi4_downsizer_rg_last <= `BSV_ASSIGNMENT_DELAY
	  axi4_downsizer_rg_last$D_IN;
    if (axi4_downsizer_wrBuffer$EN)
      axi4_downsizer_wrBuffer <= `BSV_ASSIGNMENT_DELAY
	  axi4_downsizer_wrBuffer$D_IN;
    if (axi4_downsizer_wrStbBuff$EN)
      axi4_downsizer_wrStbBuff <= `BSV_ASSIGNMENT_DELAY
	  axi4_downsizer_wrStbBuff$D_IN;
    if (rg_dm_addr$EN) rg_dm_addr <= `BSV_ASSIGNMENT_DELAY rg_dm_addr$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    axi4_downsizer_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    axi4_downsizer_rg_buffer =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    axi4_downsizer_rg_last = 1'h0;
    axi4_downsizer_rg_rd_rsp_state = 2'h2;
    axi4_downsizer_rg_req_addr = 64'hAAAAAAAAAAAAAAAA;
    axi4_downsizer_rg_req_beat = 4'hA;
    axi4_downsizer_rg_req_burst = 8'hAA;
    axi4_downsizer_rg_resp = 2'h2;
    axi4_downsizer_rg_rsp_beat = 4'hA;
    axi4_downsizer_rg_tot_beats = 12'hAAA;
    axi4_downsizer_rg_wr_state = 2'h2;
    axi4_downsizer_rg_wrr = 18'h2AAAA;
    axi4_downsizer_wrBuffer =
	448'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    axi4_downsizer_wrLen = 8'hAA;
    axi4_downsizer_wrStbBuff = 56'hAAAAAAAAAAAAAA;
    rg_dm_addr = 7'h2A;
    rg_env_ready = 1'h0;
    rg_init_state = 2'h2;
    rg_state_dm = 2'h2;
    rg_uart_buf = 32'hAAAAAAAA;
    rg_uart_timeout = 16'hAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (WILL_FIRE_RL_rl_ndm_reset)
      begin
        v__h25640 = $stime;
	#0;
      end
    v__h25634 = v__h25640 / 32'd10;
    if (WILL_FIRE_RL_rl_ndm_reset)
      $write("%0d: %m.rl_ndm_reset (non-debug-module) running = ", v__h25634);
    if (WILL_FIRE_RL_rl_ndm_reset) $write("'h%h", 1'b0);
    if (WILL_FIRE_RL_rl_ndm_reset) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	begin
	  v__h6119 = $stime;
	  #0;
	end
    v__h6113 = v__h6119 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$display("%0d: %m:AXI4_Downsizer.rl_wr_xaction_master_to_slave_small: m -> s",
		 v__h6113);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("    m_wra : ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("AXI4_Wr_Addr { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[108:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[20:18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[17:16]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h", axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("    m_wrd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[576:65]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[64:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small &&
	  axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small &&
	  !axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("    s_wrd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h", x__h5968[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h", x__h6030[7:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_small)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	begin
	  v__h6744 = $stime;
	  #0;
	end
    v__h6738 = v__h6744 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$display("%0d: %m:AXI4_Downsizer.rl_wr_xaction_master_to_slave_big: m -> s",
		 v__h6738);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("    m_wra : ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("AXI4_Wr_Addr { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[108:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[20:18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[17:16]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h", axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_addr$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  axi4_downsizer_rg_wr_state == 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write("    m_wrd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[576:65]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[64:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1 &&
	  axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1 &&
	  !axi4_downsizer_xactor_from_master_f_wr_data$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  ((axi4_downsizer_rg_wr_state == 2'd0) ?
	     2'd1 :
	     axi4_downsizer_rg_wr_state) ==
	  2'd1)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("    s_wra: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("AXI4_Wr_Addr { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", x1_avValue_fst_awid__h7021);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", x1_avValue_fst_awaddr__h7022);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", value__h7041);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", x1_avValue_fst_awburst__h7025);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", x1_avValue_fst_awlock__h7026);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", value__h7052);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", value__h7056);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", value__h7060);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", value__h7064);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("    s_wrd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("AXI4_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", x1_avValue_snd_fst_wdata__h7116);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", stb__h6331[7:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  stb__h6331[7:0] == 8'd0)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big &&
	  stb__h6331[7:0] != 8'd0)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_xaction_master_to_slave_big)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	begin
	  v__h8336 = $stime;
	  #0;
	end
    v__h8330 = v__h8336 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$display("%0d: %m:AXI4_Downsizer.rl_rd_req: m -> s", v__h8330);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("    m_rra : ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("AXI4_Rd_Addr { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[108:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[92:29]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[28:21]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[20:18]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[17:16]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h", axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("    s_rra: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("AXI4_Rd_Addr { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[108:93]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("'h%h", v__h7978);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("'h%h", 3'b011);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[17:16]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h", axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[15]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[14:11]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[10:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[7:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req)
	$write("'h%h",
	       axi4_downsizer_xactor_from_master_f_rd_addr$D_OUT[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_req) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master)
	begin
	  v__h7546 = $stime;
	  #0;
	end
    v__h7540 = v__h7546 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master)
	$display("%0d: %m::AXI4_Downsizer.rl_wr_resp_slave_to_master: m <- s",
		 v__h7540);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write("receive s_wrr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write("AXI4_Wr_Resp { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write("'h%h", axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT[17:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write("'h%h", axi4_downsizer_xactor_to_slave_f_wr_resp$D_OUT[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[0])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write("send wrr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write("AXI4_Wr_Resp { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write("'h%h",
	       IF_axi4_downsizer_ff_wrRsp_first__13_BIT_0_14__ETC___d138);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write("'h%h", x1_avValue_fst_bresp__h7714);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_wr_resp_slave_to_master &&
	  axi4_downsizer_ff_wrRsp$D_OUT[1])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	begin
	  v__h9025 = $stime;
	  #0;
	end
    v__h9019 = v__h9025 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$display("%0d: %m:AXI4_Downsizer.rl_rd_rsp: s -> m", v__h9019);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write("    s_rdd : ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("AXI4_Rd_Data { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("'h%h", axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[82:67]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("'h%h", axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[66:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("'h%h", axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[2:1]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp &&
	  axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[0])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp &&
	  !axi4_downsizer_xactor_to_slave_f_rd_data$D_OUT[0])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write("    m_rdd: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("AXI4_Rd_Data { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("'h%h", x1_avValue_snd_rid__h9164);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("'h%h", x1_avValue_snd_rdata__h9165);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp)
	$write("'h%h", x1_avValue_snd_rresp__h9166);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp &&
	  (x1_avValue_snd_snd_fst__h8825 != 4'd7 ||
	   x1_avValue_snd_snd_snd__h8826 != 12'd1))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp &&
	  x1_avValue_snd_snd_fst__h8825 == 4'd7 &&
	  x1_avValue_snd_snd_snd__h8826 == 12'd1)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axi4_downsizer_rl_rd_rsp) $write("\n");
  end
  // synopsys translate_on
endmodule  // mkAWSteria_System

